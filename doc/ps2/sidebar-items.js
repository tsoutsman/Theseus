window.SIDEBAR_ITEMS = {"enum":[["DeviceToHostResponse",""],["HostToKeyboardCommand",""],["HostToKeyboardCommandOrData",""],["HostToMouseCommand",""],["HostToMouseCommandOrData",""],["KeyboardType",""],["MouseId","See [MousePacket] and its enum variants for further information."],["MousePacket",""],["MouseResolution",""],["SampleRate",""],["ScancodeSet",""]],"fn":[["init_ps2_port1","initialize the first PS/2 data port"],["init_ps2_port2","initialize the second PS/2 data port"],["keyboard_detect","detect the [KeyboardType]"],["keyboard_scancode_set","set the scancode set of the keyboard"],["mouse_id","get the [MouseId]"],["read_mouse_packet","read the correct [MousePacket] according to [MouseId]"],["read_scancode","reads a Scancode (for now an untyped u8)"],["set_keyboard_led","set LED status of the keyboard"],["set_mouse_id","set the [MouseId] by magic sequence"],["status_register","Read the PS/2 status port/register"],["test_ps2_port1","test the first PS/2 data port"],["test_ps2_port2",""]],"struct":[["ControllerConfigurationByte","Used for [HostToControllerCommand::ReadFromInternalRAMByte0] and [HostToControllerCommand::WriteToInternalRAMByte0]"],["ControllerToHostStatus",""],["LEDState",""],["MousePacket3",""],["MousePacket4",""],["MousePacketGeneric",""]]};