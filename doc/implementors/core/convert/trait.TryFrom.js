(function() {var implementors = {};
implementors["mlx_ethernet"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"mlx_ethernet/command_queue/enum.CommandDeliveryStatus.html\" title=\"enum mlx_ethernet::command_queue::CommandDeliveryStatus\">CommandDeliveryStatus</a>","synthetic":false,"types":["mlx_ethernet::command_queue::CommandDeliveryStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"mlx_ethernet/command_queue/enum.CommandOpcode.html\" title=\"enum mlx_ethernet::command_queue::CommandOpcode\">CommandOpcode</a>","synthetic":false,"types":["mlx_ethernet::command_queue::CommandOpcode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"mlx_ethernet/command_queue/enum.CommandReturnStatus.html\" title=\"enum mlx_ethernet::command_queue::CommandReturnStatus\">CommandReturnStatus</a>","synthetic":false,"types":["mlx_ethernet::command_queue::CommandReturnStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"mlx_ethernet/command_queue/enum.HcaPortType.html\" title=\"enum mlx_ethernet::command_queue::HcaPortType\">HcaPortType</a>","synthetic":false,"types":["mlx_ethernet::command_queue::HcaPortType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"mlx_ethernet/send_queue/enum.SendQueueState.html\" title=\"enum mlx_ethernet::send_queue::SendQueueState\">SendQueueState</a>","synthetic":false,"types":["mlx_ethernet::send_queue::SendQueueState"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"mlx_ethernet/receive_queue/enum.ReceiveQueueState.html\" title=\"enum mlx_ethernet::receive_queue::ReceiveQueueState\">ReceiveQueueState</a>","synthetic":false,"types":["mlx_ethernet::receive_queue::ReceiveQueueState"]}];
implementors["serial_port_basic"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"serial_port_basic/enum.SerialPortAddress.html\" title=\"enum serial_port_basic::SerialPortAddress\">SerialPortAddress</a>","synthetic":false,"types":["serial_port_basic::SerialPortAddress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u16.html\">u16</a>&gt; for <a class=\"enum\" href=\"serial_port_basic/enum.SerialPortAddress.html\" title=\"enum serial_port_basic::SerialPortAddress\">SerialPortAddress</a>","synthetic":false,"types":["serial_port_basic::SerialPortAddress"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()