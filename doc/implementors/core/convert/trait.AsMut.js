(function() {var implementors = {
"memory":[["impl&lt;T: FromBytes, B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"struct\" href=\"memory/struct.MappedPages.html\" title=\"struct memory::MappedPages\">MappedPages</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;T&gt; for <a class=\"struct\" href=\"memory/struct.BorrowedMappedPages.html\" title=\"struct memory::BorrowedMappedPages\">BorrowedMappedPages</a>&lt;T, <a class=\"struct\" href=\"memory/struct.Mutable.html\" title=\"struct memory::Mutable\">Mutable</a>, B&gt;"],["impl&lt;T: FromBytes, B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"struct\" href=\"memory/struct.MappedPages.html\" title=\"struct memory::MappedPages\">MappedPages</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"memory/struct.BorrowedSliceMappedPages.html\" title=\"struct memory::BorrowedSliceMappedPages\">BorrowedSliceMappedPages</a>&lt;T, <a class=\"struct\" href=\"memory/struct.Mutable.html\" title=\"struct memory::Mutable\">Mutable</a>, B&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()