var searchIndex = JSON.parse('{\
"___Theseus_Crates___":{"doc":"Overview of Theseus","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"acpi":{"doc":"Code to parse the ACPI tables, based off of Redox. ","t":[5,5],"n":["get_acpi_tables","init"],"q":["acpi",""],"d":["Returns a reference to the singleton instance of all ACPI …","Parses the system’s ACPI tables "],"i":[0,0],"f":[[[],1],[[[3,[2]],4],[[6,[5]]]]],"p":[[6,"Mutex"],[3,"PhysicalAddress"],[4,"Option"],[3,"PageTable"],[15,"str"],[4,"Result"]]},\
"acpi_table":{"doc":"Definitions for the ACPI table","t":[6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11],"n":["AcpiSignature","AcpiTables","TableLocation","add_table_location","borrow","borrow","borrow_mut","borrow_mut","empty","fmt","from","from","into","into","map_new_table","mapping","offset","slice_offset_and_length","table","table_location","table_mut","table_slice","table_slice_mut","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["acpi_table","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["All ACPI tables are identified by a 4-byte signature, …","The struct holding all ACPI tables and records of where …","A record that tracks where an ACPI Table exists in memory, …","Add the location and size details of a discovered ACPI …","","","","","Returns a new empty <code>AcpiTables</code> object.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Map the ACPI table that exists at the given …","Returns an immutable reference to the underlying …","The offset of the statically-sized part of the table, …","The offset and length of the dynamically-sized part of the …","Returns a reference to the table that matches the …","Returns the location of the ACPI table based on the given …","Returns a mutable reference to the table that matches the …","Returns a reference to the dynamically-sized part at the …","Returns a mutable reference to the dynamically-sized part …","","","","","",""],"i":[0,0,0,1,1,7,1,7,1,7,1,7,1,7,1,1,7,7,1,1,1,1,1,1,7,1,7,1,7],"f":[0,0,0,[[1,2,3,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[],1],[[7,8],9],[[]],[[]],[[]],[[]],[[1,3,10],[[6,[5]]]],[1,11],0,0,[[1,2],[[6,[5]]]],[[1,2],[[4,[7]]]],[[1,2],[[6,[5]]]],[[1,2],[[6,[5]]]],[[1,2],[[6,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12]],"p":[[3,"AcpiTables"],[6,"AcpiSignature"],[3,"PhysicalAddress"],[4,"Option"],[15,"str"],[4,"Result"],[3,"TableLocation"],[3,"Formatter"],[6,"Result"],[3,"PageTable"],[3,"MappedPages"],[3,"TypeId"]]},\
"acpi_table_handler":{"doc":"Handles ACPI tables based on signatures.","t":[5],"n":["acpi_table_handler"],"q":["acpi_table_handler"],"d":["The single arbiter of ACPI Table types,  which contains a …"],"i":[0],"f":[[[1,2,3,4],[[6,[5]]]]],"p":[[3,"AcpiTables"],[6,"AcpiSignature"],[15,"usize"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"]]},\
"ap_start":{"doc":"Routines for booting up secondary CPU cores,  aka …","t":[7,5,5,5],"n":["AP_READY_FLAG","insert_ap_stack","kstart_ap","take_ap_stack"],"q":["ap_start","","",""],"d":["An atomic flag used for synchronizing progress between the …","Insert a new stack that was allocated for the AP with the …","Entry to rust for an AP. The arguments must match the …","Remove the stack that was allocated for the AP with the …"],"i":[0,0,0,0],"f":[0,[[1,2]],[[1,3,4,4,5,6],7],[1,[[9,[[8,[2]]]]]]],"p":[[15,"u32"],[3,"Stack"],[3,"CpuId"],[3,"VirtualAddress"],[15,"u8"],[15,"u16"],[15,"never"],[3,"NoDrop"],[4,"Option"]]},\
"apic":{"doc":"","t":[13,17,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,7,13,4,13,17,4,4,4,4,3,4,13,13,13,13,13,13,13,13,13,3,13,13,13,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,12,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,12,12,12,12,12,12,12,11,11,12,11,12,11,11,11,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["APIC","APIC_SPURIOUS_INTERRUPT_IRQ","All","AllButMe","AlreadyExisted","ApicId","ApicRegisters","By1","By128","By16","By2","By32","By4","By64","By8","ExtInt","Fixed","INTERRUPT_CHIP","Init","InterruptChip","InvalidNmiLint","LOCAL_APIC_LVT_IRQ","LapicDeliveryMode","LapicInitError","LapicIpiDestination","LapicTimerDivide","LocalApic","LvtLint","Me","MemoryMappingError","Nmi","NotAP","NotBSP","One","PIC","Pin0","Pin1","RegisterArray","Smi","UnexpectedApicID","X2APIC","apic_id","arbitration_priority","as_icr_value","bootstrap_cpu","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_error","clear_pmi_mask","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cpu_count","current_cpu","destination_format","drop","enable_lvt_timer","eoi","eoi","eq","eq","error","error_status","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_irr","get_isr","get_lapics","get_my_apic","has_x2apic","hash","icr","in_service_registers","init","init","interrupt_command_high","interrupt_command_low","interrupt_request_registers","into","into","into","into","into","into","into","into","into","into","is_bootstrap_cpu","is_bootstrap_cpu","lapic_id","lapic_version","logical_destination","lvt_cmci","lvt_error","lvt_lint0","lvt_lint1","lvt_perf_monitor","lvt_thermal","lvt_timer","partial_cmp","processor_id","processor_priority","read_apic_id","remote_read","send_ipi","send_nmi_ipi","set_icr","set_nmi","spurious_interrupt_vector","task_priority","timer_current_count","timer_divide","timer_initial_count","to_owned","to_owned","to_owned","to_owned","to_string","trigger_mode_registers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","version","actual","expected"],"q":["apicapic::LapicInitError",""],"d":["","The IRQ number reserved for spurious APIC interrupts (as …","Send IPI to all APICs, including myself","Send IPI to all APICs except for myself","The Local APIC already existed (BUG), given by the …","A unique identifier for a Local APIC, i.e., a CPU on …","A structure that offers access to APIC/xAPIC through its …","","","","","","","","","Causes the CPU to respond to the interrupts as if it …","Delivers the interrupt (as normal) to the IRQ specified in …","The interrupt chip that is currently configured on this …","Delivers an INIT request to the CPU; the vector field …","","Invalid NMI local interrupt pin value; given by the …","The IRQ number reserved for Local APIC timer interrupts in …","The delivery mode used when an interrupt is sent to a CPU …","The possible errors that can occur in <code>LocalApic::init()</code>.","The possible destination shorthand values for IPI ICR.","The possible values for the Local APIC Timer Divide …","This structure represents a single Local APIC in the …","The Local APIC’s vector table local interrupt pins.","Send IPI to my own (the current) APIC  ","An error occurred while mapping the Local APIC’s MMIO …","Delivers an NMI interrupt to the CPU; the vector field is …","This CPU wasn’t an AP, as expected.","This CPU wasn’t the BSP, as expected.","Send IPI to a specific APIC ","","","","","Delivers an SMI interrupt to the CPU; the vector field …","The actual APIC ID did not match the provided expected …","","Returns the ID of this Local APIC (fast).","","Convert the enum to a bitmask value to be used in the …","Returns the APIC ID of the bootstrap CPU (if known), which …","","","","","","","","","","","","","","","","","","","","","Clears/resets this lapic’s error register.","Clears the interrupt mask bit in the apic performance …","","","","","","","","","","Returns the number of CPUs (SMP cores) that exist  and are …","Returns the ID of the currently executing CPU.","","","Enable (unmask) or disable (mask) the LVT timer interrupt …","Send an End Of Interrupt (EOI) signal to this local APIC, …","","","","Returns the value of this lapic’s error register.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the values of the 8 request registers for this …","Returns the values of the 8 in-service registers for this …","Returns a reference to the list of LocalApics, one per CPU …","Returns a reference to the LocalApic for the currently …","Returns true if the machine has support for x2apic","","Reads the current value of this lapic’s Interrupt …","","Determines whether this system contains an xapic or x2apic …","Creates and initializes a new <code>LocalApic</code> for the current …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the currently executing CPU is the …","Returns <code>true</code> if this CPU core was the BootStrap Processor …","This Local APIC’s ID.","","","","","","","","","","","Returns the “processor ID” of this local APIC, which …","","Reads the hardware-provided ID of this Local APIC from its …","","Send an IPI to the cores specified by the given destination","Send a NMI IPI to the cores specified by the given …","Writes <code>value</code> to this lapic’s Interrupt Control Register.","Set the NonMaskableInterrupt redirect for this LocalApic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inner raw value read from the Local APIC ID …","Returns the version of this lapic.","",""],"i":[6,0,3,3,14,0,0,8,8,8,8,8,8,8,8,7,7,0,7,0,14,0,0,0,0,0,0,0,3,14,7,14,14,3,6,21,21,0,7,14,6,1,24,3,0,3,21,1,2,6,7,8,24,25,14,3,21,1,2,6,7,8,24,25,14,1,1,2,6,7,8,2,6,7,8,2,0,0,24,1,1,1,24,2,6,1,24,1,2,2,2,2,2,2,6,7,8,14,3,21,1,2,6,7,8,24,25,14,1,1,0,0,0,2,1,24,0,1,24,24,24,3,21,1,2,6,7,8,24,25,14,0,1,24,24,24,24,24,24,24,24,24,24,2,1,24,1,24,1,1,1,1,24,24,24,24,24,2,6,7,8,2,24,3,21,1,2,2,6,7,8,24,25,14,3,21,1,2,6,7,8,24,25,14,3,21,1,2,6,7,8,24,25,14,2,1,26,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[3,4],[[],[[5,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[2,2],[6,6],[7,7],[8,8],[[]],[[]],[[]],[[]],[[2,2],9],[[],10],[[],2],0,[1],[[1,11]],[1],0,[[2,2],11],[[6,6],11],[1,10],0,[[1,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[2,12],13],[[6,12],13],[[7,12],13],[[8,12],13],[[14,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[[],15],[[],[[5,[16]]]],[[],11],[2],[1,4],0,[[]],[[17,10,[5,[10]],11,18,19],[[20,[14]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[1,11],0,0,0,0,0,0,0,0,0,0,[[2,2],[[5,[9]]]],[1,10],0,[1,2],0,[[1,18,3]],[[1,3]],[[1,4]],[[1,21,19]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],22],0,[[],20],[[],20],[[],20],[[],20],[10,[[20,[2]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[2,10],[1,10],0,0],"p":[[3,"LocalApic"],[3,"ApicId"],[4,"LapicIpiDestination"],[15,"u64"],[4,"Option"],[4,"InterruptChip"],[4,"LapicDeliveryMode"],[4,"LapicTimerDivide"],[4,"Ordering"],[15,"u32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"LapicInitError"],[3,"AtomicMap"],[3,"RwLockIrqSafe"],[3,"PageTable"],[15,"u8"],[15,"u16"],[4,"Result"],[4,"LvtLint"],[3,"String"],[3,"TypeId"],[3,"ApicRegisters"],[3,"RegisterArray"],[13,"UnexpectedApicID"]],"a":{"cores":[76],"lapic":[26],"lint":[27],"lint0":[27],"lint1":[27],"lvt":[27],"numcpus":[76]}},\
"app_io":{"doc":"A simple library that handles stdio queues for …","t":[8,8,3,11,11,11,11,12,11,5,11,5,14,5,14,10,5,5,12,5,12,5,12,5,11,11,11,11,10,11],"n":["ImmutableRead","ImmutableWrite","IoStreams","borrow","borrow_mut","clone","clone_into","discipline","from","insert_child_streams","into","line_discipline","print","print_to_stdout_args","println","read","remove_child_streams","stderr","stderr","stdin","stdin","stdout","stdout","streams","to_owned","try_from","try_into","type_id","write","write_all"],"q":["app_io","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Stores the stdio queues and line discipline. The stored …","","","","","","Returns the argument unchanged.","Shells call this function to store queue stdio streams for …","Calls <code>U::from(self)</code>.","Returns the application’s line discipline.","The main printing macro, which simply writes to the …","Converts the given <code>core::fmt::Arguments</code> to a <code>String</code> and …","Calls <code>print!()</code> with an extra newline (‘\\\\n’) appended …","","Shells call this function to remove queues and pointer to …","Applications call this function to acquire a writer to its …","The writer to stderr.","Applications call this function to acquire a reader to its …","The reader to stdin.","Applications call this function to acquire a writer to its …","The writer to stdout.","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,11,0,0,1,0,1,0,1,0,1,1,1,1,10,10],"f":[0,0,0,[[]],[[]],[1,1],[[]],0,[[]],[[2,1],[[3,[1]]]],[[]],[[],[[7,[[5,[4]],6]]]],0,[8],0,[[],[[9,[2]]]],[2,[[3,[1]]]],[[],[[7,[[5,[10]],6]]]],0,[[],[[7,[[5,[11]],6]]]],0,[[],[[7,[[5,[10]],6]]]],0,[[],[[7,[1,6]]]],[[]],[[],7],[[],7],[[],12],[[],[[9,[2]]]],[[],9]],"p":[[3,"IoStreams"],[15,"usize"],[4,"Option"],[3,"LineDiscipline"],[3,"Arc"],[15,"str"],[4,"Result"],[3,"Arguments"],[6,"Result"],[8,"ImmutableWrite"],[8,"ImmutableRead"],[3,"TypeId"]]},\
"arm_boards":{"doc":"Configuration and definitions for specific boards on …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"async_channel":{"doc":"An asynchronous channel for Inter-Task Communication (ITC) …","t":[13,4,13,4,3,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChannelDisconnected","ChannelStatus","Connected","Error","Receiver","ReceiverDisconnected","Sender","SenderDisconnected","WouldBlock","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","drop","drop","eq","eq","fmt","fmt","from","from","from","from","into","into","into","into","is_disconnected","is_disconnected","new_channel","new_channel_with","receive","receive_buf","receiver","send","send_all","send_buf","sender","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_receive","try_receive_buf","try_send","try_send_buf","type_id","type_id","type_id","type_id"],"q":["async_channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Occurs when one end of channel is dropped","Indicates whether channel is Connected or Disconnected","Channel is working. Initially channel is created with …","Error type for tracking different type of errors sender …","The receiver side of a channel.","Set to Disconnected when Receiver end is dropped.","The sender (transmit) side of a channel.","Set to Disconnected when Sender end is dropped.","Occurs when a “try” operation would need to block to …","","","","","","","","","Clones this <code>Sender</code>, returning another <code>Sender</code> connected to …","Clones this <code>Receiver</code>, returning another <code>Receiver</code> connected …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the channel is disconnected.","Returns true if the channel is disconnected.","Create a new channel that allows senders and receivers to  …","Creates a new asynchronous channel with the specified …","Receive a message, blocking until a message is available …","Receives objects placing them in a buffer and returning …","Obtain a <code>Receiver</code> endpoint connected to the same channel …","Send a message, blocking until space in the channel’s …","Attempts to send an entire slice of objects through the …","Sends a slice of objects through the channel, returning …","Obtain a <code>Sender</code> endpoint connected to the same channel as …","","","","","","","","","","","","Tries to receive a message, only succeeding if a message …","Receives objects placing them in a buffer and returning …","Tries to send the message, only succeeding if buffer space …","Sends a slice of objects through the channel, returning …","","","",""],"i":[7,0,5,0,0,5,0,5,7,3,4,5,7,3,4,5,7,3,4,5,3,4,5,3,4,5,7,5,7,3,4,5,7,3,4,5,7,3,4,0,0,4,4,3,3,3,3,4,3,4,5,3,4,5,7,3,4,5,7,4,4,3,3,3,4,5,7],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]],[[3,[1,2]]]],[[[4,[1,2]]],[[4,[1,2]]]],[5,5],[[]],[[]],[[]],[[[3,[1,2]]]],[[[4,[1,2]]]],[[5,5],6],[[7,7],6],[[5,8],9],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]],6],[[[4,[1,2]]],6],[10],[10],[[[4,[1,2]]],[[11,[1,7]]]],[[[4,[1,2]]],[[11,[10,7]]]],[[[3,[1,2]]],[[4,[1,2]]]],[[[3,[1,2]],1],[[11,[7]]]],[[[3,[1,2]]],[[11,[7]]]],[[[3,[1,2]]],[[11,[10,7]]]],[[[4,[1,2]]],[[3,[1,2]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[[4,[1,2]]],[[11,[1,7]]]],[[[4,[1,2]]],[[11,[10,7]]]],[[[3,[1,2]],1],11],[[[3,[1,2]]],[[11,[10,7]]]],[[],12],[[],12],[[],12],[[],12]],"p":[[8,"Send"],[8,"DeadlockPrevention"],[3,"Sender"],[3,"Receiver"],[4,"ChannelStatus"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"ata":{"doc":"Basic driver for accessing ATA drives (IDE) as a storage …","t":[18,4,3,6,3,3,3,3,3,3,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,13,13,13,13,18,18,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,11,11,12,12,12],"n":["ADDRESS_MARK_NOT_FOUND","AtaDeviceType","AtaDrive","AtaDriveRef","AtaError","AtaFirmwareVersion","AtaIdentifyData","AtaModelNumber","AtaSerialNumber","AtaStatus","BAD_BLOCK","BUSY","COMMAND_ABORTED","CORRECTED_DATA","DATA_REQUEST_READY","DRIVE_READY","DRIVE_SEEK_COMPLETE","DRIVE_WRITE_FAULT","ERROR","ID_MARK_NOT_FOUND","INDEX","IdeController","IdeControllerIter","MEDIA_CHANGED","MEDIA_CHANGE_REQUEST","Pata","PataPi","Sata","SataPi","TRACK_0_NOT_FOUND","UNCORRECTABLE_DATA","additional_product_id","additional_supported","advanced_pio_modes","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","block_alignment","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","cfa_power_mode1","checksum","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","command_set_active","command_set_active_ext","command_set_support","command_set_support_ext","complement","complement","contains","contains","current_acoustic_value","current_apm_level","current_media_serial_number","current_multi_sector_setting","current_sector_capacity","current_sectors_per_track","data_set_management_feature","default","default","default","default","devices","difference","difference","dsm_cap","empty","empty","enhanced_security_erase_unit","eq","eq","ext_command_supported","extend","extend","extended_num_of_user_addressable_sectors","firmware_version","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_fall_control_sensitivity","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","general_configuration","get_hash","get_hash","hardware_reset_result","hash","hash","insert","insert","inter_seek_delay","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","is_master","iter","len","major_revision","master_password_id","max_48_bit_lba","max_blocks_per_download_microcode","max_blocks_per_transfer","min_blocks_per_download_microcode","minimum_mw_transfer_cycle_time","minimum_pio_cycle_time","minimum_pio_cycle_time_io_ready","minor_revision","model_number","msn_support","multiword_dma_active","multiword_dma_support","new","next","nominal_form_factor","nominal_media_rotation_rate","normal_security_erase_unit","not","not","num_current_cylinders","num_current_heads","num_cylinders","num_heads","num_sectors_per_track","nv_cache_capabilities","nv_cache_size_lsw","nv_cache_size_msw","nv_cache_time_to_spin_up_in_seconds","partial_cmp","partial_cmp","physical_logical_sector_size","primary_master","primary_slave","queue_depth","read_blocks","read_pio","recommended_acoustic_value","recommended_mw_transfer_cycle_time","remove","remove","reserved_for_expanded_support_and_active","reserved_for_tlc_technical_report","reserved_for_world_wide_name_128","sct_command_transport","secondary_master","secondary_slave","security_status","serial_ata_capabilities","serial_ata_features_enabled","serial_ata_features_supported","serial_number","set","set","signature","size_in_blocks","specific_configuration","stream_min_request_size","streaming_access_latency_dma_pio","streaming_perf_granularity","streaming_transfer_time","streaming_transfer_time_dma","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","toggle","translation_fields_valid","transport_major_version","transport_minor_version","trusted_computing","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ultra_dma_active","ultra_dma_support","union","union","user_addressable_sectors","vendor_unique1","vendor_unique2","words_per_logical_sector","world_wide_name","write_blocks","write_pio","write_read_verify_sector_count_mode","write_read_verify_sector_count_mode_2_only","write_read_verify_sector_count_mode_3_only"],"q":["atad":["","The possible types of drive devices that can be attached …","A single ATA drive, either a master or a slave,  which …","","The possible error values found in an ATA drive’s error …","An ATA drive’s firmware version is an 8-byte string.","Information that describes an ATA drive,  obtained from …","An ATA drive’s model number is a 40-byte string.","An ATA drive’s serial number is a 20-byte string.","The possible status values found in an ATA drive’s …","","When set, the drive’s port values are still changing, so …","","","When <strong>cleared</strong>, the drive is ready for data to be …","When set, the drive is on. When cleared, the drive is …","","","","","","A single IDE controller has two buses with up to two …","Provides an iterator over all <code>AtaDrive</code>s in an <code>IdeController</code>…","","","A parallel ATA (PATA) drive, like a hard drive. This is …","A parallel ATA (PATA) drive that uses the packet interface,","A serial ATA (SATA) drive that is operating in legacy IDE …","A serial ATA (SATA) drive that that is operating in legacy …","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","","","","MultiSectorSettingValid : 1; ReservedByte59 : 3; …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if this drive is the master, or <code>false</code> if it …","Returns an <code>Iterator</code> over all of the <code>AtaDrive</code>s  that exist …","","","","Number of sectors in the drive, if using 48-bit LBA.  This …","","Maximum number of blocks per transfer. Sometimes referred …","","","","","","","","","","Creates a new instance of an IDE controller based on the …","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","<code>[0:3]</code> Physical sector size (in logical sectors)","","","only the first 5 bits are used, others are reserved","","Reads data from this drive starting at the given …","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","A bitmask of translation fields valid and free fall …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Number of sectors in the drive, if using 28-bit LBA.  This …","","","","","","Writes data from the provided <code>buffer</code> to this drive, …","","",""],"i":[1,0,0,0,0,0,0,0,0,0,1,2,1,2,2,2,2,2,2,1,2,0,0,1,1,31,31,31,31,1,1,8,8,8,1,2,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,1,2,1,2,1,2,1,2,1,2,1,2,1,2,8,5,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,8,8,8,1,2,7,8,9,10,11,1,2,7,8,9,10,11,1,2,8,8,8,8,1,2,1,2,8,8,8,8,8,8,8,8,9,10,11,14,1,2,8,1,2,8,1,2,8,1,2,8,8,5,1,1,1,1,1,2,2,2,2,2,5,14,8,9,9,10,10,11,11,8,31,1,2,5,14,7,8,9,10,11,1,2,1,2,1,2,1,2,8,1,2,8,1,2,1,2,8,1,2,1,2,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,7,1,2,1,2,5,14,5,8,8,8,8,8,8,8,8,8,8,8,8,8,8,14,7,8,8,8,1,2,8,8,8,8,8,8,8,8,8,1,2,8,14,14,8,5,5,8,8,1,2,8,8,8,8,14,14,8,8,8,8,8,1,2,8,5,8,8,8,8,8,8,1,2,1,2,1,2,1,2,7,8,9,10,11,9,10,11,1,2,8,8,8,8,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,31,1,2,5,14,7,8,9,10,11,8,8,1,2,8,8,8,8,8,5,5,8,8,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[1,4],[2,4],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],0,[5,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1,1],[2,2],[7,7],[8,8],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[[2,2],12],0,0,0,0,[1,1],[2,2],[[1,1],13],[[2,2],13],0,0,0,0,0,0,0,[[],8],[[],9],[[],10],[[],11],[14,[[16,[15]]]],[[1,1],1],[[2,2],2],0,[[],1],[[],2],0,[[1,1],13],[[2,2],13],0,[[1,17]],[[2,17]],0,0,[5,[[19,[18]]]],[[1,20],21],[[1,20],21],[[1,20],21],[[1,20],21],[[1,20],21],[[2,20],21],[[2,20],21],[[2,20],21],[[2,20],21],[[2,20],21],[[5,20],21],[[14,20],21],[[8,20],21],[[9,20],21],[[9,20],21],[[10,20],21],[[10,20],21],[[11,20],21],[[11,20],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[22,[1]]]],[4,[[22,[2]]]],[4,1],[4,2],[4,1],[4,2],[17,1],[17,2],0,[[],23],[[],23],0,[1],[2],[[1,1]],[[2,2]],0,[[1,1],1],[[2,2],2],[[1,1],13],[[2,2],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[[[16,[24]]],[[16,[3,24]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[25,[[25,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[26,[[26,[3]]]],[[]],[1,13],[2,13],[1,13],[2,13],[5,13],[14,7],[5,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27,[[19,[14,28]]]],[7,22],0,0,0,[1,1],[2,2],0,0,0,0,0,0,0,0,0,[[1,1],[[22,[12]]]],[[2,2],[[22,[12]]]],0,0,0,0,[[5,6],[[19,[6,18]]]],[[5,6],[[19,[6,28]]]],0,0,[[1,1]],[[2,2]],0,0,0,0,0,0,0,0,0,0,0,[[1,1,13]],[[2,2,13]],0,[5,6],0,0,0,0,0,0,[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[1,1],1],[[2,2],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[1,1]],[[2,2]],0,0,0,0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,0,[[1,1],1],[[2,2],2],0,0,0,0,0,[[5,6],[[19,[6,18]]]],[[5,6],[[19,[6,28]]]],0,0,0],"p":[[3,"AtaError"],[3,"AtaStatus"],[8,"Any"],[15,"u8"],[3,"AtaDrive"],[15,"usize"],[3,"IdeControllerIter"],[3,"AtaIdentifyData"],[3,"AtaSerialNumber"],[3,"AtaModelNumber"],[3,"AtaFirmwareVersion"],[4,"Ordering"],[15,"bool"],[3,"IdeController"],[8,"Iterator"],[3,"Box"],[8,"IntoIterator"],[4,"IoError"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"u64"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"PciDevice"],[15,"str"],[3,"String"],[3,"TypeId"],[4,"AtaDeviceType"]]},\
"atomic_linked_list":{"doc":"","t":[0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["atomic_linked_list","atomic_map","AtomicLinkedList","AtomicLinkedListIter","AtomicLinkedListIterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","into","into","into","into_iter","into_iter","iter","iter_mut","new","next","next","push_front","push_front_timeout","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AtomicMap","AtomicMapIter","AtomicMapIterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","fmt","from","from","from","get","get_mut","insert","insert_timeout","into","into","into","into_iter","into_iter","iter","new","next","next","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["atomic_linked_list","","atomic_linked_list::atomic_linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","atomic_linked_list::atomic_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A basic atomic linked list.  A generic, singly-linked list …","A basic map structure which is backed by an atomic linked …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","returns a forward iterator through this linked list. ","returns a forward iterator through this linked list, …","Create a new empty AtomicLinkedList.","","","add a new element to the front of the list.","add a new element to the front of the list, but will abort …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value matching the given key, …","Returns a mutable reference to the value matching the …","Adds a new key-value pair to the map.  If the given key is …","Adds a new key-value pair to the map.  If the given key is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a forward iterator through this map. ","Create a new empty AtomicMap.","","","","","","","","","","",""],"i":[0,0,0,0,0,5,6,2,5,6,2,2,5,6,2,5,6,2,5,6,2,2,2,5,6,2,2,5,6,2,5,6,2,5,6,2,0,0,0,12,14,11,12,14,11,11,11,12,14,11,11,11,11,11,12,14,11,12,14,11,11,12,14,12,14,11,12,14,11,12,14,11],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,5],[2,6],[[],2],[5,7],[6,7],[2,8],[[2,9],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11],[[[11,[1]],3],4],[[]],[[]],[[]],[11,7],[11,7],[11,7],[[11,9],[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[11,12],[[],11],[[[12,[13]]],7],[[[14,[13]]],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],[[],10]],"p":[[8,"Debug"],[3,"AtomicLinkedList"],[3,"Formatter"],[6,"Result"],[3,"AtomicLinkedListIter"],[3,"AtomicLinkedListIterMut"],[4,"Option"],[4,"Result"],[15,"u64"],[3,"TypeId"],[3,"AtomicMap"],[3,"AtomicMapIter"],[8,"PartialEq"],[3,"AtomicMapIterMut"]]},\
"block_allocator":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["FixedSizeBlockAllocator","allocate","borrow","borrow_mut","deallocate","from","init","into","new","try_from","try_into","type_id"],"q":["block_allocator","","","","","","","","","","",""],"d":["","Allocates a chunk of the given size with the given …","","","Frees the given allocation. <code>ptr</code> must be a pointer returned …","Returns the argument unchanged.","Initialize the allocator with the given heap bounds.","Calls <code>U::from(self)</code>.","Creates an empty FixedSizeBlockAllocator.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[1,2],3],[[]],[[]],[[1,3,2]],[[]],[[1,4,4]],[[]],[[],1],[[],5],[[],5],[[],6]],"p":[[3,"FixedSizeBlockAllocator"],[3,"Layout"],[15,"u8"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"block_cache":{"doc":"A caching layer for block based storage devices.","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BlockCache","as_any","as_any_mut","borrow","borrow_mut","flush","from","into","into_any","into_any_arc","into_any_rc","new","read_block","try_from","try_into","type_id","write_block"],"q":["block_cache","","","","","","","","","","","","","","","",""],"d":["A cache to store read and written blocks from a storage …","","","","","Flushes the given block to the backing storage device.  If …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Creates a new <code>BlockCache</code> device ","An internal function that first checks the cache for a …","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[[],1],[[],1],[[]],[[]],[[2,[4,[3]]],[[6,[5]]]],[[]],[[]],[[[8,[7]]],[[8,[1,7]]]],[9,[[9,[1]]]],[10,[[10,[1]]]],[11,2],[[2,3],[[6,[5]]]],[[],6],[[],6],[[],12],[[2,3,13],[[6,[5]]]]],"p":[[8,"Any"],[3,"BlockCache"],[15,"usize"],[4,"Option"],[15,"str"],[4,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"StorageDeviceRef"],[3,"TypeId"],[4,"Cow"]]},\
"boot_info":{"doc":"This crate provides an abstraction over multiboot2 and …","t":[18,16,13,8,13,18,8,16,3,16,4,3,13,8,16,16,8,16,16,3,13,13,18,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,12,10,10,0,10,10,11,11,12,11,10,11,10,10,10,10,10,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11],"n":["ALLOCATED","AdditionalReservedMemoryRegions","BgrPixel","BootInformation","CustomPixel","EXECUTABLE","ElfSection","ElfSection","ElfSectionFlags","ElfSections","FramebufferFormat","FramebufferInfo","Grayscale","MemoryRegion","MemoryRegion","MemoryRegions","Module","Module","Modules","ReservedMemoryRegion","RgbPixel","TextCharacter","WRITABLE","additional_reserved_memory_regions","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits_per_pixel","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","complement","contains","difference","elf_sections","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","framebuffer_info","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","height","insert","intersection","intersects","into","into","into","into","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_mapped","is_usable","kernel_end","len","len","len","len","len","memory_regions","modules","multiboot2","name","name","not","partial_cmp","phys_addr","remove","rsdp","set","stack_size","start","start","start","start","start","stride","sub","sub_assign","symmetric_difference","toggle","total_size_in_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","virt_addr","width","blue_bit_position","blue_size_in_bits","green_bit_position","green_size_in_bits","red_bit_position","red_size_in_bits","MemoryRegions","borrow","borrow_mut","from","into","into_iter","next","try_from","try_into","type_id"],"q":["boot_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boot_info::FramebufferFormat","","","","","","boot_info::multiboot2","","","","","","","","",""],"d":["The section occupies memory during the process execution.","","The format of a pixel is <code>[Pad] &lt;Blue&gt; &lt;Green&gt; &lt;Red&gt;</code>, in …","","Custom pixel format of up to 32-bit pixels.","The section contains executable machine instructions.","","","ELF section flags.","","The format of the framebuffer, in graphical pixels or …","Information about a framebuffer’s layout in memory.","The format of a pixel is <code>[Pad] &lt;Gray&gt;</code>, in which <code>Gray</code> is a …","","","","","","","","The format of a pixel is <code>[Pad] &lt;Red&gt; &lt;Green&gt; &lt;Blue&gt;</code>, in …","The framebuffer is an EGA text-mode display comprised of …","The section contains data that should be writable during …","Returns additional reserved memory regions that aren’t …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","The number of bits that each pixel occupies in memory. If …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the kernel’s ELF sections.","Returns an empty set of flags.","","","Returns the section’s flags.","","","","","","","","","The format of the framebuffer and its pixels or characters.","Returns information about the graphical framebuffer, if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","The height in pixels (number of rows) of the framebuffer. …","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns whether the region is empty.","Returns whether the section is empty.","Returns whether the module is empty.","Returns whether the boot information is empty.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if the bootloader mapped the framebuffer and …","Returns whether the region can be used by the frame …","Returns the end of the kernel’s image in memory.","Returns the region’s length.","Returns the section’s length in memory, as opposed to …","Returns the module’s length.","Returns the boot information’s length.","","Returns memory regions describing the physical memory.","Returns the modules found in the kernel image.","","Returns the section’s name.","Returns the module’s name.","Returns the complement of this set of flags.","","The physical address of the start of the framebuffer.","Removes the specified flags in-place.","Returns the RSDP if it was provided by the bootloader.","Inserts or removes the specified flags depending on the …","Returns the stack size in bytes.","Returns the region’s starting physical address.","Returns the section’s starting virtual address.","Returns the module’s starting physical address.","Returns the boot information’s starting virtual address.","","The number of pixels between the start of one line (row) …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","The total size of the framebuffer memory in bytes.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","The virtual address of the start of the framebuffer, if it …","The width in pixels (number of columns) of the framebuffer.","The bit position of the least significant bit of a pixel’…","The size of a pixel’s blue component, in number of bits.","The bit position of the least significant bit of a pixel’…","The size of a pixel’s green component, in number of bits.","The bit position of the least significant bit of a pixel’…","The size of a pixel’s red component, in number of bits.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[3,19,5,0,5,3,0,19,0,19,0,0,5,0,19,19,0,19,19,0,5,5,3,19,3,3,3,3,3,3,12,3,3,3,11,12,5,3,11,12,5,3,5,3,3,3,3,19,3,3,3,20,3,3,3,3,3,11,12,5,12,19,3,11,12,5,3,3,3,3,3,12,3,3,3,3,11,12,5,3,21,20,22,19,3,12,21,19,21,20,22,19,11,19,19,0,20,22,3,3,12,3,19,3,19,21,20,22,19,11,12,3,3,3,3,12,3,11,12,5,3,11,12,5,3,11,12,5,3,12,12,23,23,23,23,23,23,0,18,18,18,18,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],3],[[3,3],3],[[3,3]],[[3,3],3],[[3,3]],[3,4],0,[[3,3],3],[[3,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[5,5],[[3,3],6],[3,3],[[3,3],7],[[3,3],3],[[],[[2,[1]]]],[[],3],[[3,3],7],[[3,8]],[[],3],[[3,9],10],[[3,9],10],[[3,9],10],[[3,9],10],[[3,9],10],[[11,9],10],[[12,9],10],[[5,9],10],0,[[],[[13,[12]]]],[[]],[[]],[[]],[[]],[4,[[13,[3]]]],[4,3],[4,3],[8,3],[3],0,[[3,3]],[[3,3],3],[[3,3],7],[[]],[[]],[[]],[[]],[3,7],[[],7],[[],7],[[],7],[[],7],[3,7],[12,7],[[],7],[[],[[2,[14,1]]]],[[],15],[[],15],[[],15],[[],15],0,[[],[[2,[1]]]],[[]],0,[[],1],[[],[[2,[1,1]]]],[3,3],[[3,3],[[13,[6]]]],0,[[3,3]],[[],[[13,[16]]]],[[3,3,7]],[[],[[2,[15,1]]]],[[],16],[[],14],[[],16],[[],[[13,[14]]]],0,0,[[3,3],3],[[3,3]],[[3,3],3],[[3,3]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],17],[[],17],[[],17],[[],17],[[3,3],3],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[18,13],[[],2],[[],2],[[],17]],"p":[[15,"str"],[4,"Result"],[3,"ElfSectionFlags"],[15,"u64"],[4,"FramebufferFormat"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"ReservedMemoryRegion"],[3,"FramebufferInfo"],[4,"Option"],[3,"VirtualAddress"],[15,"usize"],[3,"PhysicalAddress"],[3,"TypeId"],[3,"MemoryRegions"],[8,"BootInformation"],[8,"ElfSection"],[8,"MemoryRegion"],[8,"Module"],[13,"CustomPixel"]]},\
"bootloader_modules":{"doc":"An abstraction for bootloader-provided “modules”.","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BootloaderModule","borrow","borrow_mut","end_address","fmt","from","into","name","new","size_in_bytes","start_address","try_from","try_into","type_id"],"q":["bootloader_modules","","","","","","","","","","","","",""],"d":["A record of a bootloader module’s name and location in …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,2],[[1,3],4],[[]],[[]],[1,5],[[2,2,5],1],[1,6],[1,2],[[],7],[[],7],[[],8]],"p":[[3,"BootloaderModule"],[3,"PhysicalAddress"],[3,"Formatter"],[6,"Result"],[3,"String"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"captain":{"doc":"The main initialization routine and setup logic of the OS. ","t":[3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DropAfterInit","MulticoreBringupInfo","ap_gdt","ap_start_realmode_begin","ap_start_realmode_end","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","from","from","identity_mappings","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["captain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Items that must be held until the end of <code>init()</code> and should …","Information needed to bring up APs (secondary CPUs) on …","The address of the GDT set up for each AP (secondary CPU)","The starting virtual addresses of the <code>ap_start</code> realmode …","The ending virtual addresses (exclusive) of the <code>ap_start</code> …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Initialize the Captain, which is the main crate that “…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,6,6,6,5,6,5,6,5,6,5,6,5,6,5,0,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6],"f":[0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,[4,[3]],5,6,[8,[7]]],[[10,[9]]]],[[]],[[]],[[[12,[11]]],[[12,[1,11]]]],[[[12,[11]]],[[12,[1,11]]]],[13,[[13,[1]]]],[13,[[13,[1]]]],[14,[[14,[1]]]],[14,[[14,[1]]]],[[],10],[[],10],[[],10],[[],10],[[],15],[[],15],[[]],[[]]],"p":[[8,"Any"],[6,"MmiRef"],[3,"Stack"],[3,"NoDrop"],[3,"DropAfterInit"],[3,"MulticoreBringupInfo"],[3,"PhysicalAddress"],[4,"Option"],[15,"str"],[4,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TypeId"]]},\
"catch_unwind":{"doc":"Support for catching a panic while a panicked <code>Task</code> is …","t":[5,5],"n":["catch_unwind_with_arg","resume_unwind"],"q":["catch_unwind",""],"d":["Invokes the given closure <code>f</code>, catching a panic as it is …","Resumes the unwinding procedure after it was caught with …"],"i":[0,0],"f":[[[],[[2,[1]]]],[1,3]],"p":[[4,"KillReason"],[4,"Result"],[15,"never"]]},\
"color":{"doc":"A simple representation of the standard RGB color model.","t":[17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BLACK","BLUE","BROWN","CYAN","Color","DARK_GRAY","GRAY","GREEN","LIGHT_BLUE","LIGHT_CYAN","LIGHT_GRAY","LIGHT_GREEN","MAGENTA","PINK","RED","TRANSPARENT","WHITE","YELLOW","blue","borrow","borrow_mut","clone","eq","fmt","from","green","into","new","red","set_transparency","transparency","try_from","try_into","type_id"],"q":["color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","This structure represents a color value in the standard …","","","","","","","","","","","","","","Returns the blue component of this <code>Color</code> as a <code>u8</code> value.","","","","","","Returns the argument unchanged.","Returns the green component of this <code>Color</code> as a <code>u8</code> value.","Calls <code>U::from(self)</code>.","Creates a new <code>Color</code> structure from a 4 bytes ARGB …","Returns the red component of this <code>Color</code> as a <code>u8</code> value.","Sets the transparency of the color, in which <code>0</code> is opaque …","Returns the transparency component of this <code>Color</code> as a <code>u8</code> …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[1,1],[[1,1],3],[[1,4],5],[[]],[1,2],[[]],[6,1],[1,2],[[1,2]],[1,2],[[],7],[[],7],[[],8]],"p":[[3,"Color"],[15,"u8"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"compositor":{"doc":"This crate defines a trait of <code>Compositor</code>  . A compositor …","t":[8,8,3,10,11,11,10,12,11,11,10,10,12,11,11,11],"n":["CompositableRegion","Compositor","FramebufferUpdates","blend_buffers","borrow","borrow_mut","composite","coordinate_in_dest_framebuffer","from","into","row_range","size","src_framebuffer","try_from","try_into","type_id"],"q":["compositor","","","","","","","","","","","","","","",""],"d":["A <code>CompositableRegion</code> is an abstract region (i.e., a …","A compositor composites (combines or blends) a series of …","A source framebuffer to be composited, along with its …","Blends the pixels in the source framebuffer <code>src_fb</code> within …","","","Composites the framebuffers in the list of source …","The coordinate in the destination framebuffer where the …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the range of rows covered by this region,  given …","Returns the number of pixels in the region.","The source framebuffer to be composited.","","",""],"i":[0,0,0,11,12,12,13,12,12,12,11,11,12,12,12,12],"f":[0,0,0,[[1,1,2,[4,[3]]],[[6,[5]]]],[[]],[[]],[[7,1,[0,[7,8]]],[[6,[5]]]],0,[[]],[[]],[[],[[4,[9]]]],[[],3],0,[[],6],[[],6],[[],10]],"p":[[3,"Framebuffer"],[3,"Coord"],[15,"usize"],[3,"Range"],[15,"str"],[4,"Result"],[8,"IntoIterator"],[8,"Clone"],[15,"isize"],[3,"TypeId"],[8,"CompositableRegion"],[3,"FramebufferUpdates"],[8,"Compositor"]]},\
"console":{"doc":"Creation and management of virtual consoles or terminals …","t":[5,5],"n":["ignore_serial_port_input","start_connection_detection"],"q":["console",""],"d":["Configures the console connection listener to ignore …","Starts a new task that detects new console connections by …"],"i":[0,0],"f":[[1],[[],[[4,[2,3]]]]],"p":[[15,"u16"],[3,"JoinableTaskRef"],[15,"str"],[4,"Result"]]},\
"context_switch":{"doc":"This is a wrapper crate around all other context switch …","t":[3,11,11,5,11,11,11,5,11,11,11,11],"n":["Context","borrow","borrow_mut","context_switch","from","into","new","read_first_register","set_first_register","try_from","try_into","type_id"],"q":["context_switch","","","","","","","","","","",""],"d":["The registers saved before a context switch and restored …","","","Switches context from an SSE Task to another SSE Task.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new ContextSSE struct that will cause the …","Reads the value of the first register from the actual CPU …","Sets the value of the first regular (non-SSE) register to …","","",""],"i":[0,2,2,0,2,2,2,0,2,2,2,2],"f":[0,[[]],[[]],[[1,1]],[[]],[[]],[1,2],[[],1],[[2,1]],[[],3],[[],3],[[],4]],"p":[[15,"usize"],[3,"Context"],[4,"Result"],[3,"TypeId"]]},\
"context_switch_avx":{"doc":"This crate contains structures and routines for context …","t":[3,11,11,5,11,11,11,5,14,14,11,11,11,11],"n":["ContextAVX","borrow","borrow_mut","context_switch_avx","from","into","new","read_first_register","restore_registers_avx","save_registers_avx","set_first_register","try_from","try_into","type_id"],"q":["context_switch_avx","","","","","","","","","","","","",""],"d":["The registers saved before a context switch and restored …","","","Switches context from an AVX Task to another AVX Task.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new ContextAVX struct that will cause the …","Reads the value of the first register from the actual CPU …","An assembly block for restoring AVX registers by popping …","An assembly block for saving AVX registers by pushing them …","Sets the value of the first regular (non-AVX) register to …","","",""],"i":[0,2,2,0,2,2,2,0,0,0,2,2,2,2],"f":[0,[[]],[[]],[[1,1]],[[]],[[]],[1,2],[[],1],0,0,[[2,1]],[[],3],[[],3],[[],4]],"p":[[15,"usize"],[3,"ContextAVX"],[4,"Result"],[3,"TypeId"]]},\
"context_switch_regular":{"doc":"","t":[3,11,11,5,11,11,11,5,14,14,14,14,11,14,14,11,11,11],"n":["ContextRegular","borrow","borrow_mut","context_switch_regular","from","into","new","read_first_register","restore_registers_regular","restore_registers_regular","save_registers_regular","save_registers_regular","set_first_register","switch_stacks","switch_stacks","try_from","try_into","type_id"],"q":["context_switch_regular","","","","","","","","","","","","","","","","",""],"d":["The registers saved before a context switch and restored …","","","Switches context from a regular Task to another regular …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new <code>ContextRegular</code> struct that will cause the …","Reads the value of the first register from the actual CPU …","An assembly block for restoring regular x86_64 registers …","An assembly block for restoring regular x86_64 registers …","An assembly block for saving regular x86_64 registers by …","An assembly block for saving regular x86_64 registers by …","Sets the value of the first register to the given <code>value</code>.","An assembly block for switching stacks, which is the …","An assembly block for switching stacks, which is the …","","",""],"i":[0,2,2,0,2,2,2,0,0,0,0,0,2,0,0,2,2,2],"f":[0,[[]],[[]],[[1,1]],[[]],[[]],[1,2],[[],1],0,0,0,0,[[2,1]],0,0,[[],3],[[],3],[[],4]],"p":[[15,"usize"],[3,"ContextRegular"],[4,"Result"],[3,"TypeId"]]},\
"context_switch_sse":{"doc":"This crate contains structures and routines for context …","t":[3,11,11,5,11,11,11,5,14,14,11,11,11,11],"n":["ContextSSE","borrow","borrow_mut","context_switch_sse","from","into","new","read_first_register","restore_registers_sse","save_registers_sse","set_first_register","try_from","try_into","type_id"],"q":["context_switch_sse","","","","","","","","","","","","",""],"d":["The registers saved before a context switch and restored …","","","Switches context from an SSE Task to another SSE Task.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new ContextSSE struct that will cause the …","Reads the value of the first register from the actual CPU …","An assembly block for restoring SSE registers by popping …","An assembly block for saving SSE registers by pushing them …","Sets the value of the first regular (non-SSE) register to …","","",""],"i":[0,2,2,0,2,2,2,0,0,0,2,2,2,2],"f":[0,[[]],[[]],[[1,1]],[[]],[[]],[1,2],[[],1],0,0,[[2,1]],[[],3],[[],3],[[],4]],"p":[[15,"usize"],[3,"ContextSSE"],[4,"Result"],[3,"TypeId"]]},\
"cow_arc":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CowArc","CowWeak","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_shallow","downgrade","fmt","fmt","from","from","into","into","is_shared","lock_as_mut","lock_as_ref","new","ptr_eq","to_owned","to_owned","try_from","try_from","try_into","try_into","try_lock_as_ref","type_id","type_id","upgrade"],"q":["cow_arc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A special form of an <code>Arc</code> reference that uses two nested <code>Arc</code>…","A weak reference to a <code>CowArc</code>, just like a <code>Weak</code> is to an <code>Arc</code>…","","","","","Creates a shared reference to <code>this</code> <code>CowArc</code>  and returns …","","","","Creates a shallow clone of this <code>CowArc</code> that <strong>does not</strong> …","Downgrades this <code>CowArc</code> into a <code>CowWeak</code> weak reference.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>CowArc</code> is in the <code>Shared</code> state,  and …","This acquires the lock on the inner <code>Mutex</code> wrapping the …","This acquires the lock on the inner <code>Mutex</code> wrapping the …","Crates a new <code>CowArc</code> that wraps the given data.  The new …","Returns true if the two <code>CowArc</code>s point to the same value …","","","","","","","This attempts to acquire the lock on the inner <code>Mutex</code> …","","","Just like <code>Weak::upgrade()</code>, attempts to upgrade this <code>CowWeak</code>"],"i":[0,0,1,2,1,2,1,2,1,2,1,1,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,2,1,1,2,2],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[1,1],[1,2],[[[1,[3]],4],5],[[[2,[3]],4],5],[[]],[[]],[[]],[[]],[1,6],[1,[[9,[[8,[7]]]]]],[1,[[10,[7]]]],[[],1],[[1,1],6],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[1,[[9,[[10,[7]]]]]],[[],12],[[],12],[2,[[9,[1]]]]],"p":[[3,"CowArc"],[3,"CowWeak"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"MutexGuard"],[3,"DerefsToMut"],[4,"Option"],[3,"DerefsTo"],[4,"Result"],[3,"TypeId"]]},\
"cpu":{"doc":"An abstraction for querying about CPUs (cores) in an SMP …","t":[3,3,5,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CpuId","OptionalCpuId","bootstrap_cpu","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cpu_count","current_cpu","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","into","into","into_u8","is_bootstrap_cpu","partial_cmp","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","value"],"q":["cpu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A unique identifier for a CPU core.","A wrapper around <code>Option&lt;CpuId&gt;</code> with a forced type …","Returns the ID of the bootstrap CPU (if known), which is …","","","","","","","","","","Returns the number of CPUs (SMP cores) that exist and are …","Returns the ID of the currently executing CPU.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A temporary function (will be removed later) that converts …","Returns true if the currently executing CPU is the …","","","","","","","","","","","","Returns the inner raw value of this <code>CpuId</code>."],"i":[0,0,0,3,1,3,1,3,1,3,1,1,0,0,1,3,1,1,1,1,1,1,3,3,1,1,1,3,1,1,0,1,3,1,1,3,1,1,3,1,3,1,1],"f":[0,0,[[],[[2,[1]]]],[[]],[[]],[[]],[[]],[3,3],[1,1],[[]],[[]],[[1,1],4],[[],5],[[],1],[[1,1],6],[[3,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[1,7],8],[[[2,[1]]],3],[[]],[[]],[9,1],[1],[[]],[[]],[1,10],[[],6],[[1,1],[[2,[4]]]],[[]],[[]],[[],11],[[],12],[[],12],[5,[[12,[1]]]],[[],12],[[],12],[[],13],[[],13],[1,5]],"p":[[3,"CpuId"],[4,"Option"],[3,"OptionalCpuId"],[4,"Ordering"],[15,"u32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ApicId"],[15,"u8"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"cpu_local_preemption":{"doc":"Provides CPU-local storage (per-CPU variables) and …","t":[13,3,8,13,18,4,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CpuId","CpuLocal","CpuLocalField","DropAfterTaskSwitch","FIELD","PerCpuField","PreemptionCount","PreemptionCount","PreemptionGuard","TaskSwitchPreemptionGuard","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cpu_id","drop","eq","from","from","from","from","get","hold_preemption","init","into","into","into","into","new","new","offset","preemption_enabled","preemption_was_enabled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with","with_mut","with_preempt"],"q":["cpu_local_preemption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A reference to a CPU-local variable.","This trait must be implemented for each field in …","","","The available CPU-local variables, i.e., fields in …","A type wrapper around <code>AtomicU8</code> that represents a CPU-local …","","A guard type that ensures preemption is disabled as long …","","","","","","","","","","Returns the ID of the CPU on which this guard was created.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a copy of this <code>CpuLocal</code>’s inner value of type <code>T</code>.","Prevents preemption (preemptive task switching) from …","Initializes the CPU-local data region for this CPU.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new reference to a predefined CPU-local variable.","Creates a new <code>PreemptionCount</code> with an initial value of <code>0</code>.","Returns the offset of this field in the <code>per_cpu::PerCpuData</code>…","Returns <code>true</code> if preemption is currently enabled on this …","Returns whether preemption was originally enabled when …","","","","","","","","","","","","","Invokes the given <code>func</code> with an immutable reference to this …","Invokes the given <code>func</code> with a mutable reference to this …","Invokes the given <code>func</code> with an immutable reference to this …"],"i":[3,0,0,3,11,0,0,3,0,3,5,12,1,3,5,12,1,3,1,1,3,5,12,1,3,5,0,0,5,12,1,3,5,12,3,0,1,5,12,1,3,5,12,1,3,5,12,1,3,5,5,5],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1],[[3,3],4],[[]],[[]],[[]],[[]],[5],[[],1],[[6,7,8],[[10,[9]]]],[[]],[[]],[[]],[[]],[3,[[5,[11]]]],[[],12],[3,7],[[],4],[1,4],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13],[[],13],[[[5,[11]]]],[[[5,[11]]]],[[[5,[11]],1]]],"p":[[3,"PreemptionGuard"],[3,"CpuId"],[4,"PerCpuField"],[15,"bool"],[3,"CpuLocal"],[15,"u32"],[15,"usize"],[8,"FnOnce"],[15,"str"],[4,"Result"],[8,"CpuLocalField"],[3,"PreemptionCount"],[3,"TypeId"]]},\
"crate_metadata":{"doc":"Defines types that contain metadata about crates loaded in …","t":[13,17,13,17,4,17,17,13,17,13,13,17,13,13,3,3,3,17,17,17,3,13,17,4,6,3,6,3,6,17,17,17,17,13,13,13,13,6,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,12,11,12,12,12,12,12,12,5,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,5],"n":["Application","BSS_SECTION_NAME","Bss","CRATE_HASH_DELIMITER","CrateType","DATA_BSS_SECTION_FLAGS","DATA_SECTION_NAME","Data","EH_FRAME_SECTION_NAME","EhFrame","Executable","GCC_EXCEPT_TABLE_SECTION_NAME","GccExceptTable","Kernel","LoadedCrate","LoadedSection","LoadedSectionInner","MODULE_PREFIX_DELIMITER","RODATA_SECTION_FLAGS","RODATA_SECTION_NAME","RelocationEntry","Rodata","SECTION_HASH_DELIMITER","SectionType","Shndx","StrRef","StrongCrateRef","StrongDependency","StrongSectionRef","TEXT_SECTION_FLAGS","TEXT_SECTION_NAME","TLS_BSS_SECTION_NAME","TLS_DATA_SECTION_NAME","Text","TlsBss","TlsData","Userspace","WeakCrateRef","WeakDependent","WeakSectionRef","addend","as_func","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","copy_section_data_to","crate_name","crate_name_as_prefix","crate_name_without_hash","crates_dependent_on_me","crates_i_depend_on","data_pages","data_sections","data_sections_iter","debug_symbols_file","default","default_namespace_name","deref","deserialize","drop","eq","eq","eq","eq","find_section","find_weak_dependent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_elf_relocation","from_module_name","get_function_section","get_hash","global","global_sections","global_sections_iter","hash","inner","into","into","into","into","into","into","into","into","into","is_absolute","is_data_or_bss","is_tls","mapped_pages","mapped_pages_offset","name","name","name_without_hash","new","object_file","offset","parent_crate","partial_cmp","reexported_symbols","relocation","relocation","rodata_pages","section","section","section_name_str_ref","section_name_without_hash","sections","sections_dependent_on_me","sections_i_depend_on","serialize","size","text_pages","tls_sections","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","virt_addr","with_dependencies","write_relocation"],"q":["crate_metadatad":["","","A <code>bss</code> section is just like a data section, but is …","A crate’s name and its hash are separated by “-”, …","The type of a crate, based on its object file naming …","<code>.data</code> and <code>.bss</code> sections are read-write and non-executable.","","A <code>data</code> section contains data that is both readable and …","","The <code>.eh_frame</code> section contains information about stack …","","","A <code>.gcc_except_table</code> section contains landing pads for …","","Represents a single crate whose object file has been  …","Represents a section that has been loaded and is part of a …","The parts of a <code>LoadedSection</code> that may be mutable, i.e.,  …","The Theseus Makefile appends prefixes onto bootloader …","<code>.rodata</code> sections are read-only and non-executable.","","The information necessary to calculate and write a …","An <code>rodata</code> section contains read-only data, i.e., constants.","A section’s demangled name and its hash are separated by …","The possible types of sections that can be loaded from a …","A Section Header iNDeX (SHNDX), as specified by the ELF …","A wrapper around an <code>Arc&lt;str&gt;</code>: an immutable shared …","A Strong reference to a <code>LoadedCrate</code>.","A representation that the owner <code>A</code> of (a <code>LoadedSection</code> …","A Strong reference (<code>Arc</code>) to a <code>LoadedSection</code>.","<code>.text</code> sections are read-only and executable.","","","","A <code>text</code> section contains executable code, i.e., functions. ","A <code>.tbss</code> section is a read-only section that holds all-zero …","A <code>.tdata</code> section is a read-only section that holds the …","","A Weak reference to a <code>LoadedCrate</code>.","A representation that the <code>section</code> <code>A</code> in this struct depends …","A Weak reference (<code>Weak</code>) to a <code>LoadedSection</code>.","The value that is added to the source section’s address  …","Reinterprets this section’s underlying <code>MappedPages</code> …","","Obtain a reference to the inner <code>str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copies the actual data contents of this <code>LoadedSection</code> to …","The name of this crate.","Returns this crate name as a symbol prefix, including a …","Returns the substring of this crate’s name that excludes …","Currently may contain duplicates!","Returns the set of crates that this crate depends on.  …","A tuple of:","The set of <code>.data</code> and <code>.bss</code> sections in this crate. The <code>Shndx</code>…","A convenience function to iterate over only the data …","The file that contains debug symbols for this crate.  …","","Returns the string suffix for use as the name  of the …","","","","","","","","Returns the <strong>first</strong> <code>LoadedSection</code> that matches the given …","Returns the index of the first <code>WeakDependent</code> object in …","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a tuple of (CrateType, &amp;str, &amp;str) based on the …","Returns the <code>LoadedSection</code> of type <code>SectionType::Text</code> that …","","Whether or not this section’s symbol was exported …","The set of global symbols in this crate, including regular …","A convenience function to iterate over only the global …","","The inner contents of a section that could possibly change …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the relocation type results in a …","Returns <code>true</code> if <code>Data</code> or <code>Bss</code>, otherwise <code>false</code>.","Returns <code>true</code> if <code>TlsData</code> or <code>TlsBss</code>, otherwise <code>false</code>.","The <code>MappedPages</code> that cover this section.","The offset into the <code>mapped_pages</code> where this section starts","Returns the const <code>&amp;str</code> name of this <code>SectionType</code>.","The full string name of this section, a fully-qualified …","Returns the substring of this section’s name that …","Create a new <code>LoadedSection</code>, with an empty <code>dependencies</code> …","The object file that this crate was loaded from.","The offset from the starting virtual address of the target …","The <code>LoadedCrate</code> object that contains/owns this section","","The set of symbols that this crate’s global symbols are …","The details of the relocation action that was performed.","The details of the relocation action that was performed.","A tuple of:","A strong reference to the <code>LoadedSection</code> <code>B</code> that the owner …","A weak reference to the <code>LoadedSection</code> <code>A</code> that depends on …","Returns the default name for the given <code>SectionType</code> as a …","Returns the substring of the given section’s name that …","A map containing all the sections in this crate. In …","The list of sections in foreign crates that depend on this …","The list of sections in foreign crates that this section …","","The size in bytes of this section.","A tuple of:","The set of thread-local storage (TLS) symbols in this …","","","","","","","","","","","","","","","","","","","","","","","","","","The type of this section, e.g., <code>.text</code>, <code>.rodata</code>, <code>.data</code>, <code>.bss</code>…","The type of relocation calculation that is performed  to …","","","","","","","","","","The starting <code>VirtualAddress</code> of this section (except for …","Same as [new()<code>](#method.new), but uses the given </code>…","Actually write the value of a relocation entry."],"i":[16,0,5,0,0,0,0,5,0,5,16,0,5,16,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,16,0,0,0,8,1,4,4,4,4,4,10,1,16,15,5,6,7,8,4,10,1,16,15,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,1,10,10,10,10,10,10,10,10,10,15,16,4,5,10,4,16,5,8,10,1,4,4,10,1,1,16,5,6,7,8,4,4,10,1,16,15,5,6,7,8,8,16,10,4,1,10,10,4,1,4,10,1,16,15,5,6,7,8,8,5,5,1,1,5,1,1,1,10,8,1,4,10,6,7,10,6,7,0,1,10,15,15,5,1,10,10,4,5,6,7,8,4,1,4,10,1,16,15,5,6,7,8,4,10,1,16,15,5,6,7,8,1,8,4,10,1,16,15,5,6,7,8,1,1,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[4,2],[4,2],[[]],[4,2],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,5],[6,6],[7,7],[8,8],[[]],[[]],[[]],[[]],[[]],[[4,4],9],[[1,1],[[3,[2]]]],0,[10,11],[10,2],[10,[[13,[12]]]],[10,[[13,[12]]]],0,0,[10,14],0,[[],15],[16,2],[4],[[],[[3,[5]]]],[10],[[4,4],17],[[16,16],17],[[5,5],17],[[8,8],17],[10,[[19,[18]]]],[[1,18],[[19,[20]]]],[[4,21],[[3,[22]]]],[[4,21],[[3,[22]]]],[[10,21],23],[[1,21],23],[[1,21],23],[[16,21],23],[[5,21],[[3,[22]]]],[[6,21],23],[[7,21],23],[[8,21],23],[[]],[2,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,8],[2,[[3,[2]]]],[[10,2],[[19,[18]]]],[[],25],0,0,[10,14],[4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,17],[5,17],[5,17],0,0,[5,2],0,[1,2],[[5,4,[28,[[27,[26]]]],20,29,20,17,12],1],0,0,0,[[4,4],[[19,[9]]]],0,0,0,0,0,0,[5,4],[2,2],0,0,0,[5,3],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[[5,4,[28,[[27,[26]]]],20,29,20,17,12,[13,[6]],[13,[7]]],1],[[8,20,29,17],[[3,[2]]]]],"p":[[3,"LoadedSection"],[15,"str"],[4,"Result"],[3,"StrRef"],[4,"SectionType"],[3,"StrongDependency"],[3,"WeakDependent"],[3,"RelocationEntry"],[4,"Ordering"],[3,"LoadedCrate"],[3,"String"],[6,"WeakCrateRef"],[3,"Vec"],[8,"Iterator"],[3,"LoadedSectionInner"],[4,"CrateType"],[15,"bool"],[6,"StrongSectionRef"],[4,"Option"],[15,"usize"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"Rela"],[15,"u64"],[3,"MappedPages"],[6,"Mutex"],[3,"Arc"],[3,"VirtualAddress"],[3,"TypeId"]]},\
"crate_metadata_serde":{"doc":"Standalone crate containing (de)serializable types for …","t":[17,13,17,13,17,13,17,13,17,13,4,3,3,6,17,17,17,13,13,13,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,12],"n":["BSS_SECTION_NAME","Bss","DATA_SECTION_NAME","Data","EH_FRAME_SECTION_NAME","EhFrame","GCC_EXCEPT_TABLE_SECTION_NAME","GccExceptTable","RODATA_SECTION_NAME","Rodata","SectionType","SerializedCrate","SerializedSection","Shndx","TEXT_SECTION_NAME","TLS_BSS_SECTION_NAME","TLS_DATA_SECTION_NAME","Text","TlsBss","TlsData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","crate_name","data_sections","deserialize","deserialize","deserialize","eq","fmt","fmt","fmt","from","from","from","global","global_sections","init_symbols","into","into","into","is_data_or_bss","is_tls","name","name","offset","sections","serialize","serialize","serialize","size","tls_sections","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ty","type_id","type_id","type_id","virtual_address"],"q":["crate_metadata_serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A <code>bss</code> section is just like a data section, but is …","","A <code>data</code> section contains data that is both readable and …","","The <code>.eh_frame</code> section contains information about stack …","","A <code>.gcc_except_table</code> section contains landing pads for …","","An <code>rodata</code> section contains read-only data, i.e., constants.","The possible types of sections that can be loaded from a …","A (de)serializable representation of a loaded crate that …","A (de)serializable representation of a loaded section that …","A Section Header iNDeX (SHNDX), as specified by the ELF …","","","","A <code>text</code> section contains executable code, i.e., functions. ","A <code>.tbss</code> section is a read-only section that holds all-zero …","A <code>.tdata</code> section is a read-only section that holds the …","","","","","","","","","The name of the crate.","A set containing the <code>.data</code> and <code>.bss</code> sections of the crate.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether or not the section is global.","A set containing the global sectinos of the crate.","A map of symbol names to their constant values, which …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>Data</code> or <code>Bss</code>, otherwise <code>false</code>.","Returns <code>true</code> if <code>TlsData</code> or <code>TlsBss</code>, otherwise <code>false</code>.","Returns the const <code>&amp;str</code> name of this <code>SectionType</code>.","The full name of the section.","The offset into this section’s containing <code>MappedPages</code> …","A map containing all the sections of the crate.","","","","The size of the section.","A set containing the thread-local storage (TLS) sections …","","","","","","","","The type of the section.","","","","The starting virtual address of the range covered by this …"],"i":[0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,1,1,2,4,1,2,4,1,1,1,2,2,2,4,1,1,2,4,1,2,4,1,4,2,2,2,4,1,1,1,1,4,4,2,2,4,1,4,2,1,2,4,1,2,4,1,4,2,4,1,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[[],[[3,[2]]]],[[],[[3,[4]]]],[[],[[3,[1]]]],[[1,1],5],[[2,6],7],[[4,6],7],[[1,6],7],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[1,5],[1,5],[1,8],0,0,0,[2,3],[4,3],[1,3],0,0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],9],[[],9],[[],9],0],"p":[[4,"SectionType"],[3,"SerializedCrate"],[4,"Result"],[3,"SerializedSection"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"TypeId"]]},\
"crate_name_utils":{"doc":"Utility functions for parsing and processing crate names …","t":[5,5,5,5,5],"n":["crate_name_from_path","get_containing_crate_name","get_containing_crate_name_ranges","is_valid_crate_name_char","replace_containing_crate_name"],"q":["crate_name_utils","","","",""],"d":["Returns the crate name that is derived from a crate object …","Parses the given symbol string to try to find the name of …","Same as <code>get_containing_crate_name()</code>, but returns the …","Crate names must be only alphanumeric characters, an …","Replaces the <code>old_crate_name</code> substring in the given …"],"i":[0,0,0,0,0],"f":[[1,2],[2,[[3,[2]]]],[2,[[3,[[5,[4]]]]]],[6,7],[[2,2,2],[[9,[8]]]]],"p":[[3,"Path"],[15,"str"],[3,"Vec"],[15,"usize"],[3,"Range"],[15,"char"],[15,"bool"],[3,"String"],[4,"Option"]]},\
"crate_swap":{"doc":"Defines functions and types for crate swapping, used in …","t":[4,13,13,13,13,6,3,6,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["InvalidSwapRequest","NewCrateAbsolutePathNotFound","NewCratePathNotAbsolute","NewCratePrefixNotFound","OldCrateNotFound","StateTransferFunction","SwapRequest","SwapRequestList","borrow","borrow","borrow_mut","borrow_mut","clear_unloaded_crate_cache","eq","fmt","fmt","from","from","get_hash","hash","into","into","new","swap_crates","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["crate_swap","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The possible errors that can occur when trying to create a …","The given absolute <code>Path</code> for the new crate object file …","The given <code>Path</code> for the new crate object file was not an …","A single crate object file could not be found by matching …","The old crate was not found in the old <code>CrateNamespace</code>. The …","A state transfer function is an arbitrary function called …","This struct is used to specify the details of a …","A list of one or more <code>SwapRequest</code>s that is used by the …","","","","","Clears the cache of unloaded (swapped-out) crates saved …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>SwapRequest</code> that, when given to <code>swap_crates()</code>…","Swaps in new crates that can optionally replace existing …","","","","","",""],"i":[0,3,3,3,3,0,0,0,3,1,3,1,0,1,3,1,3,1,1,1,3,1,1,0,3,1,3,1,3,1],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[3,4],5],[[1,4],5],[[]],[[]],[[],6],[1],[[]],[[]],[[[8,[7]],[10,[9]],11,[8,[[10,[9]]]],2],[[12,[1,3]]]],[[10,13,[8,[14]],[16,[15]],17,2,2],[[12,[7]]]],[[],12],[[],12],[[],12],[[],12],[[],18],[[],18]],"p":[[3,"SwapRequest"],[15,"bool"],[4,"InvalidSwapRequest"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"str"],[4,"Option"],[3,"CrateNamespace"],[3,"Arc"],[4,"IntoCrateObjectFile"],[4,"Result"],[6,"SwapRequestList"],[3,"NamespaceDir"],[3,"String"],[3,"Vec"],[6,"MmiRef"],[3,"TypeId"]]},\
"debug_info":{"doc":"Support for DWARF debug information from ELF files.","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DebugSections","DebugSymbols","Loaded","Unloaded","borrow","borrow","borrow_mut","borrow_mut","debug_abbrev","debug_info","debug_line","debug_loc","debug_pubnames","debug_pubtypes","debug_ranges","debug_str","find_subprogram_containing","from","from","get_loaded","into","into","load","try_from","try_from","try_into","try_into","type_id","type_id","unload"],"q":["debug_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The set of debug sections that we need to use from a crate …","An enum describing the possible forms of debug information …","The debug information has already been parsed from the file","Debug information that hasn’t yet been parsed from the …","","","","","Returns the <code>&quot;.debug_abbrev&quot;</code> section.","Returns the <code>&quot;.debug_info&quot;</code> section.","Returns the <code>&quot;.debug_line&quot;</code> section.","Returns the <code>&quot;.debug_loc&quot;</code> section.","Returns the <code>&quot;.debug_pubnames&quot;</code> section.","Returns the <code>&quot;.debug_pubtypes&quot;</code> section.","Returns the <code>&quot;.debug_ranges&quot;</code> section.","Returns the <code>&quot;.debug_str&quot;</code> section.","Finds the subprogram that contains the given instruction …","Returns the argument unchanged.","Returns the argument unchanged.","A convenience method for accessing the already-loaded …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loads the debug symbols from the enclosed weak file …","","","","","","","Unloads these <code>DebugSymbols</code>, returning the enclosed …"],"i":[0,0,16,16,1,16,1,16,1,1,1,1,1,1,1,1,1,1,16,16,1,16,16,1,16,1,16,1,16,16],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],[1,[[5,[[3,[2]]]]]],[1,[[6,[[3,[2]]]]]],[1,[[8,[[7,[[3,[2]]]]]]]],[1,[[9,[[3,[2]]]]]],[1,[[10,[[3,[2]]]]]],[1,[[11,[[3,[2]]]]]],[1,[[12,[[3,[2]]]]]],[[1,13],[[15,[[8,[14]]]]]],[[]],[[]],[16,[[8,[1]]]],[[]],[[]],[[16,17,18],[[20,[1,19]]]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[16,[[8,[1]]]]],"p":[[3,"DebugSections"],[6,"NativeEndian"],[3,"EndianSlice"],[3,"DebugAbbrev"],[3,"DebugInfo"],[3,"DebugLine"],[3,"DebugLoc"],[4,"Option"],[3,"DebugPubNames"],[3,"DebugPubTypes"],[3,"DebugRanges"],[3,"DebugStr"],[3,"VirtualAddress"],[3,"DebugInfoOffset"],[6,"Result"],[4,"DebugSymbols"],[6,"StrongCrateRef"],[3,"CrateNamespace"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"debugit":{"doc":"Use debug printlns, without the trait bounds (using …","t":[3,11,11,11,14,11,11,11,11,11,11,11],"n":["DebugIt","borrow","borrow_mut","clone","debugit","fmt","fmt","from","into","try_from","try_into","type_id"],"q":["debugit","","","","","","","","","","",""],"d":["A helper type for using with the <code>debugit!()</code> macro.","","","","Formats the given argument using its <code>Debug</code> trait definition","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,2,2,2,0,2,2,2,2,2,2,2],"f":[0,[[]],[[]],[[[2,[1]]],[[2,[1]]]],0,[[2,3],4],[[2,3],4],[[]],[[]],[[],5],[[],5],[[],6]],"p":[[8,"Clone"],[3,"DebugIt"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"deferred_interrupt_tasks":{"doc":"Abstractions for deferred interrupt tasks, a companion to …","t":[4,13,13,11,11,11,11,11,5,11,11,11,12,12],"n":["InterruptRegistrationError","IrqInUse","SpawnError","borrow","borrow_mut","fmt","from","into","register_interrupt_handler","try_from","try_into","type_id","existing_handler_address","irq"],"q":["deferred_interrupt_tasks","","","","","","","","","","","","deferred_interrupt_tasks::InterruptRegistrationError",""],"d":["The errors that may occur in <code>register_interrupt_handler()</code>.","The given <code>irq</code> number was already in use and is registered …","The given error occurred when spawning the deferred …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Registers an interrupt handler and spawns a companion “…","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,10,10],"f":[0,0,0,[[]],[[]],[[1,2],3],[[]],[[]],[[4,5,6],[[8,[7,1]]]],[[],8],[[],8],[[],9],0,0],"p":[[4,"InterruptRegistrationError"],[3,"Formatter"],[6,"Result"],[15,"u8"],[6,"HandlerFunc"],[4,"Option"],[3,"JoinableTaskRef"],[4,"Result"],[3,"TypeId"],[13,"IrqInUse"]]},\
"dereffer":{"doc":"Convenience types that immutably and mutably deref into an …","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DerefsTo","DerefsToMut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","from","from","into","into","new","new","new_default","new_default","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["dereffer","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct that holds an inner value and a function that is …","Similar to <code>DerefsTo</code>, but supports mutable dereferencing …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new wrapper with custom arbitrary deref …","Creates a new wrapper with the default, simple deref …","Creates a new wrapper with default, simple deref functions,","","","","","",""],"i":[0,0,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3],"f":[0,0,[[]],[[]],[[]],[[]],[[[2,[1]]]],[[[3,[1]]]],[[[3,[1]]]],[[]],[[]],[[]],[[]],[[],[[2,[1]]]],[[],[[3,[1]]]],[[],2],[[],3],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5]],"p":[[8,"Sized"],[3,"DerefsTo"],[3,"DerefsToMut"],[4,"Result"],[3,"TypeId"]]},\
"device_manager":{"doc":"","t":[5,5],"n":["early_init","init"],"q":["device_manager",""],"d":["Performs early-stage initialization for simple devices …","Initializes all other devices not initialized during …"],"i":[0,0],"f":[[[[2,[1]],3],[[5,[4]]]],[[[7,[6]],[7,[6]]],[[5,[4]]]]],"p":[[3,"PhysicalAddress"],[4,"Option"],[3,"MemoryManagementInfo"],[15,"str"],[4,"Result"],[4,"Event"],[3,"Queue"]]},\
"dfqueue":{"doc":"DFQ is a decoupled, fault-tolerant, multi-producer …","t":[3,3,3,13,13,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DFQueue","DFQueueConsumer","DFQueueProducer","Data","Empty","Inconsistent","PeekResult","PeekedData","QueuedData","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","enqueue","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_consumer","has_failed","into","into","into","into","into","into","into_consumer","into_producer","is_completed","is_enqueued","mark_completed","mpsc_queue","new","obtain_producer","obtain_producer","peek","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Data","Empty","Inconsistent","MpscQueue","PopResult","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","into","into","new","pop","push","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["dfqueue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dfqueue::mpsc_queue","","","","","","","","","","","","","","","","","","","","","",""],"d":["The actual queue, an opaque type that cannot be used …","A consumer that can process (peek into) elements in a …","A producer that can enqueue elements into a DFQueue. Do …","Some data has been successfully peeked","The queue is empty","The queue is in an inconsistent state. Peeking data should …","A result of the <code>peek</code> function.","A wrapper around data in the queue that allows a …","A special reference type that wraps a data item that has …","","","","","","","","","","","","","","","Pushes the given <code>data</code> onto the queue.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a DFQueueConsumer for this queue, if it hasn’t …","The logic here is as follows: if the item on the queue has …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the DFQueue and returns the one and only consumer …","Consumes the DFQueue and returns a producer.  To obtain …","Whether this item has been completed (handled) by the …","Returns true if this data is still on the queue","","Ported from Rust’s std::sync::mpsc::Queue.","Creates a new DFQueue. ","Returns a new DFQueueProducer cloned from this consumer …","Call this to obtain another DFQueueProducer.  …","Returns the next non-completed element in the queue …","","","","","","","","","","","","","","","","","","","Some data has been popped","The queue is empty","The queue is in an inconsistent state. Popping data should …","The multi-producer single-consumer structure. This is not …","A result of the <code>pop</code> function.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new queue that is safe to share among multiple …","Pops data from this queue.","Pushes a new value onto this queue.","","","","","",""],"i":[0,0,0,14,14,14,0,0,0,14,5,8,3,1,2,14,5,8,3,1,2,1,2,3,5,8,3,1,2,14,5,8,3,1,2,3,1,14,5,8,3,1,2,5,5,1,1,2,0,5,8,3,8,14,5,8,3,1,2,14,5,8,3,1,2,14,5,8,3,1,2,15,15,15,0,0,15,13,15,13,13,15,13,15,13,13,13,13,15,13,15,13,15,13],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[3,1],[[[5,[4]],6],7],[[[8,[4]],6],7],[[[3,[4]],6],7],[[[1,[4]],6],7],[[[2,[4]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[9,[8]]]],[1,10],[[]],[[]],[[]],[[]],[[]],[[]],[5,8],[5,3],[1,10],[1,10],[2],0,[[],5],[8,3],[3,3],[8,[[9,[2]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,[[]],[[]],[[]],[[]],[13],[[]],[[]],[[]],[[]],[[],13],[13,9],[13],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12]],"p":[[3,"QueuedData"],[3,"PeekedData"],[3,"DFQueueProducer"],[8,"Debug"],[3,"DFQueue"],[3,"Formatter"],[6,"Result"],[3,"DFQueueConsumer"],[4,"Option"],[15,"bool"],[4,"Result"],[3,"TypeId"],[3,"MpscQueue"],[4,"PeekResult"],[4,"PopResult"]]},\
"displayable":{"doc":"This crate defines a trait of <code>Displayable</code>. A displayable …","t":[8,10,10,10],"n":["Displayable","display","get_size","set_size"],"q":["displayable","","",""],"d":["The <code>Displayable</code> trait is an abstraction for any object …","Displays this <code>Displayable</code>’s content in the given …","Gets the size of the area occupied by the displayable.","Resizes the displayable area, but does not automatically …"],"i":[0,7,7,7],"f":[0,[[1,2],[[5,[3,4]]]],[[]],[[6,6]]],"p":[[3,"Coord"],[3,"Framebuffer"],[3,"Rectangle"],[15,"str"],[4,"Result"],[15,"usize"],[8,"Displayable"]]},\
"dmar":{"doc":"Definitions for the DMAR, the Direct Memory Access (DMA) …","t":[13,13,17,3,3,3,3,3,3,4,3,3,3,3,3,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Andd","Atsr","DMAR_SIGNATURE","DeviceScopePath","Dmar","DmarAndd","DmarAtsr","DmarDeviceScope","DmarDrhd","DmarEntry","DmarEntryRecord","DmarIter","DmarRhsa","DmarRmrr","DmarSatc","Drhd","DrhdIter","Rhsa","Rmrr","Satc","UnknownOrCorrupt","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","device","device_type","enumeration_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","function","get","handle","host_address_width","include_pci_all","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","iter","iter","next","next","path","register_base_address","sdt","segment_number","start_bus_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["dmard":["","","","","A wrapper around the DMAR ACPI table (<code>DmarReporting</code>), …","ANDD: DMAR ACPI Name-space Device Declaration Structure. ","ATSR: DMAR Root Port ATS (Address Translation Services) …","DMAR Device Scope Structure.","DRHD: DMAR Hardware Unit Definition Structure.","The set of possible sub-tables that can exist in the …","Represents the “header” of each dynamic table entry  …","An <code>Iterator</code> over the dynamic entries of the <code>Dmar</code>. Its …","RHSA: DMAR Remapping Hardware Static Affinity Structure. ","RMRR: DMAR Reserved Memory Region Reporting Structure. ","SATC: DMAR SoC Integrated Address Translation Cache …","","An <code>Iterator</code> over the dynamic entries (<code>DmarDeviceScope</code>s) of …","","","","The DMAR table had an entry of an unknown type or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type of this device scope structure.","Returns the Enumeration ID, which differs in meaning based …","Returns the <code>flags</code> value in this DMAR table.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Finds the DMAR in the given <code>AcpiTables</code> and returns a …","The handler for parsing the DMAR table and adding it to …","Returns the maximum DMA physical addressability (in number …","Returns the value of the <code>INCLUDE_PCI_ALL</code> flag, the only …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an <code>Iterator</code> over the <code>DmarDeviceScope</code> entries in …","Returns an <code>Iterator</code> over the DMAR’s remapping structures …","","","Calculates and returns the hierarchical path (along the …","Returns the base address of this DRHD’s remapping …","Returns a reference to the <code>Sdt</code> header in this DMAR table.","Returns the PCI segment number associated with this DRHD.","Returns the PCI bus number under which the device …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,16,16,16,13,1,10,2,12,3,4,16,5,6,7,8,9,13,1,10,2,12,3,4,16,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,2,10,10,12,13,10,2,12,4,16,5,6,7,8,9,13,1,10,2,12,3,4,16,5,6,7,8,9,2,12,0,12,13,13,1,10,2,12,3,4,16,5,6,7,8,9,1,3,13,12,1,3,10,13,12,13,10,1,2,3,4,5,6,7,8,9,13,1,10,2,12,3,4,16,5,6,7,8,9,13,1,10,2,12,3,4,16,5,6,7,8,9,13,1,10,2,12,3,4,16,5,6,7,8,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[10,11],[10,11],[12,11],[[13,14],15],[[10,14],15],[[2,14],15],[[12,14],15],[[4,14],15],[[16,14],15],[[5,14],15],[[6,14],15],[[7,14],15],[[8,14],15],[[9,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[17,[[18,[12]]]],[[17,19,20,21],[[23,[22]]]],[12,11],[13,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,1],[12,3],[1,18],[3,18],[10,[[23,[2,22]]]],[13,25],[12,26],[13,27],[10,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28]],"p":[[3,"DrhdIter"],[3,"DeviceScopePath"],[3,"DmarIter"],[3,"DmarEntryRecord"],[3,"DmarRmrr"],[3,"DmarAtsr"],[3,"DmarRhsa"],[3,"DmarAndd"],[3,"DmarSatc"],[3,"DmarDeviceScope"],[15,"u8"],[3,"Dmar"],[3,"DmarDrhd"],[3,"Formatter"],[6,"Result"],[4,"DmarEntry"],[3,"AcpiTables"],[4,"Option"],[6,"AcpiSignature"],[15,"usize"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[15,"bool"],[15,"u64"],[3,"Sdt"],[15,"u16"],[3,"TypeId"]]},\
"dreadnought":{"doc":"An asynchronous executor.","t":[8,5,11,11,11,11,11,0,11,11,11,11,11,11,11,14,11,11,14,0,11,0,11,3,3,3,3,3,6,13,13,4,3,16,3,3,3,3,8,8,13,13,8,3,13,13,3,3,3,3,3,3,3,3,3,3,3,13,6,3,3,3,3,3,3,4,3,16,3,3,3,16,3,3,3,3,13,3,3,3,3,3,3,8,8,3,3,3,3,3,4,3,3,8,3,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,3,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,3,18,18,18,18,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FutureExt","block_on","boxed","boxed_local","flatten","flatten_stream","fuse","future","inspect","into_stream","left_future","map","map_into","never_error","now_or_never","pin_mut","poll_unpin","right_future","select_biased","task","then","time","unit_error","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Output","Pending","PollFn","PollImmediate","Ready","Right","Select","SelectAll","SelectOk","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","abort","abortable","and_then","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","drop","drop","drop","eq","err","err_into","factor_first","factor_second","flatten","flatten_sink","flatten_stream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","fuse","inspect","inspect_err","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future_obj","into_inner","into_inner","into_inner","into_raw","into_raw","into_stream","is_aborted","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","map","map_err","map_into","map_ok","map_ok_or_else","maybe_done","never_error","new","new","new","new_pair","now_or_never","ok","ok_into","or_else","output_mut","output_mut","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_unpin","ready","right_future","select","select_all","select_ok","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","take_output","take_output","terminated","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_flatten","try_flatten_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_unpin","try_select","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_error","unwrap_or_else","Cancelled","Error","Exception","Join","JoinableAsyncTaskRef","Panic","Result","abort","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","into_future","is_finished","poll","spawn_async","try_from","try_from","try_into","try_into","try_poll","type_id","type_id","Duration","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","Sleep","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow_decode","borrow_mut","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","decode","default","deserialize","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","encode","eq","fmt","from","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","get_hash","hash","into","into","into_future","is_zero","mul","mul_assign","mul_f32","mul_f64","new","partial_cmp","poll","saturating_add","saturating_mul","saturating_sub","serialize","sleep","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","type_id","type_id"],"q":["dreadnought","","","","","","","","","","","","","","","","","","","","","","","dreadnought::futuredreadnought::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","dreadnought::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An extension trait for <code>Future</code>s that provides a variety of …","Executes a future to completion.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Flatten the execution of this future when the output of …","Flatten the execution of this future when the successful …","Fuse a future such that <code>poll</code> will never again be called …","Asynchronous values.","Do something with the output of a future before passing it …","Convert this future into a single element stream.","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Evaluates and consumes the future, returning the resulting …","Pins a value on the stack.","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","Wrap this future in an <code>Either</code> future, making it the …","Polls multiple futures and streams simultaneously, …","Asynchronous tasks based on Theseus’s native OS task …","Chain on a computation for when a future finished, passing …","Utilities for tracking time.","Turns a <code>Future&lt;Output = T&gt;</code> into a …","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","A future represents an asynchronous computation obtained …","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","The type of value produced on completion.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","Abort the <code>Abortable</code> stream/future associated with this …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","","","","","","","","","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Fuse a future such that <code>poll</code> will never again be called …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the success value of a future before …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Unwraps the value from this immediately ready future.","Consumes this combinator, returning the underlying futures.","Extract the value of an either over two equivalent types.","Convert an owned instance into a (conceptually owned) fat …","","Convert this future into a single element stream.","Checks whether the task has been aborted. Note that all …","Returns <code>true</code> if the underlying future should no longer be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Creates a new <code>Abortable</code> future/stream using an existing …","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Returns an <code>Option</code> containing a mutable reference to the …","Returns an <code>Option</code> containing a mutable reference to the …","Creates a future which never resolves, representing a …","Attempt to resolve the future to a final value, registering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","","","","","","","","","","","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","Creates a future that is immediately ready with a value.","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","","","","","","","","","","Attempt to take the output of a <code>MaybeDone</code> without driving …","Attempt to take the output of a <code>TryMaybeDone</code> without …","Creates a new <code>Fuse</code>-wrapped future which is already …","Chain on a computation for when a future finished, passing …","","","","","","","","","","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","","An error returned from polling a <code>JoinableAsyncTaskRef</code>.","","A <code>Join</code> error should not occur; this indicates a BUG in …","An owned permission to join an async task.","","","Abort the task associated with the handle.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether the task associated with the handle has …","","Spawns a new asynchronous task, returning a …","","","","","","","","A <code>Duration</code> type to represent a span of time, typically …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","Future returned by [<code>sleep</code>].","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","Waits until the specified number of ticks has elapsed.","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","",""],"i":[0,0,83,83,83,83,83,0,83,83,83,83,83,83,83,0,83,83,0,0,83,0,83,0,0,0,0,0,0,50,51,0,0,84,0,0,0,0,0,0,50,51,0,0,50,51,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,84,0,0,0,1,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,85,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,83,83,21,22,23,24,10,25,19,26,21,22,23,24,10,25,19,26,22,86,27,1,26,0,85,10,10,83,85,83,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,26,27,27,27,27,27,27,34,34,34,34,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,36,37,57,63,83,83,85,85,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,27,34,85,35,36,37,7,5,11,12,17,8,13,18,38,39,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,27,24,57,10,86,1,83,25,87,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,10,10,0,0,0,0,0,0,83,83,85,83,85,85,0,83,27,34,25,19,83,0,85,85,50,51,0,1,27,34,35,36,37,7,5,11,12,17,8,13,18,38,39,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,6,40,31,10,6,40,31,10,0,0,6,9,40,31,23,10,25,6,40,31,10,83,0,83,0,0,0,6,9,40,31,10,6,40,31,10,50,51,7,83,21,22,23,24,10,25,19,26,26,85,85,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,0,0,0,0,0,0,84,27,34,35,37,7,5,11,12,17,8,13,18,38,39,20,41,30,42,43,44,45,46,47,48,49,21,51,24,58,59,60,61,62,63,10,25,6,9,40,31,10,25,85,0,27,34,35,36,37,7,5,6,11,9,12,17,8,13,18,38,39,40,31,20,41,30,42,43,44,45,46,47,48,49,21,50,51,22,23,24,52,53,54,55,56,57,58,59,60,61,62,63,10,25,64,19,26,83,85,69,0,69,69,0,69,0,68,68,69,68,69,69,68,69,68,69,68,68,68,0,68,69,68,69,68,68,69,0,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,81,72,72,81,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,81,72,72,72,72,72,72,72,72,72,81,72,81,72,72,72,72,72,72,72,81,72,72,72,72,0,72,72,72,72,72,72,72,72,81,72,72,72,81,72,81,72],"f":[0,[[]],[[],[[4,[[3,[1,2]]]]]],[[],[[4,[[3,[1,2]]]]]],[[],5],[[],6],[[],7],0,[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],0,[15,16],[[],10],0,0,[[],17],0,[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19],[[]],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[[3,[1,2]]]]]],[[],[[4,[[3,[1,2]]]]]],[21,21],[22,22],[23,23],[24,24],[10,10],[25,25],[19,19],[26,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[1],[27],[1],[[26,26],28],[[],[[24,[29]]]],[[],30],[10],[10],[[],5],[[],31],[[],6],[[27,32],[[29,[33]]]],[[34,32],[[29,[33]]]],[[35,32],[[29,[33]]]],[[36,32],[[29,[33]]]],[[37,32],[[29,[33]]]],[[7,32],[[29,[33]]]],[[5,32],[[29,[33]]]],[[6,32],[[29,[33]]]],[[11,32],[[29,[33]]]],[[9,32],[[29,[33]]]],[[12,32],[[29,[33]]]],[[17,32],[[29,[33]]]],[[8,32],[[29,[33]]]],[[13,32],[[29,[33]]]],[[18,32],[[29,[33]]]],[[38,32],[[29,[33]]]],[[39,32],[[29,[33]]]],[[40,32],[[29,[33]]]],[[31,32],[[29,[33]]]],[[20,32],[[29,[33]]]],[[41,32],[[29,[33]]]],[[30,32],[[29,[33]]]],[[42,32],[[29,[33]]]],[[43,32],[[29,[33]]]],[[44,32],[[29,[33]]]],[[45,32],[[29,[33]]]],[[46,32],[[29,[33]]]],[[47,32],[[29,[33]]]],[[48,32],[[29,[33]]]],[[49,32],[[29,[33]]]],[[21,32],[[29,[33]]]],[[50,32],[[29,[33]]]],[[51,32],[[29,[33]]]],[[22,32],[[29,[33]]]],[[23,32],[[29,[33]]]],[[24,32],[[29,[33]]]],[[52,32],[[29,[33]]]],[[53,32],[[29,[33]]]],[[54,32],[[29,[33]]]],[[55,32],[[29,[33]]]],[[56,32],[[29,[33]]]],[[57,32],[[29,[33]]]],[[58,32],[[29,[33]]]],[[59,32],[[29,[33]]]],[[60,32],[[29,[33]]]],[[61,32],[[29,[33]]]],[[62,32],[[29,[33]]]],[[63,32],[[29,[33]]]],[[10,32],[[29,[33]]]],[[25,32],[[29,[33]]]],[[64,32],[[29,[33]]]],[[19,32],[[29,[33]]]],[[26,32],[[29,[33]]]],[[26,32],[[29,[33]]]],[[]],[[[4,[[3,[2]]]]],27],[34,27],[[[3,[1,2]]],27],[[[4,[[3,[1,2]]]]],27],[[[3,[2]]],27],[[[3,[1,2]]],34],[[[4,[[3,[1,2]]]]],34],[[]],[[[4,[[3,[2]]]]],34],[[[3,[2]]],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[[],37],[[],57],[[],63],[[],7],[[],8],[[],44],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,34],[24],[57,[[65,[2]]]],[10],[[],1],[1,1],[[],9],[25,28],[[],28],[7,28],[5,28],[6,28],[11,28],[9,28],[12,28],[17,28],[8,28],[13,28],[18,28],[38,28],[39,28],[40,28],[31,28],[20,28],[41,28],[30,28],[42,28],[43,28],[44,28],[45,28],[46,28],[47,28],[48,28],[49,28],[21,28],[50,28],[51,28],[22,28],[23,28],[24,28],[52,28],[53,28],[54,28],[55,28],[56,28],[10,28],[10,28],[[],52],[[],53],[[],54],[[],55],[[],36],[[],49],[[],10],[[],11],[[],46],[[],12],[[],45],[[],47],[[],50],[[],13],[[],27],[[],34],[64,25],[[]],[[],14],[[],[[24,[29]]]],[[],42],[[],41],[[[4,[50]]],14],[[[4,[51]]],14],[[],21],[[4,15],16],[[[4,[27]],15],16],[[[4,[34]],15],16],[[[4,[35]],15],16],[[[4,[36]],15],16],[[[4,[37]],15],16],[[[4,[7]],15],16],[[[4,[5]],15],16],[[[4,[11]],15],16],[[[4,[12]],15],16],[[[4,[17]],15],16],[[[4,[8]],15],16],[[[4,[13]],15],16],[[[4,[18]],15],16],[[[4,[38]],15],16],[[[4,[39]],15],16],[[[4,[20]],15],16],[[[4,[41]],15],16],[[[4,[30]],15],16],[[[4,[42]],15],16],[[[4,[43]],15],16],[[[4,[44]],15],16],[[[4,[45]],15],16],[[[4,[46]],15],16],[[[4,[47]],15],16],[[[4,[48]],15],16],[[[4,[49]],15],16],[[[4,[21]],15],16],[[[4,[50]],15],16],[[[4,[51]],15],16],[[[4,[22]],15],16],[[[4,[23]],15],[[16,[14]]]],[[[4,[24]],15],16],[[[4,[52]],15],16],[[[4,[53]],15],16],[[[4,[54]],15],16],[[[4,[55]],15],16],[[[4,[56]],15],16],[[[4,[57]],15],16],[[[4,[58]],15],16],[[[4,[59]],15],16],[[[4,[60]],15],16],[[[4,[61]],15],16],[[[4,[62]],15],16],[[[4,[63]],15],16],[[[4,[10]],15],16],[[[4,[25]],15],16],[[[4,[6]],15],[[16,[29]]]],[[[4,[40]],15],[[16,[29]]]],[[[4,[31]],15],[[16,[29]]]],[[[4,[10]],15],[[16,[29]]]],[[[4,[6]],15],[[16,[29]]]],[[[4,[40]],15],[[16,[29]]]],[[[4,[31]],15],[[16,[29]]]],[[[4,[10]],15],[[16,[29]]]],[[],35],[[],23],[[[4,[6]],15],[[16,[14]]]],[[[4,[9]],15],[[16,[14]]]],[[[4,[40]],15],[[16,[14]]]],[[[4,[31]],15],[[16,[14]]]],[[[4,[23]],15],[[16,[14]]]],[[[4,[10]],15],[[16,[14]]]],[[[4,[25]],15],[[16,[14]]]],[[[4,[6]],15],[[16,[29]]]],[[[4,[40]],15],[[16,[29]]]],[[[4,[31]],15],[[16,[29]]]],[[[4,[10]],15],[[16,[29]]]],[15,16],[[],24],[[],10],[[],56],[[],57],[[],63],[6],[9],[40],[31],[10],[[[4,[6]]],29],[[[4,[40]]],29],[[[4,[31]]],29],[[[4,[10]]],29],[[[4,[50]]],14],[[[4,[51]]],14],[[],7],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],39],[[],40],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],58],[[],59],[[],60],[[],61],[[],37],[[],51],[[4,15],[[16,[29]]]],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],16],[[4,15],[[16,[[14,[29]]]]]],[[4,15],[[16,[[14,[29]]]]]],[[4,15],[[16,[[14,[29]]]]]],[[4,15],[[16,[[14,[29]]]]]],[[4,15],[[16,[[14,[29]]]]]],[[4,15],[[16,[[14,[29]]]]]],[15,[[16,[29]]]],[[],62],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],18],[[],48],0,0,0,0,0,0,0,[68],[[]],[[]],[[]],[[]],[[69,32],70],[[]],[[]],[[]],[[]],[[]],[68,28],[[[4,[68]],15],16],[[],[[29,[68,71]]]],[[],29],[[],29],[[],29],[[],29],[[4,15],16],[[],67],[[],67],0,0,0,0,0,0,0,0,[[72,72],72],[[72,72]],[72,73],[72,73],[72,73],[72,74],[72,75],[72,76],[[]],[[]],[[],[[29,[72,77]]]],[[]],[[]],[[72,72],[[14,[72]]]],[[72,78],[[14,[72]]]],[[72,78],[[14,[72]]]],[[72,72],[[14,[72]]]],[72,72],[[]],[[72,72],79],[[],[[29,[72,77]]]],[[],72],[[],[[29,[72]]]],[[72,78],72],[[72,78]],[[72,72],75],[[72,72],76],[[72,75],72],[[72,76],72],[72,[[29,[80]]]],[[72,72],28],[[72,32],[[29,[33]]]],[[]],[[]],[74,72],[74,72],[74,72],[74,72],[75,72],[76,72],[[],74],[72],[[]],[[]],[[]],[72,28],[[72,78],72],[[72,78]],[[72,75],72],[[72,76],72],[[74,78],72],[[72,72],[[14,[79]]]],[[[4,[81]],15],16],[[72,72],72],[[72,78],72],[[72,72],72],[72,29],[72,81],[[72,72],72],[[72,72]],[72,78],[72,78],[72,78],[[],72],[[],72],[[]],[[],29],[[],29],[75,[[29,[72,82]]]],[76,[[29,[72,82]]]],[[],29],[[],29],[[],67],[[],67]],"p":[[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"Inspect"],[3,"IntoStream"],[4,"Either"],[3,"Map"],[3,"MapInto"],[3,"NeverError"],[4,"Option"],[3,"Context"],[4,"Poll"],[3,"Then"],[3,"UnitError"],[3,"AbortHandle"],[3,"AndThen"],[3,"Pending"],[3,"OptionFuture"],[3,"PollImmediate"],[3,"Ready"],[3,"Abortable"],[3,"Aborted"],[3,"LocalFutureObj"],[15,"bool"],[4,"Result"],[3,"ErrInto"],[3,"FlattenSink"],[3,"Formatter"],[3,"Error"],[3,"FutureObj"],[3,"PollFn"],[3,"JoinAll"],[3,"TryJoinAll"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"OrElse"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[4,"MaybeDone"],[4,"TryMaybeDone"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"SelectOk"],[3,"AbortRegistration"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"JoinableAsyncTaskRef"],[4,"Error"],[6,"Result"],[15,"str"],[3,"Duration"],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"DecodeError"],[15,"u32"],[4,"Ordering"],[4,"EncodeError"],[3,"Sleep"],[3,"TryFromFloatSecsError"],[8,"FutureExt"],[8,"TryFuture"],[8,"TryFutureExt"],[8,"UnsafeFutureObj"],[8,"FusedFuture"]]},\
"e1000":{"doc":"","t":[3,17,17,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,3,11,11,12,12,12,5,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,5,12,12,12,12,12,11,11,11,11],"n":["E1000Nic","E1000_DEV","INTEL_VEND","borrow","borrow_mut","from","get_e1000_nic","get_received_frame","init","init_interrupts","into","mac_address","mac_address","poll_receive","receive","send","send_packet","spoof_mac","test_e1000_driver","try_from","try_into","type_id","vzip","arp_packet","borrow","borrow_mut","dest1","dest2","dest3","dhcp_request_packet","from","h_type","hlen","into","oper","p_type","packet_type","plen","sha1","sha2","sha3","source1","source2","source3","spa1","spa2","test_e1000_nic_driver","tha1","tha2","tha3","tpa1","tpa2","try_from","try_into","type_id","vzip"],"q":["e1000","","","","","","","","","","","","","","","","","","","","","","","e1000::test_e1000_driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Struct representing an e1000 network interface card.","","","","","Returns the argument unchanged.","Returns a reference to the E1000Nic wrapped in a …","","Initializes the new E1000 network interface card that is …","Initializes the interrupt handler and enables interrupts …","Calls <code>U::from(self)</code>.","Returns the MAC address.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14],"f":[0,0,0,[[]],[[]],[[]],[[],[[2,[1]]]],[3,[[2,[4]]]],[5,[[7,[1,6]]]],[[3,[9,[8]]],[[7,[6]]]],[[]],[3],[3],[3,[[7,[6]]]],[3,[[2,[4]]]],[3,10],[[3,11],[[7,[6]]]],[3],0,[[],7],[[],7],[[],12],[[]],0,[[]],[[]],0,0,0,[[],[[7,[6]]]],[[]],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[13]]]],0,0,0,0,0,[[],7],[[],7],[[],12],[[]]],"p":[[3,"MutexIrqSafe"],[4,"Option"],[3,"E1000Nic"],[3,"ReceivedFrame"],[3,"PciDevice"],[15,"str"],[4,"Result"],[3,"NetworkInterface"],[3,"Arc"],[6,"Result"],[3,"TransmitBuffer"],[3,"TypeId"],[15,"u64"],[3,"arp_packet"]]},\
"early_printer":{"doc":"A basic ASCII text printer for early text output to a …","t":[3,11,11,12,11,12,5,11,11,12,14,11,14,12,5,11,11,11,12,11],"n":["EarlyFramebufferPrinter","borrow","borrow_mut","format","from","height","init","into","into_mapping","paddr","print","print_char","println","stride","take","try_from","try_into","type_id","width","write_str"],"q":["early_printer","","","","","","","","","","","","","","","","","","",""],"d":["A text printer for writing characters to an early …","","","The format of this framebuffer.","Returns the argument unchanged.","The height in pixels of the framebuffer.","Initializes a simple graphical framebuffer for early text …","Calls <code>U::from(self)</code>.","Returns the memory mapping for the underlying framebuffer, …","The starting physical address of the framebuffer.","Prints the formatted output to the early framebuffer …","Prints the given character to the current location in this …","Prints the formatted output with an appended newline (‘\\\\n…","The stride in pixels of the framebuffer.","De-initializes and returns the early graphical framebuffer,","","","","The width in pixels of the framebuffer.",""],"i":[0,6,6,6,6,6,0,6,6,6,0,6,0,6,0,6,6,6,6,6],"f":[0,[[]],[[]],0,[[]],0,[[1,[3,[2]]],[[5,[4]]]],[[]],[6,[[3,[[9,[7,8]]]]]],0,0,[[6,10,7,7]],0,0,[[],[[3,[6]]]],[[],5],[[],5],[[],11],0,[[6,4],12]],"p":[[3,"FramebufferInfo"],[3,"PageTable"],[4,"Option"],[15,"str"],[4,"Result"],[3,"EarlyFramebufferPrinter"],[15,"u32"],[3,"Mutable"],[3,"BorrowedSliceMappedPages"],[15,"char"],[3,"TypeId"],[6,"Result"]],"a":{"clean up":[14],"deinit":[14]}},\
"early_tls":{"doc":"Handles initialization of TLS data images during early OS …","t":[5,5,5],"n":["drop","insert","reload"],"q":["early_tls","",""],"d":["Clears the early TLS image","Insert the current early TLS image with the given …","Loads the existing (previously-initialized) early TLS …"],"i":[0,0,0],"f":[[[]],[1],[[]]],"p":[[3,"TlsDataImage"]]},\
"environment":{"doc":"","t":[3,4,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Environment","Error","NotADirectory","NotFound","Result","borrow","borrow","borrow_mut","borrow_mut","chdir","cwd","default","fmt","from","from","get","into","into","set","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unset","variables","working_dir"],"q":["environment","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A structure that contains environment state for a given …","The error type for environment operations.","A filesystem node was, unexpectedly, not a directory.","A filesystem node wasn’t found.","A specialized <code>Result</code> type for environment operations.","","","","","Changes the current working directory.","Returns the absolute file path of the current working …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of the environment variable with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets an environment variable with the given <code>key</code> and <code>value</code>.","","","","","","","","Unsets the environment variable with the given <code>key</code>.","","The “current working directory”, i.e., where a task’…"],"i":[0,0,5,5,0,1,5,1,5,1,1,1,5,1,5,1,1,5,1,5,1,5,1,5,1,5,1,1,1],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],3],[1,4],[[],1],[[5,6],7],[[]],[[]],[[1,8],[[9,[4]]]],[[]],[[]],[[1,4,4]],[[],4],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[1,8]],0,0],"p":[[3,"Environment"],[3,"Path"],[6,"Result"],[3,"String"],[4,"Error"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Option"],[4,"Result"],[3,"TypeId"]],"a":{"change":[9],"current":[10],"dir":[10],"getcwd":[10],"remove_var":[26],"set_var":[18],"var":[15],"working":[10]}},\
"ethernet_smoltcp_device":{"doc":"This crate implements an interface/glue layer between our …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EthernetDevice","EthernetNetworkInterface","RxToken","TxToken","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","consume","consume","ethernet_addr","from","from","from","from","has_ip_addr","iface","into","into","into","into","ip_addrs","new","new","new_ipv4_interface","poll","receive","routes","routes_mut","set_ethernet_addr","transmit","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["ethernet_smoltcp_device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An implementation of smoltcp’s <code>Device</code> trait, which …","A struct that implements the <code>NetworkInterface</code> trait for a …","The receive token type used by smoltcp,  which contains …","The transmit token type used by smoltcp, which contains …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new instance of an ethernet network interface, …","Create a new instance of the <code>EthernetDevice</code>.","Creates a new ethernet network interface with an ipv4 …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,2,4,8,9,2,4,8,2,4,8,9,9,2,4,8,9,9,9,2,4,8,9,9,2,9,9,2,9,9,9,2,9,2,4,8,9,2,4,8,9,2,4,8],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[[4,[1]],5,6],7],[[8,5],7],[[[9,[1]]],10],[[]],[[]],[[]],[[]],[[[9,[1]],11],12],0,[[]],[[]],[[]],[[]],[[[9,[1]]]],[[13,[15,[14]],[15,[[16,[11]]]]],[[18,[[9,[1]],17]]]],[13,[[2,[1]]]],[[13,17],[[18,[[9,[1]],17]]]],[[[9,[1]],19,5],[[7,[12]]]],[[[2,[1]]],15],[[[9,[1]]],20],[[[9,[1]]],20],[[[9,[1]],10]],[[[2,[1]]],15],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[],21],[[],21]],"p":[[8,"NetworkInterfaceCard"],[3,"EthernetDevice"],[3,"DeviceCapabilities"],[3,"TxToken"],[3,"Instant"],[15,"usize"],[6,"Result"],[3,"RxToken"],[3,"EthernetNetworkInterface"],[3,"Address"],[4,"Address"],[15,"bool"],[3,"MutexIrqSafe"],[4,"Cidr"],[4,"Option"],[8,"Into"],[15,"str"],[4,"Result"],[3,"Set"],[3,"Routes"],[3,"TypeId"]]},\
"event_types":{"doc":"","t":[4,13,13,3,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,12,11,11,11,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Event","ExitEvent","KeyboardEvent","KeyboardInputEvent","MouseMovementEvent","MousePositionEvent","MousePositionEvent","OutputEvent","WindowResizeEvent","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coordinate","default","fifth_button_hold","fmt","fmt","fmt","fourth_button_hold","from","from","from","gcoordinate","into","into","into","key_event","left_button_hold","new","new_keyboard_event","new_output_event","new_window_resize_event","right_button_hold","scrolling_down","scrolling_up","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["event_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","An input event from a keyboard","A keyboard event, indicating that one or more keys were …","An input event from a mouse","An event describing mouse position rather than movement …","The event tells application about mouse’s position …","An event indicating that another entity wants to print the …","Tells an application that the window manager has resized …","","","","","","","","","","","","","the relative position in window","","whether the fifth button holds","","","","whether the fourth button holds","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","the global position in window","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The key input event from i/o device","whether the left button holds","Create a new key board input event. <code>key</code> is the key input …","Create a new keyboard event","Create a new output event","Create a new window resize event","whether the right button holds","whether the mouse is scrolling down","whether the mouse is scrolling up","","","","","","","","","","","",""],"i":[0,2,2,0,2,0,2,2,2,1,2,3,1,2,3,1,2,3,1,2,3,1,1,1,1,2,3,1,1,2,3,1,1,2,3,3,1,3,2,2,2,1,1,1,1,2,3,1,2,3,1,2,3,1,2,3],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],0,[[],1],0,[[1,4],5],[[2,4],5],[[3,4],5],0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,[6,3],[6,2],[[],2],[7,2],0,0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9]],"p":[[3,"MousePositionEvent"],[4,"Event"],[3,"KeyboardInputEvent"],[3,"Formatter"],[6,"Result"],[3,"KeyEvent"],[3,"Rectangle"],[4,"Result"],[3,"TypeId"]]},\
"exceptions_early":{"doc":"Early exception handlers that do nothing but print an …","t":[7,5,5],"n":["EARLY_IDT","double_fault_handler","init"],"q":["exceptions_early","",""],"d":["An initial Interrupt Descriptor Table (IDT) with only very …","exception 0x08","Initializes an early IDT with a basic set of early …"],"i":[0,0,0],"f":[0,[[1,2],3],[[[5,[4]]]]],"p":[[3,"InterruptStackFrame"],[15,"u64"],[15,"never"],[3,"VirtualAddress"],[4,"Option"]]},\
"exceptions_full":{"doc":"Exception handlers that are task-aware, and will kill a …","t":[5],"n":["init"],"q":["exceptions_full"],"d":["Initialize the given <code>idt</code> with fully-featured exception …"],"i":[0],"f":[[1]],"p":[[3,"LockedIdt"]]},\
"external_unwind_info":{"doc":"Registers and stores unwind information from external …","t":[13,3,4,13,11,11,11,11,11,11,5,11,11,11,5,11,11,5,12,11,11,11,11,11,11,11,12],"n":["AlreadyRegistered","ExternalUnwindInfo","ExternalUnwindInfoError","NotRegistered","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deregister_unwind_info","fmt","from","from","get_unwind_info","into","into","register_unwind_info","text_section","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwind_info"],"q":["external_unwind_info","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The unwinding info trying to be registered was already …","Unwinding information for an external (non-Theseus) …","Errors that may occur when registering or [deregistering] …","The unwinding info trying to be deregistered was not yet …","","","","","","","Remove a previously-registered section of external …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the registered external unwind information that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Register a new section of external unwinding information.","The bounds of the text section that this unwinding info …","","","","","","","","The bounds of the unwinding information (e.g., <code>.eh_frame</code>) …"],"i":[3,0,0,3,3,1,3,1,1,1,0,1,3,1,0,3,1,0,1,1,3,1,3,1,3,1,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[2,[[4,[3]]]],[[1,5],6],[[]],[[]],[7,[[8,[1]]]],[[]],[[]],[[2,9,2,9],[[4,[3]]]],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],10],[[],10],0],"p":[[3,"ExternalUnwindInfo"],[15,"u8"],[4,"ExternalUnwindInfoError"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"VirtualAddress"],[4,"Option"],[15,"usize"],[3,"TypeId"]]},\
"fadt":{"doc":"Definitions for FADT, the Fixed ACPI Description Table.","t":[17,3,12,12,11,11,12,12,11,11,12,12,12,12,12,12,12,12,11,11,11,12,12,12,12,12,5,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12],"n":["FADT_SIGNATURE","Fadt","acpi_disable","acpi_enable","borrow","borrow_mut","c_state_control","century","clone","clone_into","day_alarm","dsdt","duty_offset","duty_width","firmware_ctrl","flags","flush_size","flush_stride","fmt","from","get","gpe0_block","gpe0_length","gpe1_base","gpe1_block","gpe1_length","handle","header","iapc_boot_architecture_flags","into","month_alarm","pm1_control_length","pm1_event_length","pm1a_control_block","pm1a_event_block","pm1b_control_block","pm1b_event_block","pm2_control_block","pm2_control_length","pm_timer_block","pm_timer_length","preferred_power_managament","pstate_control","reset_reg","reset_value","s4_bios_req","sci_interrupt","smi_command_port","to_owned","try_from","try_into","type_id","worst_c2_latency","worst_c3_latency","x_dsdt","x_firmware_control","x_gpe0_block","x_gpe1_block","x_pm1a_control_block","x_pm1a_event_block","x_pm1b_control_block","x_pm1b_event_block","x_pm2_control_block","x_pm_timer_block"],"q":["fadt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","32-bit physical address of the DSDT.","","","","","","","","Returns the argument unchanged.","Finds the FADT in the given <code>AcpiTables</code> and returns a …","","","","","","The handler for parsing the FADT table and adding it to …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","64-bit physical address of the DSDT.","64-bit physical address of the FACS.","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[]],[[]],0,0,[1,1],[[]],0,0,0,0,0,0,0,0,[[1,2],3],[[]],[4,[[5,[1]]]],0,0,0,0,0,[[4,6,7,8],[[10,[9]]]],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],10],[[],10],[[],11],0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Fadt"],[3,"Formatter"],[6,"Result"],[3,"AcpiTables"],[4,"Option"],[6,"AcpiSignature"],[15,"usize"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"fault_crate_swap":{"doc":"Defines support functions needed for swapping of corrupted …","t":[3,11,11,11,11,5,11,5,11,5,11,12,12,12,12,12,12,5,11,11,11,11],"n":["SwapRanges","borrow","borrow_mut","clone","clone_into","constant_offset_fix","default","do_self_swap","from","get_crate_to_swap","into","new_data","new_rodata","new_text","old_data","old_rodata","old_text","self_swap_handler","to_owned","try_from","try_into","type_id"],"q":["fault_crate_swap","","","","","","","","","","","","","","","","","","","","",""],"d":["A data structure to hold the ranges of memory used by the …","","","","","A support function for self swap of crate Iterates through …","","For swapping of a crate from the identical object file in …","Returns the argument unchanged.","This function returns the name of the crate to replace if …","Calls <code>U::from(self)</code>.","","","","","","","This function calls the crate swapping routine for a …","","","",""],"i":[0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,2,2],[[4,[3]]]],[[],1],[[5,6,[8,[7]],[9,[3]],10,11],[[4,[1,3]]]],[[]],[[],[[8,[3]]]],[[]],0,0,0,0,0,0,[5,[[4,[1,3]]]],[[]],[[],4],[[],4],[[],12]],"p":[[3,"SwapRanges"],[15,"usize"],[3,"String"],[4,"Result"],[15,"str"],[6,"DirRef"],[3,"NamespaceDir"],[4,"Option"],[3,"Vec"],[3,"Arc"],[15,"bool"],[3,"TypeId"]]},\
"fault_log":{"doc":"This crate logs all the faults occuring within Theseus.  …","t":[13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,12,12,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,5,5,12,11,11,11,5,5,5,11,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BoundRangeExceeded","DeviceNotAvailable","DivideByZero","DoubleFault","FaultCrateReplaced","FaultEntry","FaultType","GeneralProtectionFault","InvalidOpCode","InvalidTSS","IterativelyCrateReplaced","MultipleFaultRecovery","NMI","None","Overflow","PageFault","Panic","RecoveryAction","SegmentNotPresent","TaskRestarted","UnknownException","action_taken","address_accessed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_fault_log","clone","clone","clone","clone_into","clone_into","clone_into","cpu","crate_error_occured","eq","error_code","fault_type","fmt","fmt","fmt","from","from","from","from_exception_number","get_the_most_recent_match","instruction_pointer","into","into","into","log_exception","log_handled_fault","log_panic_entry","new","print_fault_log","remove_unhandled_exceptions","replaced_crates","running_app_crate","running_task","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["fault_log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Crate where fault is observed is replaced, and then task …","A data structure to hold information about each fault. ","The possible faults (panics and exceptions) encountered  …","","","","Different Crate than the crate where fault is observed is …","This fault is handled as a recovery for different fault.  …","","No action taken on this fault.","","","","The different types of recovery procedures used for the  …","","Task restarted only. No crate replaced.","","Recovery Action taken as a result of the fault","For page faults the address the program attempted to …","","","","","","","Clears the log of faults so far occured in the system ","","","","","","","The ID of the CPU on which the error occured.","Crate the address at which exception occured located","","Error code returned with the exception","Type of fault","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Utility function to get Fault type from exception number. ","Provides the most recent entry in the log for given crate …","Address at which exception occured","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Add a new exception instance to the fault log.  Generally …","Add a <code>FaultEntry</code> to fault log.","Add a new panic instance to the fault log. ","Returns an empty <code>FaultEntry</code> with only <code>fault_type</code> field …","Prints the fault log","Removes the unhandled faults from the fault log and …","List of crates reloaded from memory to recover from fault","If available the application crate that spawned the task","Task runnning immediately before the Exception","","","","","","","","","","","",""],"i":[1,1,1,1,2,0,0,1,1,1,2,2,1,2,1,1,1,0,1,2,1,3,3,1,2,3,1,2,3,0,1,2,3,1,2,3,3,3,2,3,3,1,2,3,1,2,3,0,0,3,1,2,3,0,0,0,3,0,0,3,3,3,1,2,3,1,2,3,1,2,3,1,2,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],0,0,[[2,2],4],0,0,[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],[7,1],[8,[[9,[3]]]],0,[[]],[[]],[[]],[[7,10,[9,[11]],[9,[10]]]],[3],[12],[1,3],[[]],[[],[[13,[3]]]],0,0,0,[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15]],"p":[[4,"FaultType"],[4,"RecoveryAction"],[3,"FaultEntry"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"str"],[4,"Option"],[15,"usize"],[15,"u64"],[3,"PanicInfo"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"first_application":{"doc":"This crate contains a simple routine to start the first …","t":[5],"n":["start"],"q":["first_application"],"d":["Starts the first applications that run in Theseus  by …"],"i":[0],"f":[[[],[[2,[1]]]]],"p":[[15,"str"],[4,"Result"]]},\
"font":{"doc":"","t":[17,17,7],"n":["CHARACTER_HEIGHT","CHARACTER_WIDTH","FONT_BASIC"],"q":["font","",""],"d":["The height of a character.","The width of a character.","The bitmap array of characters."],"i":[0,0,0],"f":[0,0,0],"p":[]},\
"frame_allocator":{"doc":"Provides an allocator for physical memory frames. The …","t":[3,3,3,3,13,4,3,13,13,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11],"n":["AllocatedFrame","AllocatedFrames","AllocatedFramesIter","DeferredAllocAction","Free","MemoryRegionType","PhysicalMemoryRegion","Reserved","Unknown","allocate_frames","allocate_frames_at","allocate_frames_by_bytes","allocate_frames_by_bytes_at","allocate_frames_by_bytes_deferred","allocate_frames_deferred","as_allocated_frame","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","drop","drop","empty","eq","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from","init","into","into","into","into","into","into","into_iter","into_iter","merge","new","next","split","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["frame_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A reference to a single frame within a range of …","Represents a range of allocated physical memory <code>Frame</code>s; …","An iterator over each <code>AllocatedFrame</code> in a range of …","A series of pending actions related to frame allocator …","Memory that is available for any general purpose.","Types of physical memory. See each variant’s …","A region of physical memory.","Memory that is reserved for special use and is only ever …","Memory of an unknown type. This is a default value that …","Allocates the given number of frames with no constraints …","Allocates the given number of frames starting at …","Allocates frames with no constraints on the starting …","Allocates frames starting at the given <code>PhysicalAddress</code> …","Similar to <code>allocated_frames_deferred()</code>, but accepts a size …","The core frame allocation routine that allocates the given …","Returns an <code>AllocatedFrame</code> if this <code>AllocatedFrames</code> object …","","","","","","","","","","","","","","","","","","","","","","Returns an empty AllocatedFrames object that performs no …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the frame allocator with the given list of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Merges the given <code>AllocatedFrames</code> object <code>other</code> into this …","","","Splits this <code>AllocatedFrames</code> into two separate …","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,0,0,9,9,0,0,0,0,0,0,2,2,15,11,8,9,7,2,15,11,8,9,7,8,9,8,9,2,8,7,2,11,2,9,2,8,9,7,8,2,15,11,8,9,7,0,2,15,11,8,9,7,2,15,2,8,15,2,8,9,2,15,11,8,9,7,2,15,11,8,9,7,8,2,15,11,8,9,7],"f":[0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[4,1],[[6,[2,5]]]],[1,[[3,[2]]]],[[4,1],[[6,[2,5]]]],[[[3,[4]],1],[[6,[5]]]],[[[3,[4]],1],[[6,[5]]]],[2,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[[]],[[]],[2,10],[8,10],[7],[2],[11],[[],2],[[9,9],12],[[2,13],14],[[8,13],14],[[9,13],14],[[7,13],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[[]],[[2,2],[[6,[2]]]],[[10,9],8],[15,3],[[2,16],[[6,[2]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17]],"p":[[15,"usize"],[3,"AllocatedFrames"],[4,"Option"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[3,"AllocatedFrame"],[3,"PhysicalMemoryRegion"],[4,"MemoryRegionType"],[3,"FrameRange"],[3,"DeferredAllocAction"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"AllocatedFramesIter"],[3,"Frame"],[3,"TypeId"]]},\
"framebuffer":{"doc":"This crate defines a <code>Framebuffer</code> structure, which is …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,0,11,11,11,3,8,3,12,10,11,11,12,12,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,10,11,11],"n":["Framebuffer","borrow","borrow_mut","buffer","buffer_mut","composite_buffer","contains","draw_pixel","fill","from","get_hash","get_pixel","get_size","hash","index_of","init","into","new","overlaps_with","overwrite_pixel","pixel","try_from","try_into","type_id","AlphaPixel","Pixel","RGBPixel","alpha","blend","blend","blend","blue","blue","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","composite_buffer","composite_buffer","composite_buffer","fmt","fmt","from","from","from","from","get_hash","get_hash","green","green","hash","hash","into","into","red","red","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","weight_blend","weight_blend","weight_blend"],"q":["framebuffer","","","","","","","","","","","","","","","","","","","","","","","","framebuffer::pixel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A framebuffer is a region of memory interpreted as a 2-D …","","","Returns a reference to this framebuffer’s memory as a …","Returns a mutable reference to this framebuffer’s memory …","Composites <code>src</code> to the buffer starting from <code>index</code>.","Checks if the given <code>coordinate</code> is within the framebuffer’…","Draw a pixel at the given coordinate.  The <code>pixel</code> will be …","Fills (overwrites) the entire framebuffer with the given …","Returns the argument unchanged.","","Returns the pixel value at the given <code>coordinate</code> in this …","Returns the <code>(width, height)</code> of this framebuffer.","","Returns the index of the given <code>coordinate</code> in this …","Initializes the final framebuffer based on graphics mode …","Calls <code>U::from(self)</code>.","Creates a new framebuffer with rectangular dimensions of …","Checks if a framebuffer overlaps with an area.","Overwites a pixel at the given coordinate in this …","Defines the <code>Pixel</code> trait as well as basic pixel formats, …","","","","An Alpha Pixel is a pixel with an alpha channel","A pixel provides methods to blend with others.","An RGB Pixel is a pixel with no extra channel.","","blend with another pixel considering their extra channel.","","","","","","","","","","","","","Composites the <code>src</code> pixel slice to the <code>dest</code> pixel slice.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Blend two pixels linearly with weights, as <code>blend</code> for <code>origin</code>…","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,2,2,2,0,0,0,13,1,12,13,12,13,12,13,12,13,12,13,12,13,1,12,13,12,13,12,12,13,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,12,13,1,12,13],"f":[0,[[]],[[]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]],3]],[[[2,[1]],4],5],[[[2,[1]],4,1]],[[[2,[1]],1]],[[]],[[],6],[[[2,[1]],4],[[7,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]],4],[[7,[3]]]],[[],[[9,[[2,[1]],8]]]],[[]],[[3,3,[7,[10]]],[[9,[[2,[1]],8]]]],[[[2,[1]],4,3,3],5],[[[2,[1]],4,1]],0,[[],9],[[],9],[[],11],0,0,0,0,[[]],[[12,12],12],[[13,13],13],0,0,[[]],[[]],[[]],[[]],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[12,14],15],[[13,14],15],[16,12],[[]],[[]],[16,13],[[],6],[[],6],0,0,[12],[13],[[]],[[]],0,0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[17],[[12,12,17],12],[[13,13,17],13]],"p":[[8,"Pixel"],[3,"Framebuffer"],[15,"usize"],[3,"Coord"],[15,"bool"],[15,"u64"],[4,"Option"],[15,"str"],[4,"Result"],[3,"PhysicalAddress"],[3,"TypeId"],[3,"RGBPixel"],[3,"AlphaPixel"],[3,"Formatter"],[6,"Result"],[3,"Color"],[15,"f32"]]},\
"framebuffer_compositor":{"doc":"This crate defines a framebuffer compositor.","t":[17,3,7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CACHE_BLOCK_HEIGHT","CacheBlock","FRAME_COMPOSITOR","FrameCompositor","borrow","borrow","borrow_mut","borrow_mut","composite","from","from","into","into","overlaps_with","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["framebuffer_compositor","","","","","","","","","","","","","","","","","","",""],"d":["The height of a cache block. In every iteration the …","A <code>CacheBlock</code> represents the cached (previously-composited) …","The instance of the framebuffer compositor.","The framebuffer compositor structure. It caches …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if a cache block overlaps with another one","","","","","",""],"i":[0,0,0,0,7,1,7,1,1,7,1,7,1,7,7,1,7,1,7,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[1,2,3,[0,[2,4]]],[[6,[5]]]],[[]],[[]],[[]],[[]],[[7,7],8],[[],6],[[],6],[[],6],[[],6],[[],9],[[],9]],"p":[[3,"FrameCompositor"],[8,"IntoIterator"],[3,"Framebuffer"],[8,"Clone"],[15,"str"],[4,"Result"],[3,"CacheBlock"],[15,"bool"],[3,"TypeId"]]},\
"framebuffer_drawer":{"doc":"This crate contains a series of basic draw functions to …","t":[5,5,5,5],"n":["draw_circle","draw_line","draw_rectangle","fill_rectangle"],"q":["framebuffer_drawer","","",""],"d":["Draw a circle in the framebuffer. <code>coordinate</code> is the …","Draws a line in a framebuffer. The part exceeding the …","Draws a rectangle in a framebuffer. The part exceeding the …","Fills a rectangle in a framebuffer with color. The part …"],"i":[0,0,0,0],"f":[[[1,2,3,4]],[[1,2,2,4]],[[1,2,3,3,4]],[[1,2,3,3,4]]],"p":[[3,"Framebuffer"],[3,"Coord"],[15,"usize"],[8,"Pixel"]]},\
"framebuffer_printer":{"doc":"This crate contains functions to print strings in a …","t":[5,5,5],"n":["fill_blank","print_ascii_character","print_string"],"q":["framebuffer_printer","",""],"d":["Fill a blank text area (left, top, right, bottom) with …","Prints a character to the framebuffer at position (line, …","Prints a string in a framebuffer. Returns (column, line, …"],"i":[0,0,0],"f":[[[1,2,3]],[[1,4,3,3,5,6,6]],[[1,5,6,6,7,3,3,6,6]]],"p":[[3,"Framebuffer"],[3,"Rectangle"],[8,"Pixel"],[15,"u8"],[3,"Coord"],[15,"usize"],[15,"str"]]},\
"fs_node":{"doc":"Defines traits for Files and Directories within the …","t":[13,6,8,8,13,4,6,8,6,6,10,11,11,11,11,11,11,10,11,11,11,11,10,11,10,11,10,11,11,11,11,10,10,10,11,11,11,11,11],"n":["Dir","DirRef","Directory","File","File","FileOrDir","FileRef","FsNode","WeakDirRef","WeakFileRef","as_mapping","borrow","borrow_mut","clone","clone_into","fmt","from","get","get_absolute_path","get_absolute_path","get_dir","get_file","get_name","get_name","get_parent_dir","get_parent_dir","insert","into","is_dir","is_file","len","list","remove","set_parent_dir","set_parent_dir","to_owned","try_from","try_into","type_id"],"q":["fs_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A reference to any type that implements the <code>Directory</code> …","Trait for directories, implementors of Directory must also …","","","Allows us to return a generic type that can be matched by …","A reference to any type that implements the <code>File</code> trait, …","A trait that covers any filesystem node, both files and …","A weak reference to any type that implements the <code>Directory</code> …","A weak reference to any type that implements the <code>File</code> …","Returns a view of this file as an immutable memory-mapped …","","","","","","Returns the argument unchanged.","Gets either the file or directory in this <code>Directory</code>  on …","Recursively gets the absolute pathname as a String","","Like <code>Directory::get()</code>, but only looks for <strong>directories</strong> …","Like <code>Directory::get()</code>, but only looks for <strong>files</strong> matching …","Returns the string name of the node","","Returns the parent directory of the current node.","","Inserts the given new file or directory into this …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this is a <code>Directory</code>, <code>false</code> if it is a <code>File</code>.","Returns <code>true</code> if this is a <code>File</code>, <code>false</code> if it is a <code>Directory</code>.","Returns the length (size) in bytes of this <code>FileOrDir</code>.","Lists the names of the nodes in this directory.","Removes a file or directory from this directory and …","Sets this node’s parent directory. This is useful for …","","","","",""],"i":[4,0,0,0,4,0,0,0,0,0,16,4,4,4,4,4,4,17,18,4,17,17,18,4,18,4,17,4,4,4,4,17,17,18,4,4,4,4,4],"f":[0,0,0,0,0,0,0,0,0,0,[[],[[3,[1,2]]]],[[]],[[]],[4,4],[[]],[[4,5],6],[[]],[2,[[7,[4]]]],[[],8],[4,8],[2,[[7,[9]]]],[2,[[7,[10]]]],[[],8],[4,8],[[],[[7,[9]]]],[4,[[7,[9]]]],[4,[[3,[[7,[4]],2]]]],[[]],[4,11],[4,11],[4,12],[[],[[13,[8]]]],[4,[[7,[4]]]],[14],[[4,14]],[[]],[[],3],[[],3],[[],15]],"p":[[3,"MappedPages"],[15,"str"],[4,"Result"],[4,"FileOrDir"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"String"],[6,"DirRef"],[6,"FileRef"],[15,"bool"],[15,"usize"],[3,"Vec"],[6,"WeakDirRef"],[3,"TypeId"],[8,"File"],[8,"Directory"],[8,"FsNode"]]},\
"gdt":{"doc":"","t":[4,4,3,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AvailableSegmentSelector","Descriptor","Gdt","KernelCode","KernelData","SystemSegment","Tss","UserCode32","UserCode64","UserData32","UserData64","UserSegment","add_entry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_and_load_tss_gdt","create_gdt","fmt","fmt","from","from","from","get","into","into","into","kernel_code_segment","kernel_data_segment","load","new","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","tss_segment","type_id","type_id","type_id","user_code_32_segment","user_code_64_segment","user_data_32_segment","user_data_64_segment"],"q":["gdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The GDT <code>SegmentSelector</code>s available in Theseus.","The two kinds of descriptor entries in the GDT.","The Global Descriptor Table, as specified by the x86_64 …","","","SystemSegment is used only for TSS.","","","","","","UserSegment is used for both code and data segments,  in …","","","","","","","","","","This function first creates and sets up a new TSS with the …","Creates and sets up a new GDT that refers to the given <code>TSS</code>…","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the requested <code>SegmentSelector</code>, or <code>None</code> if it hasn…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,5,5,2,5,5,5,5,5,2,1,1,2,5,1,2,5,5,5,0,0,1,5,1,2,5,5,1,2,5,2,2,1,1,5,1,1,2,5,1,2,5,2,1,2,5,2,2,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[[]],[[6,7,7]],[8],[[1,9],[[11,[10]]]],[[5,9],12],[[]],[[]],[[]],[5,[[13,[4]]]],[[]],[[]],[[]],[[],2],[[],2],[1],[[],1],[[]],[[],14],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[8,2],[[],15],[[],15],[[],15],[[],2],[[],2],[[],2],[[],2]],"p":[[3,"Gdt"],[4,"Descriptor"],[4,"PrivilegeLevel"],[3,"SegmentSelector"],[4,"AvailableSegmentSelector"],[3,"CpuId"],[3,"VirtualAddress"],[3,"TaskStateSegment"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"gic":{"doc":"Allows configuring the Generic Interrupt Controller","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"heap":{"doc":"The global allocator for the system.  It starts off as a …","t":[7,17,3,11,11,11,11,11,11,5,11,5,11,11,11],"n":["GLOBAL_ALLOCATOR","HEAP_FLAGS","Heap","alloc","borrow","borrow_mut","dealloc","empty","from","init_single_heap","into","set_allocator","try_from","try_into","type_id"],"q":["heap","","","","","","","","","","","","","",""],"d":["","The heap mapped pages should be writable and …","The heap which is used as a global allocator for the …","","","","","Returns a heap in which only an empty initial allocator …","Returns the argument unchanged.","Initializes the single heap, which is the first heap used …","Calls <code>U::from(self)</code>.","Sets a new default allocator to be used by the global …","","",""],"i":[0,0,0,1,1,1,1,1,1,0,1,0,1,1,1],"f":[0,0,0,[[1,2],3],[[]],[[]],[[1,3,2]],[[],1],[[]],[[4,4]],[[]],[[[6,[5]]]],[[],7],[[],7],[[],8]],"p":[[3,"Heap"],[3,"Layout"],[15,"u8"],[15,"usize"],[8,"GlobalAlloc"],[3,"Box"],[4,"Result"],[3,"TypeId"]]},\
"heapfile":{"doc":"An implementation of in-memory files, backed by heap …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["HeapFile","as_mapping","borrow","borrow_mut","create","flush","from","from_vec","get_name","get_parent_dir","into","len","read_at","set_parent_dir","try_from","try_into","type_id","write_at"],"q":["heapfile","","","","","","","","","","","","","","","","",""],"d":["A file in memory that is backed by the heap, i.e., a <code>Vec</code>.","","","","Creates a new file with empty content in the given <code>parent</code> …","","Returns the argument unchanged.","Creates a new <code>HeapFile</code> in the given <code>parent</code> directory with …","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[4,[2,3]]]],[[]],[[]],[[5,6],[[4,[7,3]]]],[1,[[4,[8]]]],[[]],[[[10,[9]],5,6],[[4,[7,3]]]],[1,5],[1,[[11,[6]]]],[[]],[1,12],[[1,12],[[4,[12,8]]]],[[1,13]],[[],4],[[],4],[[],14],[[1,12],[[4,[12,8]]]]],"p":[[3,"HeapFile"],[3,"MappedPages"],[15,"str"],[4,"Result"],[3,"String"],[6,"DirRef"],[6,"FileRef"],[4,"IoError"],[15,"u8"],[3,"Vec"],[4,"Option"],[15,"usize"],[6,"WeakDirRef"],[3,"TypeId"]]},\
"hpet":{"doc":"Support for the HPET: High Precision Event Timer.","t":[17,3,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,5,5,5,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["HPET_SIGNATURE","Hpet","HpetAcpiTable","HpetTimer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","comparator_value","configuration_and_capability","counter_period_femtoseconds","enable_counter","fmt","from","from","from","fsb_interrupt_route","general_capabilities_and_id","general_configuration","general_interrupt_status","get","get_counter","get_hpet","get_hpet_mut","handle","init_hpet","into","into","into","main_counter_value","now","num_timers","timers","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vendor_id"],"q":["hpet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A structure that offers access to HPET through its I/O …","The structure of the HPET ACPI table.","A structure that wraps HPET I/O register for each timer …","","","","","","","","","This timer’s Comparator Value register.","This timer’s Configuration and Capability register.","Returns the period of the HPET counter in femtoseconds, …","Turns on or off the main counter","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This timer’s FSB Interrupt Route register. Some info …","The General Capabilities and ID Register, at offset 0x0.","The General Configuration Register, at offset 0x10.","The General Interrupt Status Register, at offset 0x20.","Finds the HPET in the given <code>AcpiTables</code> and returns a …","Returns the HPET’s main counter value","Returns a locked guard that immutably derefs to the HPET …","Returns a locked guard that mutably derefs to the HPET …","The handler for parsing the HPET table and adding it to …","Initializes the HPET counter-based timer based on the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The Main Counter Value Register, at offset 0xF0.","","","The timers (comparators) available for separate. There is …","","","","","","","","","","",""],"i":[0,0,0,0,2,25,1,2,25,1,1,1,25,25,2,2,1,2,25,1,25,2,2,2,1,2,0,0,0,1,2,25,1,2,2,2,2,1,2,25,1,2,25,1,2,25,1,2],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[2,3],[[2,4]],[[1,5],6],[[]],[[]],[[]],0,0,0,0,[7,[[8,[1]]]],[2,9],[[],[[8,[[12,[[11,[2,10]]]]]]]],[[],[[8,[[13,[[11,[2,10]]]]]]]],[[7,14,15,16],[[18,[17]]]],[[1,19],[[18,[20,17]]]],[[]],[[]],[[]],0,[[],21],[2,22],0,[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],23],[[],23],[[],23],[2,24]],"p":[[3,"HpetAcpiTable"],[3,"Hpet"],[15,"u32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"AcpiTables"],[4,"Option"],[15,"u64"],[3,"Mutable"],[3,"BorrowedMappedPages"],[3,"RwLockReadGuard"],[6,"RwLockWriteGuard"],[6,"AcpiSignature"],[15,"usize"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[3,"PageTable"],[6,"RwLock"],[3,"Instant"],[15,"u8"],[3,"TypeId"],[15,"u16"],[3,"HpetTimer"]]},\
"http_client":{"doc":"Functions for creating and sending HTTP requests and …","t":[3,6,3,11,11,11,11,11,11,5,11,11,11,12,11,11,11,12,12,5,12,11,11,11,11,11,11],"n":["ConnectedTcpSocket","HttpRequest","HttpResponse","as_result","as_result_err_str","borrow","borrow","borrow_mut","borrow_mut","check_http_request","from","from","header_bytes","header_length","into","into","new","packet","reason","send_request","status_code","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["http_client","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A convenience struct that packages together a connected …","TODO: create a proper HttpRequest type with header …","An HttpResponse that has been fully received from a remote …","Returns the content of this <code>HttpResponse</code> as a <code>Result</code>,  in …","A convenience function that just returns a standard Err …","","","","","Checks to see if the provided HTTP request can be properly …","Returns the argument unchanged.","Returns the argument unchanged.","","The length of all headers","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ConnectedTcpSocket</code> with the given necessary …","The actual array of raw bytes received from the server,  …","The reason, e.g., “OK”, “File not found”","Sends the given HTTP request over the network via the …","The status code, e.g., 200, 404","","","","","",""],"i":[0,0,0,1,1,1,8,1,8,0,1,8,1,1,1,8,8,1,1,0,1,1,8,1,8,1,8],"f":[0,0,0,[1,2],[1,[[2,[3]]]],[[]],[[]],[[]],[[]],[[],4],[[]],[[]],[1],0,[[]],[[]],[[5,6,7],[[2,[8,3]]]],0,0,[[9,8,[11,[10]]],[[2,[1,3]]]],0,[[],2],[[],2],[[],2],[[],2],[[],12],[[],12]],"p":[[3,"HttpResponse"],[4,"Result"],[15,"str"],[15,"bool"],[6,"NetworkInterfaceRef"],[3,"Set"],[3,"Handle"],[3,"ConnectedTcpSocket"],[6,"HttpRequest"],[15,"u64"],[4,"Option"],[3,"TypeId"]]},\
"idle":{"doc":"CPU idle management.","t":[3,11,11,11,12,12,11,11,5,11,12,12,12,11,11,11],"n":["IdleState","borrow","borrow_mut","clone","eax","exit_latency","fmt","from","idle_states","into","name","target_residency","tlb_flushed","try_from","try_into","type_id"],"q":["idle","","","","","","","","","","","","","","",""],"d":["A CPU idle state.","","","","The value of EAX when calling MWAIT to enter the idle …","The amount of time it takes for the CPU to exit the idle …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The name of the idle state.","The amount of time the CPU must spend in the idle state to …","Whether entering the state flushes the TLB.","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],0,0,[[1,2],3],[[]],[[],4],[[]],0,0,0,[[],5],[[],5],[[],6]],"p":[[3,"IdleState"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"intel_ethernet":{"doc":"Definitions of descriptor types and type aliases for NIC …","t":[0,3,3,3,3,17,17,8,17,17,17,17,17,17,17,17,17,17,17,8,11,11,11,11,11,11,11,11,12,12,12,12,12,12,10,11,11,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,10,11,11,12,12,12,12,12,12,12,10,11,11,10,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11],"n":["descriptors","AdvancedRxDescriptor","AdvancedTxDescriptor","LegacyRxDescriptor","LegacyTxDescriptor","RX_STATUS_DD","RX_STATUS_EOP","RxDescriptor","TX_CMD_DEXT","TX_CMD_EOP","TX_CMD_IC","TX_CMD_IDE","TX_CMD_IFCS","TX_CMD_RPS","TX_CMD_RS","TX_CMD_VLE","TX_DTYP_ADV","TX_PAYLEN_SHIFT","TX_STATUS_DD","TxDescriptor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","cmd","cso","css","data_len","dcmd","descriptor_done","descriptor_done","descriptor_done","dtyp_mac_rsv","end_of_packet","end_of_packet","end_of_packet","errors","fmt","fmt","fmt","fmt","from","from","from","from","get_ext_error","get_ext_status","get_fdf_id","get_hdr_len","get_packet_type","get_pkt_len","get_rsccnt","get_rss_hash","get_rss_type","get_sph","get_vlan_tag","header_buffer_address","init","init","init","init","init","init","into","into","into","into","length","length","length","length","length","packet_buffer_address","packet_buffer_address","paylen_popts_cc_idx_sta","phys_addr","phys_addr","reset_status","reset_status","reset_status","send","send","send","set_packet_address","set_packet_address","set_packet_address","status","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vlan","vlan","wait_for_packet_tx","wait_for_packet_tx","wait_for_packet_tx"],"q":["intel_ethernet","intel_ethernet::descriptors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The different descriptor types used by Intel NICs. Usually …","Advanced Receive Descriptor used in the Ixgbe driver. It …","Advanced Transmit Descriptor used by the <code>ixgbe</code> NIC driver.","This struct is a Legacy Receive Descriptor.  The driver …","This struct is a Legacy Transmit Descriptor.  It’s the …","Rx Status: Descriptor Done","Rx Status: End of Packet","A trait for the minimum set of functions needed to receive …","Tx Command: Descriptor Extension (Advanced format)","Tx Command: End of Packet","Tx Command: Insert Checksum","Tx Command: Interrupt Delay Enable","Tx Command: Insert MAC FCS","Tx Command: Report Packet Sent","Tx Command: Report Status","Tx Command: VLAN Packet Enable","Tx Descriptor Type: advanced","Tx Descriptor paylen shift The paylen is located at bit 46 …","Tx Status: descriptor Done","A trait for the minimum set of functions needed to …","","","","","","","","","Checksum value of the packet after the IP header till the …","Command bits","Checksum offset: where to insert the checksum from the …","Checksum start: where to begin computing the checksum, if …","Length of data buffer","Command bits","Returns true if the descriptor has a received packet …","","","A multi-part field:","Returns true if the descriptor’s packet buffer is the …","","","Receive errors","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Write Back mode function for the Advanced Receive …","Starting physcal address of the receive buffer for the …","Initializes a receive descriptor by clearing its status  …","Initializes a transmit descriptor by clearing all of its …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The length of the packet in the descriptor’s packet …","","","Length of the transmit buffer in bytes","Length of the receive buffer in bytes","Starting physcal address of the receive buffer for the …","Starting physical address of the receive buffer for the …","A multi-part field:","The starting physical address of the transmit buffer","The starting physical address of the receive buffer","Clears the status bits of the descriptor.","","","Updates the transmit descriptor to send the packet. We …","","","Updates the descriptor’s physical address.","","","Status bits","Status bits which tell if the descriptor has been used","","","","","","","","","","","","","Vlan tags ","Vlan tags","Polls the Descriptor Done bit until the packet has been …","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,3,7,4,2,3,7,2,4,4,4,7,7,13,2,3,7,13,2,3,2,4,2,3,7,4,2,3,7,3,3,3,3,3,3,3,3,3,3,3,3,13,14,4,2,3,7,4,2,3,7,13,2,3,4,2,3,7,7,4,2,13,2,3,14,4,7,13,2,3,4,2,4,2,3,7,4,2,3,7,4,2,3,7,4,2,14,4,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[2,1],[3,1],0,[[],1],[2,1],[3,1],0,[[4,5],6],[[2,5],6],[[3,5],6],[[7,5],6],[[]],[[]],[[]],[[]],[3,8],[3,8],[3,8],[3,8],[3,8],[3,8],[3,8],[3,8],[3,8],[3,1],[3,8],0,[9],[[]],[4],[[2,9]],[[3,9]],[7],[[]],[[]],[[]],[[]],[[],8],[2,8],[3,8],0,0,0,0,0,0,0,[[]],[2],[3],[[9,10]],[[4,9,10]],[[7,9,10]],[9],[[2,9]],[[3,9]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],0,0,[[]],[4],[7]],"p":[[15,"bool"],[3,"LegacyRxDescriptor"],[3,"AdvancedRxDescriptor"],[3,"LegacyTxDescriptor"],[3,"Formatter"],[6,"Result"],[3,"AdvancedTxDescriptor"],[15,"u64"],[3,"PhysicalAddress"],[15,"u16"],[4,"Result"],[3,"TypeId"],[8,"RxDescriptor"],[8,"TxDescriptor"]]},\
"interrupts":{"doc":"Basic interrupt handling structures and simple handler …","t":[17,4,13,13,7,17,6,2,3,11,11,11,11,11,11,5,5,11,11,11,11,11,5,5,14,14,11,11,5,5,5,11,11,11,11,11,11],"n":["CPU_LOCAL_TIMER_IRQ","EoiBehaviour","HandlerDidNotSendEoi","HandlerSentEoi","IDT","IRQ_BASE_OFFSET","InterruptHandler","InterruptNumber","InterruptStackFrame","as_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deregister_interrupt","eoi","eq","fmt","fmt","from","from","init","init_ap","interrupt_handler","interrupt_handler","into","into","is_exception_handler_with_error_code","register_interrupt","register_msi_interrupt","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["interrupts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The IRQ number reserved for CPU-local timer interrupts, …","","The interrupt handler hasn’t called the <code>eoi</code> function, in …","The interrupt handler has called the <code>eoi</code> function.","The single system-wide Interrupt Descriptor Table (IDT).","The offset added to the first IRQ: <code>0x20</code>.","A handler function for an interrupt or an exception …","","Wrapper type for the interrupt stack frame pushed by the …","Gives mutable access to the contents of the interrupt …","","","","","","Deregisters an interrupt handler, making it available to …","Send an end of interrupt signal, notifying the interrupt …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the interrupt subsystem and sets up an initial …","Similar to <code>init()</code>, but for APs to call after the BSP has …","Macro which helps writing cross-platform interrupt …","Macro which helps writing cross-platform interrupt …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the given address is the exception handler …","Registers an interrupt handler at the given IRQ interrupt …","Allocates and returns an unused interrupt number and sets …","","","","","",""],"i":[0,0,10,10,0,0,0,0,0,1,10,1,10,1,1,0,0,10,10,1,10,1,0,0,0,0,10,1,0,0,0,10,1,10,1,10,1],"f":[0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[1],[[5,6],[[8,[7]]]],[[[9,[5]]]],[[10,10],11],[[10,12],13],[[1,12],[[8,[14]]]],[[]],[[]],[[15,15],[[8,[16,7]]]],[[17,15,15],[[8,[16,7]]]],0,0,[[]],[[]],[18,11],[[5,6],[[8,[19]]]],[6,[[8,[5,7]]]],[[],8],[[],8],[[],8],[[],8],[[],20],[[],20]],"p":[[3,"InterruptStackFrame"],[3,"InterruptStackFrameValue"],[3,"ReadWrite"],[3,"Volatile"],[15,"u8"],[6,"InterruptHandler"],[15,"str"],[4,"Result"],[4,"Option"],[4,"EoiBehaviour"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"VirtualAddress"],[3,"LockedIdt"],[3,"CpuId"],[15,"u64"],[15,"usize"],[3,"TypeId"]]},\
"io":{"doc":"Traits and types for expressing I/O transfers of both …","t":[3,8,8,8,8,3,3,8,3,13,4,8,3,13,3,3,13,3,12,10,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11],"n":["BlockByteTransfer","BlockIo","BlockReader","BlockWriter","ByteReader","ByteReaderWrapper","ByteReaderWriterWrapper","ByteWriter","ByteWriterWrapper","InvalidInput","IoError","KnownLength","LockableIo","Other","Reader","ReaderWriter","TimedOut","Writer","block_range","block_size","block_size","block_size","block_size","block_size","block_size","block_size","block_size","blocks_from_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_range_absolute","bytes_in_block_range","clone","clone_into","deref","deref","deref_mut","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","len","len","len","len","len","len","len","len","new","new","new","read","read","read","read","read_at","read_at","read_at","read_at","read_at","read_at","read_at","read_blocks","read_blocks","read_blocks","read_blocks","read_blocks","read_blocks","read_blocks","seek","seek","seek","seek","seek","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write_at","write_at","write_at","write_at","write_at","write_at","write_at","write_blocks","write_blocks","write_blocks","write_blocks","write_blocks","write_blocks","write_blocks","write_str","write_str"],"q":["iod":["Describes an operation for performing byte-wise I/O on a …","A parent trait used to specify the block size (in bytes) …","A trait that represents an I/O stream (e.g., an I/O …","A trait that represents an I/O stream (e.g., an I/O …","A trait that represents an I/O stream that can be read …","A wrapper struct that implements a byte-wise reader atop a …","A wrapper struct that implements a byte-wise reader and …","A trait that represents an I/O stream that can be written …","A wrapper struct that implements a byte-wise writer atop a …","An input parameter or argument was incorrect or invalid.","Errors that can be returned from I/O operations.","A trait that represents an I/O stream that has a known …","A struct that holds an IO object wrapped in a <code>Lockable</code> …","A miscellaneous error occurred.","A stateful reader that keeps track of its current offset …","A readable and writable “stateful” I/O stream that …","The I/O operation timed out and was canceled.","A stateful writer that keeps track of its current offset …","The range of blocks to transfer.","Returns the size in bytes of a single block (i.e., sector),","","","","","","","","Calculates block-wise bounds for an I/O transfer  based on …","","","","","","","","","","","","","","","","","","","The byte-wise range specified in absolute bytes from the …","The range of bytes relative to the blocks specified by …","","","","","","Flushes this entire writer’s output stream,  ensuring …","Flushes this writer’s output stream,  ensuring all …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length (size in bytes) of this I/O stream or …","","","","","","","","Creates a new <code>ReaderWriter</code> with an initial offset of 0.","Creates a new <code>Reader</code> with an initial offset of 0.","Creates a new <code>Writer</code> with an initial offset of 0.","","","","","Reads bytes of data from this reader into the given <code>buffer</code>.","","","","","","","Reads blocks of data from this reader into the given <code>buffer</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes bytes of data from the given <code>buffer</code> to this writer.","","","","","","","Writes blocks of data from the given <code>buffer</code> to this writer.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,10,0,15,22,2,3,4,5,6,7,8,0,2,3,4,5,6,7,10,8,15,2,3,4,5,6,7,10,8,15,15,15,8,8,5,8,5,23,18,3,3,4,4,5,5,5,7,7,7,8,8,8,8,8,8,10,8,15,2,2,2,3,3,3,4,4,4,5,6,7,10,10,8,8,8,15,2,3,4,5,6,7,10,8,15,24,2,3,4,5,6,7,8,5,6,7,5,6,8,8,25,2,3,5,6,8,8,26,2,3,5,6,8,8,5,6,7,8,8,8,2,3,4,5,6,7,10,8,15,2,3,4,5,6,7,10,8,15,2,3,4,5,6,7,10,8,15,5,7,8,8,18,3,4,5,7,8,8,23,3,4,5,7,8,8,8,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[[[9,[1]],1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[8,8],[[]],[5],[8],[5],[[],[[11,[10]]]],[[],[[11,[10]]]],[3,[[11,[10]]]],[3,[[11,[10]]]],[4,[[11,[10]]]],[4,[[11,[10]]]],[5,[[11,[10]]]],[5,[[11,[10]]]],[5,12],[7,12],[7,[[11,[10]]]],[7,[[11,[10]]]],[8,12],[8,[[11,[10]]]],[8,12],[8,[[11,[10]]]],[8,[[11,[10]]]],[8,[[11,[10]]]],[[10,13],14],[[8,13],14],[[15,13],14],[[],2],[16],[[]],[16],[[]],[[],3],[[]],[[],4],[16],[[]],[[]],[[]],[17,10],[[]],[16],[[]],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[[],5],[[],6],[18,[[7,[18]]]],[5,[[12,[1]]]],[6,[[12,[1]]]],[8,[[12,[1]]]],[8,[[12,[1]]]],[1,[[11,[1,10]]]],[[2,1],[[11,[1,10]]]],[[3,1],[[11,[1,10]]]],[[5,1],[[11,[1,10]]]],[[6,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[1,[[11,[1,10]]]],[[2,1],[[11,[1,10]]]],[[3,1],[[11,[1,10]]]],[[5,1],[[11,[1,10]]]],[[6,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[[5,19],[[12,[20]]]],[[6,19],[[12,[20]]]],[[7,19],[[12,[20]]]],[[8,19],[[12,[20]]]],[[8,19],[[12,[20]]]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[5,[[12,[1]]]],[7,[[12,[1]]]],[8,[[12,[1]]]],[8,[[12,[1]]]],[1,[[11,[1,10]]]],[[3,1],[[11,[1,10]]]],[[4,1],[[11,[1,10]]]],[[5,1],[[11,[1,10]]]],[[7,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[1,[[11,[1,10]]]],[[3,1],[[11,[1,10]]]],[[4,1],[[11,[1,10]]]],[[5,1],[[11,[1,10]]]],[[7,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[[8,1],[[11,[1,10]]]],[[8,17],14],[[8,17],14]],"p":[[15,"usize"],[3,"ByteReaderWrapper"],[3,"ByteReaderWriterWrapper"],[3,"ByteWriterWrapper"],[3,"ReaderWriter"],[3,"Reader"],[3,"Writer"],[3,"LockableIo"],[3,"Range"],[4,"IoError"],[4,"Result"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"BlockByteTransfer"],[15,"never"],[15,"str"],[8,"ByteWriter"],[4,"SeekFrom"],[15,"u64"],[3,"TypeId"],[8,"BlockIo"],[8,"BlockWriter"],[8,"KnownLength"],[8,"ByteReader"],[8,"BlockReader"]]},\
"ioapic":{"doc":"","t":[3,11,11,11,11,11,5,5,5,11,11,12,11,11,11,11,11,11,11],"n":["IoApic","arbitration_id","borrow","borrow_mut","create","from","get_first_ioapic","get_ioapic","get_ioapics","handles_irq","id","id","into","mask_irq","set_irq","try_from","try_into","type_id","version"],"q":["ioapic","","","","","","","","","","","","","","","","","",""],"d":["A representation of an IoApic (x86-specific interrupt chip …","gets this IoApic’s arbitration id.","","","Creates a new IoApic struct from the given <code>id</code>, …","Returns the argument unchanged.","Returns the first <code>IoApic</code> that was created, if any, after …","If an <code>IoApic</code> with the given <code>id</code> exists, then lock it …","Returns a reference to the list of IoApics.","Returns whether this IoApic handles the given <code>irq_num</code>, …","gets this IoApic’s id.","The ID of this IoApic.","Calls <code>U::from(self)</code>.","Masks (disables) the given IRQ line.  NOTE: this function …","Set IRQ to an interrupt vector.","","","","gets this IoApic’s version."],"i":[0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,2],[[]],[[]],[[3,4,5,2],[[7,[6]]]],[[]],[[],[[9,[[8,[1]]]]]],[4,[[9,[[8,[1]]]]]],[[],10],[[1,2],11],[1,2],0,[[]],[[1,4]],[[1,4,12,4],[[7,[6]]]],[[],7],[[],7],[[],13],[1,2]],"p":[[3,"IoApic"],[15,"u32"],[3,"PageTable"],[15,"u8"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[3,"MutexGuard"],[4,"Option"],[3,"AtomicMap"],[15,"bool"],[3,"ApicId"],[3,"TypeId"]]},\
"iommu":{"doc":"Intel VT-d (IOMMU) implementation.","t":[3,11,11,11,5,11,5,11,11,11],"n":["IntelIommu","borrow","borrow_mut","from","init","into","iommu_present","try_from","try_into","type_id"],"q":["iommu","","","","","","","","",""],"d":["Struct representing IOMMU (TODO: rename since this is …","","","Returns the argument unchanged.","Initialize the IOMMU hardware.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if an IOMMU exists and has been initialized.","","",""],"i":[0,9,9,9,0,9,0,9,9,9],"f":[0,[[]],[[]],[[]],[[1,2,3,4],[[6,[5]]]],[[]],[[],7],[[],6],[[],6],[[],8]],"p":[[15,"u8"],[15,"u16"],[3,"PhysicalAddress"],[3,"PageTable"],[15,"str"],[4,"Result"],[15,"bool"],[3,"TypeId"],[3,"IntelIommu"]]},\
"irq_safety":{"doc":"Types for interrupt-safe operations, i.e., avoiding …","t":[3,3,3,6,6,3,3,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["HeldInterrupts","MutexIrqSafe","MutexIrqSafeGuard","MutexIrqSafeGuardRef","MutexIrqSafeGuardRefMut","RwLockIrqSafe","RwLockIrqSafeReadGuard","RwLockIrqSafeReadGuardRef","RwLockIrqSafeWriteGuard","RwLockIrqSafeWriteGuardRefMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","deref","deref","deref","deref_mut","deref_mut","disable_interrupts","drop","enable_interrupts","fmt","fmt","force_read_decrement","force_unlock","force_write_unlock","from","from","from","from","from","from","get_mut","get_mut","hold_interrupts","interrupts_enabled","into","into","into","into","into","into","into_inner","into_inner","is_locked","lock","new","new","read","reader_count","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","write","writer_count"],"q":["irq_safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A handle for frozen interrupts","This type provides interrupt-safe MUTual EXclusion based …","A guard to which the protected data can be accessed","Typedef of a owning reference that uses a <code>MutexIrqSafeGuard</code>…","Typedef of a mutable owning reference that uses a …","A simple wrapper around a <code>RwLock</code> whose guards disable …","A guard to which the protected data can be read","Typedef of a owning reference that uses a …","A guard to which the protected data can be written","Typedef of a mutable owning reference that uses a …","","","","","","","","","","","","","","","","","","","","","","","","","","Force decrement the reader count.","Force unlock the spinlock.","Force unlock exclusive write access.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Prevent interrupts from firing until the return value is …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this MutexIrqSafe, returning the underlying data.","Consumes this <code>RwLockIrqSafe</code>, returning the underlying data.","Returns <code>true</code> if the lock is currently held.","Locks the spinlock and returns a guard.","Creates a new spinlock wrapping the supplied data.","Creates a new spinlock wrapping the supplied data.","Locks this RwLockIrqSafe with shared read access, blocking …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","","Tries to lock the MutexIrqSafe. If it is already locked, …","Attempt to acquire this lock with shared read access.","Attempt to lock this rwlock with exclusive write access.","","","","","","","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,3,6,4,7,8,5,3,6,4,7,8,5,3,4,5,6,7,8,6,8,0,5,0,3,4,4,3,4,3,6,4,7,8,5,3,4,0,0,3,6,4,7,8,5,3,4,3,3,3,4,4,4,3,6,4,7,8,5,3,6,4,7,8,5,3,4,4,3,6,4,7,8,5,4,4],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[],5],[[[6,[1]]]],[[[7,[1]]]],[[[8,[1]]]],[[[6,[1]]]],[[[8,[1]]]],[[]],[5],[[]],[[[3,[[0,[1,9]]]],10],11],[[[4,[[0,[1,9]]]],10],11],[[[4,[1]]]],[[[3,[1]]]],[[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]]]],[[[4,[1]]]],[[],5],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[3],[4],[[[3,[1]]],12],[[[3,[1]]],[[6,[1]]]],[[],3],[[],4],[[[4,[1]]],[[7,[1]]]],[[[4,[1]]],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[3,[1]]],[[15,[[6,[1]]]]]],[[[4,[1]]],[[15,[[7,[1]]]]]],[[[4,[1]]],[[15,[[8,[1]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[[4,[1]]],[[8,[1]]]],[[[4,[1]]],13]],"p":[[8,"Sized"],[8,"Default"],[3,"MutexIrqSafe"],[3,"RwLockIrqSafe"],[3,"HeldInterrupts"],[3,"MutexIrqSafeGuard"],[3,"RwLockIrqSafeReadGuard"],[3,"RwLockIrqSafeWriteGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"bool"],[15,"usize"],[4,"Result"],[4,"Option"],[3,"TypeId"]]},\
"ixgbe":{"doc":"An ixgbe driver for a 82599 10GbE Network Interface Card.","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,17,17,7,17,17,3,13,13,13,13,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,11,11,11,11,0,11,11,11,11,5,5,5,5],"n":["Buffer10KiB","Buffer11KiB","Buffer12KiB","Buffer13KiB","Buffer14KiB","Buffer15KiB","Buffer16KiB","Buffer1KiB","Buffer2KiB","Buffer3KiB","Buffer4KiB","Buffer5KiB","Buffer6KiB","Buffer7KiB","Buffer8KiB","Buffer9KiB","FilterProtocol","INTEL_82599","INTEL_VEND","IXGBE_NICS","IXGBE_NUM_RX_QUEUES_ENABLED","IXGBE_NUM_TX_QUEUES_ENABLED","IxgbeNic","LS100","LS1000","LS10000","LSUnknown","LinkSpeedMbps","Other","RxBufferSizeKiB","Sctp","Tcp","Udp","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","device_id","enable_rss","eq","from","from","from","from","get_ixgbe_nic","get_ixgbe_nics_list","get_received_frame","get_stats","init","into","into","into","into","link_speed","link_status","mac_address","mac_address","mem_map_msix","poll_receive","receive","rx_poll_mq","send","send_packet","set_5_tuple_filter","spoof_mac","test_packets","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_send_mq","type_id","type_id","type_id","type_id","virtual_function","vzip","vzip","vzip","vzip","create_dhcp_test_packet","create_raw_packet","dhcp_request_packet","create_virtual_nic"],"q":["ixgbe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ixgbe::test_packets","","","ixgbe::virtual_function"],"d":["","","","","","","","","","","","","","","","","Options for the filter protocol used in the 5-tuple …","Device ID for the 82599ES, used to identify the device …","Vendor ID for Intel","All the 82599 NICs found in the PCI space are initialized …","The number of receive queues that are enabled.  Do NOT set …","The number of transmit queues that are enabled.  Do NOT …","A struct representing an ixgbe network interface card.","","","","","Possible link speeds of the 82599 NIC","","The set of receive buffer sizes that are accepted by the …","","","","","","","","","","","","","","Returns the device id of the PCI device.","Enable multiple receive queues with RSS. Part of queue …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the IxgbeNic wrapped in a …","Returns a reference to the list of all initialized ixgbe …","","Returns the Rx and Tx statistics in the form: (Good Rx …","Store required values from the device’s PCI config …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns link speed in Mb/s","Returns value of (links, links2) registers","","","Returns the memory mapped msix vector table","","","A helper function to poll the nic receive queues (only for …","","","Sets the L3/L4 5-tuple filter which can do an exact match …","","A set of functions to create packets for testing the NIC …","","","","","","","","","","A helper function to send a test packet on a nic transmit …","","","","","Interface for an application to request a <code>VirtualNIC</code> from …","","","","","Creates a <code>TransmitBuffer</code> containing a dhcp packet.","Creates a <code>TransmitBuffer</code> that contains a packet with only …","Sends a dhcp request packet on the ixgbe NIC.","Create a virtual NIC from the ixgbe device."],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,6,6,6,6,0,20,0,20,20,20,2,20,6,1,2,20,6,1,1,1,2,2,6,2,20,6,1,0,0,2,2,2,2,20,6,1,2,2,2,2,2,2,2,0,2,2,2,2,0,1,2,20,6,1,2,20,6,1,0,2,20,6,1,0,2,20,6,1,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[2,3],0,[[6,6],7],[[]],[[]],[[]],[[]],[3,[[5,[8,4]]]],[[],[[10,[9]]]],[2,[[10,[11]]]],[2],[[12,3,7,[10,[[9,[13]]]],7,1,14,14],[[5,[[8,[2]],4]]]],[[]],[[]],[[]],[[]],[2,6],[2],[2],[2],[12,[[5,[[16,[0,15]],4]]]],[2,[[5,[4]]]],[2,[[10,[11]]]],[[17,3],[[5,[11,4]]]],[2,[[5,[18]]]],[[2,19],[[5,[4]]]],[[2,10,10,[10,[14]],[10,[14]],[10,[20]],21,21],[[5,[21,4]]]],[2],0,[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[17,3,[10,[19]]],[[5,[4]]]],[[],22],[[],22],[[],22],[[],22],0,[[]],[[]],[[]],[[]],[[],[[5,[19,4]]]],[[],[[5,[19,4]]]],[3,[[5,[4]]]],[[3,9,17,17],[[5,[[25,[0,23,0,24]],4]]]]],"p":[[4,"RxBufferSizeKiB"],[3,"IxgbeNic"],[3,"PciLocation"],[15,"str"],[4,"Result"],[4,"LinkSpeedMbps"],[15,"bool"],[3,"MutexIrqSafe"],[3,"Vec"],[4,"Option"],[3,"ReceivedFrame"],[3,"PciDevice"],[6,"HandlerFunc"],[15,"u16"],[3,"Mutable"],[3,"BorrowedMappedPages"],[15,"usize"],[4,"Error"],[3,"TransmitBuffer"],[4,"FilterProtocol"],[15,"u8"],[3,"TypeId"],[3,"AdvancedRxDescriptor"],[3,"AdvancedTxDescriptor"],[3,"VirtualNic"]]},\
"kernel_config":{"doc":"","t":[0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["display","memory","time","FRAMEBUFFER_MAX_RESOLUTION","ADDRESSABILITY_PER_P4_ENTRY","BYTES_PER_ADDR","ENTRIES_PER_PAGE_TABLE","KERNEL_HEAP_INITIAL_SIZE","KERNEL_HEAP_MAX_SIZE","KERNEL_HEAP_P4_INDEX","KERNEL_HEAP_START","KERNEL_OFFSET","KERNEL_STACK_SIZE_IN_PAGES","KERNEL_TEXT_MAX_SIZE","KERNEL_TEXT_P4_INDEX","KERNEL_TEXT_START","MAX_PAGE_NUMBER","MAX_VIRTUAL_ADDRESS","P1_INDEX_SHIFT","P2_INDEX_SHIFT","P3_INDEX_SHIFT","P4_INDEX_SHIFT","PAGE_SHIFT","PAGE_SIZE","RECURSIVE_P4_INDEX","TEMPORARY_PAGE_VIRT_ADDR","UPCOMING_PAGE_TABLE_RECURSIVE_MEMORY_START","UPCOMING_PAGE_TABLE_RECURSIVE_P4_INDEX","CONFIG_HEARTBEAT_PERIOD_MS","CONFIG_PIT_FREQUENCY_HZ","CONFIG_RTC_FREQUENCY_HZ","CONFIG_TIMESLICE_PERIOD_MICROSECONDS"],"q":["kernel_config","","","kernel_config::display","kernel_config::memory","","","","","","","","","","","","","","","","","","","","","","","","kernel_config::time","","",""],"d":["","The basic virtual memory map that Theseus assumes.","","The maximum resolution <code>(width, height)</code> of the graphical …","Value: 512 GiB.","64-bit architecture results in 8 bytes per address.","Value: 512.","","the kernel heap gets the whole 509th P4 entry.","Value: 509. The 509th entry is used for the kernel heap","The higher-half heap gets the 512GB address range starting …","The virtual address where the initial kernel (the …","","The size in bytes, not in pages.","Value: 511. The 511th entry is used for kernel text …","The kernel text region is where we load kernel modules.  …","","","Value: 0. Shift the Page number (not the address!) by this …","Value: 9. Shift the Page number (not the address!) by this …","Value: 18. Shift the Page number (not the address!) by …","Value: 27. Shift the Page number (not the address!) by …","The lower 12 bits of a virtual address correspond to the …","Page size is 4096 bytes, 4KiB pages.","Value: 510. The 510th entry is used to recursively map the …","","The system (page allocator) must not use addresses at or …","Value: 508. The 508th entry is used to temporarily …","the heartbeat period in milliseconds","the chosen interrupt frequency (in Hertz) of the PIT clock ","the chosen interrupt frequency (in Hertz) of the RTC. …","The timeslice period, specified in microseconds."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[]},\
"keyboard":{"doc":"A basic driver for a keyboard connected to the legacy PS/2 …","t":[5],"n":["init"],"q":["keyboard"],"d":["Initialize the PS/2 keyboard driver and register its …"],"i":[0],"f":[[[1,[3,[2]]],[[5,[4]]]]],"p":[[3,"PS2Keyboard"],[4,"Event"],[3,"Queue"],[15,"str"],[4,"Result"]]},\
"keycodes_ascii":{"doc":"","t":[13,18,18,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,4,3,3,4,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["A","ALT","ALT_GR","Alt","AltReleased","B","Backslash","Backspace","Backtick","C","CAPS_LOCK","CONTROL_LEFT","CONTROL_RIGHT","CapsLock","Comma","Control","ControlReleased","D","Delete","Down","E","End","Enter","Equals","Escape","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","Home","I","Insert","J","K","KEY_RELEASED_OFFSET","KeyAction","KeyEvent","KeyboardModifiers","Keycode","L","Left","LeftBracket","LeftShift","LeftShiftReleased","M","Menu","Minus","N","NUM_LOCK","NonUsBackslash","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumLock","O","OverflowError","P","Pad5","PadMinus","PadMultiply","PadPlus","PageDown","PageUp","Pause","Period","Pressed","Q","Quote","R","Released","Right","RightBracket","RightShift","RightShiftReleased","S","SCROLL_LOCK","SHIFT_LEFT","SHIFT_RIGHT","SUPER_KEY_LEFT","SUPER_KEY_RIGHT","ScrollLock","Semicolon","Slash","Space","SuperKeyLeft","SuperKeyLeftReleased","SuperKeyRight","SuperKeyRightReleased","T","Tab","U","Unknown1","Unknown2","Unknown3","Up","V","W","X","Y","Z","action","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","complement","contains","default","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","is_all","is_alt","is_alt_gr","is_caps_lock","is_control","is_empty","is_letter","is_num_lock","is_scroll_lock","is_shift","is_super_key","keycode","modifiers","new","new","not","partial_cmp","remove","scancode_to_ascii","set","sub","sub_assign","symmetric_difference","to_ascii","toggle","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union"],"q":["keycodes_asciid":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The offset that a keyboard adds to the scancode to …","Whether a keyboard event was a key press or a key released.","The KeyEvent that should be delivered to applications upon …","The set of modifier keys that can be held down while other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if the <code>Alt</code> key is held down.","Returns <code>true</code> if the <code>AltGr</code> key is held down.","Returns <code>true</code> if the <code>Caps Lock</code> key is held down.","Returns <code>true</code> if a <code>Control</code> key is held down (either left or …","Returns <code>true</code> if no flags are currently stored.","returns true if this keycode was a letter from A-Z","Returns <code>true</code> if the <code>Num Lock</code> key is held down.","Returns <code>true</code> if the <code>Scroll Lock</code> key is held down.","Returns <code>true</code> if a <code>Shift</code> key is held down (either left or …","Returns <code>true</code> if a Super key is held down (either left or …","","","Returns a new <code>KeyboardModifiers</code> struct with no keys …","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","convenience function for obtaining the ascii value for a …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Obtains the ascii value for a keycode under the given …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[5,1,1,5,5,5,5,5,5,5,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,3,5,5,5,5,5,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,1,1,1,1,1,1,1,1,1,3,4,5,1,3,4,5,1,3,4,5,1,1,1,1,1,1,1,3,5,1,1,1,1,1,1,3,4,5,1,3,4,5,1,1,1,1,1,1,1,1,1,3,4,5,1,1,1,1,1,1,5,1,1,1,1,4,4,1,4,1,1,1,0,1,1,1,1,5,1,1,3,4,5,5,5,1,3,4,5,1,3,4,5,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[1,1],1],[[1,1]],[[1,1],1],[[1,1]],[1,2],[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[4,4],[5,5],[[1,1],6],[1,1],[[1,1],7],[[],1],[[1,1],1],[[],1],[[1,1],7],[[3,3],7],[[5,5],7],[[1,8]],[[1,9],10],[[1,9],10],[[1,9],10],[[1,9],10],[[1,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[]],[[]],[[]],[[]],[2,[[11,[1]]]],[2,1],[2,1],[8,1],[1],[[1,1]],[[1,1],1],[[1,1],7],[[]],[[]],[[]],[[]],[1,7],[1,7],[1,7],[1,7],[1,7],[1,7],[5,7],[1,7],[1,7],[1,7],[1,7],0,0,[[],1],[[5,3,1],4],[1,1],[[1,1],[[11,[6]]]],[[1,1]],[[1,12],[[11,[13]]]],[[1,1,7]],[[1,1],1],[[1,1]],[[1,1],1],[[5,1],[[11,[13]]]],[[1,1]],[[],14],[[],14],[[],14],[12,[[14,[5,[15,[5]]]]]],[[],14],[[],[[14,[5,[15,[5]]]]]],[[],14],[[],14],[[],14],[[],14],[[],16],[[],16],[[],16],[[],16],[[1,1],1]],"p":[[3,"KeyboardModifiers"],[15,"u16"],[4,"KeyAction"],[3,"KeyEvent"],[4,"Keycode"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"u8"],[15,"char"],[4,"Result"],[3,"TryFromPrimitiveError"],[3,"TypeId"]]},\
"libterm":{"doc":"A basic terminal emulator library.","t":[17,17,13,4,3,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12],"n":["FONT_BACKGROUND_COLOR","FONT_FOREGROUND_COLOR","OffEndBound","ScrollError","Terminal","borrow","borrow","borrow_mut","borrow_mut","clear","cursor","cursor","display_cursor","from","from","get_cursor_offset_from_end","get_event","get_text_dimensions","insert_char","into","into","move_screen_line_down","move_screen_line_up","move_screen_page_down","move_screen_page_up","move_screen_to_begin","move_screen_to_end","new","print_to_terminal","refresh_display","remove_char","resize","try_from","try_from","try_into","try_into","type_id","type_id","update_cursor_pos","window","Cursor","blink","borrow","borrow_mut","default","disable","display","enable","from","into","offset_from_end","offset_from_end","reset","set_offset_from_end","set_underlying_char","show","try_from","try_into","type_id","underlying_char","underlying_char"],"q":["libterm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libterm::cursor","","","","","","","","","","","","","","","","","","","",""],"d":["","","Occurs when a index-calculation returns an index that is …","Error type for tracking different scroll errors that a …","An instance of a graphical terminal emulator.","","","","","Clear the scrollback buffer and reset the scroll positions.","","The cursor of the terminal.","Display the cursor of the terminal.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the position of the cursor relative to the end of …","Gets an event from the window’s event queue.","Gets the width and height of the text displayable in …","Insert a character to the terminal.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Scroll the screen a line down.","Scroll the screen a line up.","Scroll the screen a page down.","Scroll the screen a page up.","Scroll the screen to the very beginning.","Scroll the screen to the very end.","Creates a new terminal and adds it to the window manager …","Adds a string to be printed to the terminal to the …","Actually refresh the screen. Currently it’s expensive.","Remove a character from the terminal.","Resizes this terminal and its underlying text display and …","","","","","","","Updates the position of a cursor.","The terminal’s own window.","The cursor structure used in the terminal. A cursor is a …","Let a cursor blink. It is invoked in a loop.","","","","Disable a cursor","Display a cursor in a framebuffer","Enable a cursor","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Gets the position of the cursor relative to the end of the …","The position of the cursor relative to the end of terminal …","Reset the state of the cursor as unseen","Sets the position of the cursor relative to the end of the …","Sets the character at the position of the cursor","Whether a cursor is seen","","","","Gets the character at the position of the cursor","The underlying character at the position of the cursor. It …"],"i":[0,0,16,0,0,16,1,16,1,1,0,1,1,16,1,1,1,1,1,16,1,1,1,1,1,1,1,1,1,1,1,1,16,1,16,1,16,1,1,1,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[1],0,0,[1,[[3,[2]]]],[[]],[[]],[1,4],[1,[[6,[5]]]],[1],[[1,7,4],[[3,[2]]]],[[]],[[]],[1,[[3,[2]]]],[1,[[3,[2]]]],[1,[[3,[2]]]],[1,[[3,[2]]]],[1,[[3,[2]]]],[1,[[3,[2]]]],[[],[[3,[1,2]]]],[[1,8]],[1,[[3,[2]]]],[[1,4],[[3,[2]]]],[[1,9],[[3,[2]]]],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[1,4,11]],0,0,[12,13],[[]],[[]],[[],12],[12],[[12,14,4,4,15],[[3,[9,2]]]],[12],[[]],[[]],[12,4],0,[12],[[12,4]],[[12,11]],[12,13],[[],3],[[],3],[[],10],[12,11],0],"p":[[3,"Terminal"],[15,"str"],[4,"Result"],[15,"usize"],[4,"Event"],[4,"Option"],[15,"char"],[3,"String"],[3,"Rectangle"],[3,"TypeId"],[15,"u8"],[3,"Cursor"],[15,"bool"],[3,"Coord"],[3,"Framebuffer"],[4,"ScrollError"]]},\
"lockable":{"doc":"Traits for items that are “Lockable”, e.g., <code>Mutex</code>es.","t":[16,16,8,8,10,10,10,10,10,10,10],"n":["Guard","GuardMut","Lockable","LockableSized","get_mut","into_inner","is_locked","lock","lock_mut","try_lock","try_lock_mut"],"q":["lockable","","","","","","","","","",""],"d":["The immutable “guard” type returned by the <code>Self::lock()</code>…","The mutable “guard” type returned by the …","A trait representing types that can be locked, e.g., <code>Mutex</code>…","An extension of the <code>Lockable</code> trait that adds the …","Returns a mutable reference to the underlying data.","Consumes the lock, returning the underlying data.","Returns <code>true</code> if this lock is currently locked. ","Obtain the lock in a blocking fashion,  returning an …","Obtain the lock in a blocking fashion, returning a mutable …","Attempt to obtain the lock in a non-blocking fashion, …","Attempt to obtain the lock in a non-blocking fashion, …"],"i":[3,3,0,0,3,4,3,3,3,3,3],"f":[0,0,0,0,[[]],[[]],[[],1],[[]],[[]],[[],2],[[],2]],"p":[[15,"bool"],[4,"Option"],[8,"Lockable"],[8,"LockableSized"]]},\
"locked_idt":{"doc":"A simple wrapper struct around an x86_64 Interrupt …","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["LockedIdt","borrow","borrow_mut","fmt","from","into","load","lock","new","try_from","try_into","type_id"],"q":["locked_idt","","","","","","","","","","",""],"d":["A thread-safe and interrupt-safe wrapper around …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Obtains the lock on the inner IDT and loads it into the …","Obtains the lock on the inner IDT and returns a guard that …","Creates a new IDT filled with non-present entries.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[1,2],3],[[]],[[]],[1],[1,[[5,[4]]]],[[],1],[[],6],[[],6],[[],7]],"p":[[3,"LockedIdt"],[3,"Formatter"],[6,"Result"],[3,"InterruptDescriptorTable"],[3,"MutexIrqSafeGuard"],[4,"Result"],[3,"TypeId"]]},\
"logger":{"doc":"A basic logger implementation for system-wide logging in …","t":[17,17,17,5,5,5,5,5,5],"n":["DEFAULT_LOG_LEVEL","EARLY_LOG_BUFFER_SIZE","LOG_MAX_WRITERS","early_init","init","set_log_level","take_early_log_writers","write_fmt","write_str"],"q":["logger","","","","","","","",""],"d":["By default, Theseus will print all log levels, including …","The size of the buffer used to save early log messages.","The maximum number of output streams that a logger can …","Initializes Theseus’s early system logger for use before …","Initialize the fully-featured Theseus system logger.","Set the log level, which determines whether a given log …","Removes all of the writers (output streams) from the early …","Convenience function for writing formatted arguments to …","Convenience function for writing a simple string to the …"],"i":[0,0,0,0,0,0,0,0,0],"f":[0,0,0,[[[2,[1]],3]],[[[2,[1]],3]],[1],[[]],[4,5],[6,5]],"p":[[4,"Level"],[4,"Option"],[8,"IntoIterator"],[3,"Arguments"],[6,"Result"],[15,"str"]]},\
"madt":{"doc":"Support for the MADT ACPI table,  which includes interrupt …","t":[13,13,13,13,13,17,3,4,3,3,3,3,3,3,3,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["IntSrcOverride","IoApic","LocalApic","LocalApicAddressOverride","LocalX2Apic","MADT_SIGNATURE","Madt","MadtEntry","MadtIntSrcOverride","MadtIoApic","MadtIter","MadtLocalApic","MadtLocalApicAddressOverride","MadtLocalX2Apic","MadtNonMaskableInterrupt","NonMaskableInterrupt","UnknownOrCorrupt","address","apic_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp_init","bus_source","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","find_nmi_entry_for_processor","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","gsi","gsi_base","handle","id","into","into","into","into","into","into","into","into","into","into_iter","irq_source","iter","lint","local_apic_phys_addr","next","phys_addr","processor","processor","processor","sdt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","x2apic_id"],"q":["madt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Interrupt Source Override MADT entry.","A IOAPIC MADT entry.","A Local APIC MADT entry.","A Local APIC Address Override MADT entry.","A Local X2APIC MADT entry.","","A wrapper around the MADT ACPI table (Multiple APIC …","The set of possible MADT Entries.","MADT Interrupt Source Override","MADT I/O APIC","An <code>Iterator</code> over the dynamic entries of the MADT. Its …","MADT Local APIC","MADT Local APIC Address Override.  If this struct exists, …","MADT Local X2APIC","MADT Non-maskable Interrupt. Use these to configure the …","A Non-Maskable Interrupt MADT entry.","The MADT table had an entry of an unknown type or …","I/O APIC address","Local APIC ID","","","","","","","","","","","","","","","","","","","Performs initialization functions of the IOAPIC and …","Bus Source","","","","","","","","","","","","","","","","","Finds the Non-Maskable Interrupt (NMI) entry in the MADT …","Returns the <code>flags</code> value in this MADT table.","Flags. 1 means that the processor is enabled","Flags","Flags","Flags. 1 means that the processor is enabled","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Finds the MADT in the given <code>AcpiTables</code> and returns a …","Global system interrupt","Global system interrupt base","The handler for parsing the MADT table and adding it to …","I/O APIC ID","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","IRQ Source","Returns an <code>Iterator</code> over the MADT’s entries, which are …","LINT (either 0 or 1)","Returns the Local APIC physical address value in this MADT …","","Local APIC physical address","Processor ID","which processor this is for, 0xFF means all processors","Processor ID","Returns a reference to the <code>Sdt</code> header in this MADT table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Local X2APIC ID"],"i":[6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,6,6,8,7,1,5,6,7,8,9,10,11,12,1,5,6,7,8,9,10,11,12,1,9,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,0,1,7,9,10,12,6,7,8,9,10,11,12,1,5,6,7,8,9,10,11,12,1,9,8,0,8,1,5,6,7,8,9,10,11,12,5,9,1,10,1,5,11,7,10,12,1,5,6,7,8,9,10,11,12,1,5,6,7,8,9,10,11,12,1,5,6,7,8,9,10,11,12,1,5,6,7,8,9,10,11,12,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],[[4,[3]]]],0,[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,5]],[1,13],0,0,0,0,[[6,14],15],[[7,14],15],[[8,14],15],[[9,14],15],[[10,14],15],[[11,14],15],[[12,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[17,[1]]]],0,0,[[16,18,19,20],[[4,[3]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,5],0,[1,13],[5,17],0,0,0,0,[1,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0],"p":[[3,"Madt"],[3,"PageTable"],[15,"str"],[4,"Result"],[3,"MadtIter"],[4,"MadtEntry"],[3,"MadtLocalApic"],[3,"MadtIoApic"],[3,"MadtIntSrcOverride"],[3,"MadtNonMaskableInterrupt"],[3,"MadtLocalApicAddressOverride"],[3,"MadtLocalX2Apic"],[15,"u32"],[3,"Formatter"],[6,"Result"],[3,"AcpiTables"],[4,"Option"],[6,"AcpiSignature"],[15,"usize"],[3,"PhysicalAddress"],[3,"Sdt"],[3,"TypeId"]]},\
"memfs":{"doc":"This crate contains an implementation of an in-memory …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MemFile","as_mapping","borrow","borrow_mut","create","flush","from","from_mapped_pages","get_name","get_parent_dir","into","len","read_at","set_parent_dir","try_from","try_into","type_id","write_at"],"q":["memfs","","","","","","","","","","","","","","","","",""],"d":["The struct that represents a file in memory that is backed …","","","","Allocates writable memory space for the given <code>contents</code> and …","","Returns the argument unchanged.","Creates a new <code>MemFile</code> in the given <code>parent</code> directory with …","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[4,[2,3]]]],[[]],[[]],[[5,6],[[4,[7,3]]]],[1,[[4,[8]]]],[[]],[[2,5,9,6],[[4,[7,3]]]],[1,5],[1,[[10,[6]]]],[[]],[1,9],[[1,9],[[4,[9,8]]]],[[1,11]],[[],4],[[],4],[[],12],[[1,9],[[4,[9,8]]]]],"p":[[3,"MemFile"],[3,"MappedPages"],[15,"str"],[4,"Result"],[3,"String"],[6,"DirRef"],[6,"FileRef"],[4,"IoError"],[15,"usize"],[4,"Option"],[6,"WeakDirRef"],[3,"TypeId"]]},\
"memory":{"doc":"This crate implements the main memory management subsystem …","t":[18,18,3,3,3,3,18,3,3,18,18,18,18,17,18,18,3,3,3,13,18,3,3,17,3,3,3,4,6,8,3,18,18,17,18,18,18,17,3,3,3,3,3,3,3,3,13,13,18,18,3,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ACCESSED","ACCESSED","AllocatedFrames","AllocatedPages","BorrowedMappedPages","BorrowedSliceMappedPages","CACHE_DISABLE","CopyableFrameRange","CopyablePageRange","DEVICE_MEMORY","DEVICE_MEMORY","DIRTY","DIRTY","DMA_FLAGS","EXCLUSIVE","EXCLUSIVE","EarlyIdentityMappedPages","Frame","FrameRange","Free","HUGE_PAGE","Immutable","InitialMemoryMappings","MMIO_FLAGS","MappedPages","Mapper","MemoryManagementInfo","MemoryRegionType","MmiRef","Mutability","Mutable","NOT_EXECUTABLE","NOT_EXECUTABLE","PAGE_SIZE","PAT_BIT0","PAT_BIT1","PAT_BIT2_FOR_P1","PTE_FRAME_MASK","Page","PageRange","PageTable","PhysicalAddress","PhysicalMemoryRegion","PteFlags","PteFlagsArch","PteFlagsX86_64","Reserved","Unknown","VALID","VALID","VirtualAddress","WRITABLE","WRITABLE","WRITE_THROUGH","_GLOBAL","_GLOBAL","_USER_ACCESSIBLE","_USER_ACCESSIBLE","accessed","accessed","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","additional","address_at_offset","address_at_offset","adjust_for_higher_level_pte","all","all","allocate_frames","allocate_frames_at","allocate_frames_by_bytes","allocate_frames_by_bytes_at","allocate_pages","allocate_pages_at","allocate_pages_by_bytes","allocate_pages_by_bytes_at","as_allocated_frame","as_mut","as_mut","as_ref","as_ref","as_slice","as_slice_mut","as_type","as_type_mut","backward_checked","backward_checked","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","boot_info","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","containing_address","containing_address","contains","contains","contains_address","contains_address","create_contiguous_mapping","create_mapping","data","deep_copy","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device_memory","device_memory","difference","difference","dirty","dirty","drop","drop","drop","dump_pte","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exclusive","exclusive","executable","executable","extend","extend","extra_mapped_pages","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","frame_offset","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_mut","from_mut","from_phys_addr","from_virt_addr","get_kernel_mmi_ref","get_pat_index","hash","hash","hash","hash","hash","hash","identity","init","init_post_heap","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_borrowed","into_borrowed_mut","into_borrowed_slice","into_borrowed_slice_mut","into_inner","into_inner","into_iter","into_iter","into_iter","is_accessed","is_accessed","is_all","is_all","is_device_memory","is_device_memory","is_dirty","is_dirty","is_empty","is_empty","is_exclusive","is_exclusive","is_executable","is_executable","is_huge","is_valid","is_valid","is_writable","is_writable","map_allocated_pages","map_allocated_pages_to","map_frame_range","merge","merge","merge","new","new","new","new","new","new","new","new_canonical","new_canonical","new_table","not","not","number","number","offset_of_address","offset_of_address","overlap","overlap","p1_index","p2_index","p3_index","p4_index","page_offset","page_table","page_table","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pat_index","physical_address","remap","remove","remove","rodata","set","set","set_broadcast_tlb_shootdown_cb","size_in_bytes","size_in_bytes","size_in_frames","size_in_pages","split","split","split","stack","stack_guard","start_address","start_address","start_address","start_address","steps_between","steps_between","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","switch","symmetric_difference","symmetric_difference","text","to_extended","to_extended","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","toggle","translate","translate","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","unmap_into_parts","valid","valid","value","value","with","writable","writable","zero","zero"],"q":["memoryd":["The hardware will set this bit when the page is accessed.…","The hardware will set this bit when the page is accessed.…","Represents a range of allocated physical memory <code>Frame</code>s; …","Represents a range of allocated <code>VirtualAddress</code>es, …","A borrowed <code>MappedPages</code> object that derefs to <code>&amp;T</code> and …","A borrowed <code>MappedPages</code> object that derefs to a slice <code>&amp;[T]</code> …","If set, this page’s content is never cached, neither for …","A <code>FrameRange</code> that implements <code>Copy</code>","A <code>PageRange</code> that implements <code>Copy</code>","If set, this page maps device memory, which is …","An alias for <code>Self::CACHE_DISABLE</code> in order to ease …","The hardware will set this bit when the page has been …","The hardware will set this bit when the page has been …","Mapping flags that can be used to map DMA (Direct Memory …","Note: code that invokes memory management functions in …","See PteFlags::EXCLUSIVE. We use bit 55 because it is …","The set of identity mappings that should be dropped before …","A <code>Frame</code> is a chunk of <strong>physical</strong> memory aligned to a …","A range of <code>Frame</code>s that are contiguous in physical memory.","Memory that is available for any general purpose.","If set, this page table entry represents a “huge” …","A marker type used to indicate that a <code>BorrowedMappedPages</code> …","Information returned after initialising the memory …","Mapping flags that can be used to map MMIO registers.","Represents a contiguous range of virtual memory pages that …","","This holds all the information for a <code>Task</code>’s memory …","Types of physical memory. See each variant’s …","A shareable reference to a <code>MemoryManagementInfo</code> struct …","A trait for parameterizing a <code>BorrowedMappedPages</code> or …","A marker type used to indicate that a <code>BorrowedMappedPages</code> …","If set, this page is not executable.If not set, this page …","If set, this page is not executable.If not set, this page …","Page size is 4096 bytes, 4KiB pages.","","","(For P1-level (lowest level) page tables ONLY): If the …","A mask for the bits of a page table entry that contain the …","A <code>Page</code> is a chunk of <strong>virtual</strong> memory aligned to a <code>PAGE_SIZE</code> …","A range of <code>Page</code>s that are contiguous in virtual memory.","A top-level root (P4) page table.","A physical memory address, which is a <code>usize</code> under the hood.","A region of physical memory.","Common, architecture-independent flags for a page table …","Page table entry (PTE) flags on x86_64.","Page table entry (PTE) flags on x86_64.","Memory that is reserved for special use and is only ever …","Memory of an unknown type. This is a default value that …","If set, this page is currently “present” in memory. If …","If set, this page is currently “present” in memory. If …","A virtual memory address, which is a <code>usize</code> under the hood.","If set, this page is writable.If not set, this page is …","If set, this page is writable.If not set, this page is …","If set, writes to this page go directly to memory.It not …","If set, this page is mapped identically across all address …","If set, this page is mapped identically across all address …","If set, userspace (unprivileged mode) can access this page.…","If set, userspace (ring 3) can access this page.If not …","Returns a copy of this <code>PteFlags</code> with the <code>ACCESSED</code> bit set …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>ACCESSED</code> …","","","","","","","","","","","","","The list of additional mappings that must be kept forever.","Returns the <code>VirtualAddress</code> at the given <code>offset</code> into this …","Returns the <code>PhysicalAddress</code> at the given <code>offset</code> into this …","Returns a copy of this <code>PteFlagsX86_64</code> with its flags …","Returns the set containing all flags.","Returns the set containing all flags.","Allocates the given number of frames with no constraints …","Allocates the given number of frames starting at …","Allocates frames with no constraints on the starting …","Allocates frames starting at the given <code>PhysicalAddress</code> …","Allocates the given number of pages with no constraints on …","Allocates the given number of pages starting at (inclusive …","Allocates pages with no constraints on the starting …","Allocates pages starting at the given <code>VirtualAddress</code> with …","Returns an <code>AllocatedFrame</code> if this <code>AllocatedFrames</code> object …","","","","","Reinterprets this <code>MappedPages</code>’s underlying memory region …","Same as <code>MappedPages::as_slice()</code>, but returns a <em>mutable</em> …","Reinterprets this <code>MappedPages</code>’s underlying memory region …","Same as <code>MappedPages::as_type()</code>, but returns a <em>mutable</em> …","","","","Returns the intersection between the two sets of flags.","","Returns the intersection between the two sets of flags.","","Disables all flags disabled in the set.","","Disables all flags disabled in the set.","","Returns the union of the two sets of flags.","","Returns the union of the two sets of flags.","","Adds the set of flags.","","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","","Returns the left flags, but with all the right flags …","","Toggles the set of flags.","","Toggles the set of flags.","The boot information mappings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the <code>Page</code> containing the given <code>VirtualAddress</code>.","Returns the <code>Frame</code> containing the given <code>PhysicalAddress</code>.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if this <code>PageRange</code> contains the given …","Returns <code>true</code> if this <code>FrameRange</code> contains the given …","A convenience function that creates a new memory mapping …","A convenience function that creates a new memory mapping. …","The kernel’s .<code>data</code> section mappings/","Creates a deep copy of this <code>MappedPages</code> memory region, by …","","","","","","","","","","","","","","","","","","","Returns a copy of this <code>PteFlags</code> with the <code>DEVICE_MEMORY</code> bit …","Returns a copy of this <code>PteFlagsX86_64</code> with the …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a copy of this <code>PteFlags</code> with the <code>DIRTY</code> bit set or …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>DIRTY</code> bit …","","","","Dumps all page table entries at all four page table levels …","Returns an empty set of flags.","Returns an empty AllocatedPages object that performs no …","Returns an empty AllocatedFrames object that performs no …","Returns an empty set of flags.","Creates a <code>PageRange</code> that will always yield <code>None</code> when …","Creates a <code>FrameRange</code> that will always yield <code>None</code> when …","Returns an empty MappedPages object that performs no …","","","","","","","","","","","","Returns a copy of this <code>PteFlags</code> with the <code>EXCLUSIVE</code> bit set …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>EXCLUSIVE</code> …","Returns a copy of this <code>PteFlags</code> with the <code>NOT_EXECUTABLE</code> …","Returns a copy of this <code>PteFlagsX86_64</code> with the …","","","The list of additional memory mappings that have the same …","Returns the flags that describe this <code>MappedPages</code> page …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the offset from the frame boundary specified by …","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Immutably borrows the given <code>MappedPages</code> as an instance of …","","Returns the argument unchanged.","Returns the argument unchanged.","Immutably borrows the given <code>MappedPages</code> as a slice <code>&amp;[T]</code> of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Mutably borrows the given <code>MappedPages</code> as an instance of …","Mutably borrows the given <code>MappedPages</code> as an instance of …","A convenience method for creating a new <code>FrameRange</code> that …","A convenience method for creating a new <code>PageRange</code> that …","Returns a reference to the kernel’s <code>MemoryManagementInfo</code>…","","","","","","","","The list of identity mappings that should be dropped …","Initializes the virtual memory management system. Consumes …","Finishes initializing the memory management system after …","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A convenience function for <code>BorrowedMappedPages::from()</code>.","A convenience function for <code>BorrowedMappedPages::from_mut()</code>.","A convenience function for <code>BorrowedSliceMappedPages::from()</code>…","A convenience function for …","Consumes this object and returns the inner <code>MappedPages</code>.","Consumes this object and returns the inner <code>MappedPages</code>.","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","Maps the given <code>AllocatedPages</code> to randomly chosen …","Maps the given virtual <code>AllocatedPages</code> to the given …","A convenience function that maps randomly-allocated pages …","Merges the given <code>AllocatedPages</code> object <code>ap</code> into this …","Merges the given <code>AllocatedFrames</code> object <code>other</code> into this …","Merges the given <code>MappedPages</code> object <code>mp</code> into this …","Creates a new <code>VirtualAddress</code>, returning an error if the …","Returns a new <code>PteFlags</code> with the default value, in which:","Creates a new <code>PhysicalAddress</code>, returning an error if the …","Returns a new <code>PteFlagsX86_64</code> with the default value, in …","","Creates a new range of <code>Page</code>s that spans from <code>start</code> to <code>end</code>, …","Creates a new range of <code>Frame</code>s that spans from <code>start</code> to <code>end</code>…","Creates a new <code>VirtualAddress</code> that is guaranteed to be …","Creates a new <code>PhysicalAddress</code> that is guaranteed to be …","Initializes a new top-level P4 <code>PageTable</code> whose root is …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the number of this <code>Page</code>.","Returns the number of this <code>Frame</code>.","Returns the offset of the given <code>VirtualAddress</code> within this …","Returns the offset of the given <code>PhysicalAddress</code> within …","Returns an inclusive <code>PageRange</code> representing the <code>Page</code>s that …","Returns an inclusive <code>FrameRange</code> representing the <code>Frame</code>s …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the offset from the page boundary specified by …","the PageTable that should be switched to when this Task is …","The currently active page table.","","","","","","","","","Returns a copy of this <code>PteFlagsX86_64</code> with the PAT index …","Returns the physical address of this page table’s …","Change the mapping flags of this <code>MappedPages</code>’s page …","Removes the specified flags in-place.","Removes the specified flags in-place.","The kernel’s <code>.rodata</code> section mappings.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the function callback that will be invoked every time …","Returns the size of this range in number of bytes.","Returns the size of this range in number of bytes.","Returns the number of <code>Frame</code>s covered by this iterator.","Returns the number of <code>Page</code>s covered by this iterator.","Splits this <code>AllocatedPages</code> into two separate <code>AllocatedPages</code>…","Splits this <code>AllocatedFrames</code> into two separate …","Splits this <code>MappedPages</code> into two separate <code>MappedPages</code> …","The kernel’s stack actual data page mappings.","The kernel stack’s guard page.","Returns the <code>VirtualAddress</code> at the start of this <code>Page</code>.","Returns the <code>PhysicalAddress</code> at the start of this <code>Frame</code>.","Returns the <code>VirtualAddress</code> of the starting <code>Page</code> in this …","Returns the <code>PhysicalAddress</code> of the starting <code>Frame</code> in this …","","","","","Returns the set difference of the two sets of flags.","","","Returns the set difference of the two sets of flags.","","","","","Disables all flags enabled in the set.","","","Disables all flags enabled in the set.","","","Switches from the currently-active page table (this …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The kernel’s <code>.text</code> section mappings, which includes <code>.init</code>…","Returns a new separate <code>PageRange</code> that is extended to …","Returns a new separate <code>FrameRange</code> that is extended to …","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","A convenience function to translate the given virtual …","Translates a <code>VirtualAddress</code> to a <code>PhysicalAddress</code> by …","Translates a virtual memory <code>Page</code> to a physical memory <code>Frame</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Consumes and unmaps this <code>MappedPages</code> object without …","Returns a copy of this <code>PteFlags</code> with the <code>VALID</code> bit set or …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>VALID</code> bit …","Returns the underlying <code>usize</code> value for this <code>VirtualAddress</code>.","Returns the underlying <code>usize</code> value for this <code>PhysicalAddress</code>…","Temporarily maps the given other <code>PageTable</code> to the …","Returns a copy of this <code>PteFlags</code> with the <code>WRITABLE</code> bit set …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>WRITABLE</code> …","Creates a new <code>VirtualAddress</code> with a value 0.","Creates a new <code>PhysicalAddress</code> with a value 0."],"i":[1,3,0,0,0,0,3,0,0,1,3,1,3,0,1,3,0,0,0,25,3,0,0,0,0,0,0,0,0,0,0,1,3,0,3,3,3,0,0,0,0,0,0,0,0,0,25,25,1,3,0,1,3,3,1,3,1,3,1,3,4,4,6,6,7,8,4,4,6,6,7,8,39,9,11,3,1,3,0,0,0,0,0,0,0,0,12,19,20,19,20,22,22,22,22,7,8,4,1,6,3,4,1,6,3,4,1,6,3,4,1,6,3,1,3,4,1,6,3,4,1,6,3,39,4,1,31,15,6,12,19,19,3,20,20,7,24,8,25,18,44,9,26,11,27,33,22,38,39,40,4,1,31,15,6,12,19,19,3,20,20,7,24,8,25,18,44,9,26,11,27,33,22,38,39,40,4,1,6,3,7,24,8,25,9,26,11,27,4,1,6,3,7,24,8,25,9,26,11,27,4,1,6,19,3,20,7,8,1,3,7,8,1,3,9,11,0,0,39,22,4,1,6,3,15,12,19,20,24,9,11,33,22,19,20,9,11,33,1,3,1,3,1,3,15,12,22,31,1,15,12,3,9,11,22,4,1,6,19,3,20,7,8,25,9,11,1,3,1,3,1,3,38,22,4,4,4,4,4,4,4,1,1,1,1,1,15,6,6,6,6,6,6,6,12,3,3,3,3,3,7,24,8,25,9,11,33,22,38,39,40,7,8,6,24,4,1,1,31,15,6,12,19,19,3,3,20,20,7,24,8,25,18,44,9,9,26,26,11,11,27,27,33,22,38,39,40,1,3,1,3,1,3,1,3,19,20,11,9,0,3,4,1,6,19,3,20,39,0,0,1,3,1,3,1,3,4,4,1,31,15,6,6,12,19,3,20,7,24,8,25,18,44,9,26,11,27,33,22,38,39,40,22,22,22,22,19,20,12,9,11,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,1,3,1,3,31,31,0,15,12,22,4,1,6,3,24,9,11,4,6,33,1,3,7,8,9,11,9,11,7,7,7,7,4,38,39,4,1,6,19,3,20,7,8,3,33,22,1,3,39,1,3,0,9,11,11,9,15,12,22,39,39,7,8,9,11,7,8,4,4,1,6,6,3,7,8,4,4,1,6,6,3,7,8,33,1,3,39,9,11,4,1,6,3,7,24,8,25,9,26,11,27,4,6,1,3,0,31,31,4,1,31,15,6,12,19,3,20,7,24,8,25,18,44,9,26,11,27,33,22,38,39,40,4,1,31,15,6,12,19,3,20,7,24,8,25,18,44,9,26,11,27,33,22,38,39,40,24,4,1,31,15,6,12,19,3,20,7,24,8,25,18,44,9,26,11,27,33,22,38,39,40,1,3,22,1,3,4,6,33,1,3,4,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[3,2],3],[[4,5],4],[[4,4],4],[[6,6],6],[[6,5],6],[[7,5],7],[[8,5],8],[[4,5]],[[4,4]],[[6,5]],[[6,6]],[[7,5]],[[8,5]],0,[[9,5],[[10,[4]]]],[[11,5],[[10,[6]]]],[3,3],[[],1],[[],3],[5,[[10,[12]]]],[[6,5],[[14,[12,13]]]],[5,[[10,[12]]]],[[6,5],[[14,[12,13]]]],[5,[[10,[15]]]],[[4,5],[[14,[15,13]]]],[5,[[10,[15]]]],[[4,5],[[14,[15,13]]]],[12,16],[[[19,[17,18]]]],[[[20,[17,18]]]],[[[19,[17,21]]]],[[[20,[17,21]]]],[[22,5,5],[[14,[13]]]],[[22,5,5],[[14,[13]]]],[[22,5],[[14,[13]]]],[[22,5],[[14,[13]]]],[[7,5],[[10,[7]]]],[[8,5],[[10,[8]]]],[[4,4],4],[[1,1],1],[[6,6],6],[[3,3],3],[[4,4]],[[1,1]],[[6,6]],[[3,3]],[[4,4],4],[[1,1],1],[[6,6],6],[[3,3],3],[[4,4]],[[1,1]],[[6,6]],[[3,3]],[1,23],[3,23],[[4,4],4],[[1,1],1],[[6,6],6],[[3,3],3],[[4,4]],[[1,1]],[[6,6]],[[3,3]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[17,21]]]],[[]],[[[20,[17,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[17,18]]]],[[]],[[]],[[[20,[17,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[1,1],[6,6],[3,3],[7,7],[24,24],[8,8],[25,25],[9,9],[26,26],[11,11],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],28],[[1,1],28],[[6,6],28],[[[19,[[0,[17,29]],21]],[19,[[0,[17,29]],21]]],28],[[3,3],28],[[[20,[[0,[17,29]],21]],[20,[[0,[17,29]],21]]],28],[[7,7],28],[[8,8],28],[1,1],[3,3],[4,7],[6,8],[[1,1],2],[[3,3],2],[[9,4],2],[[11,6],2],[[5,[30,[3]]],[[14,[13]]]],[[5,[30,[3]]],[[14,[22,13]]]],0,[[22,31,[10,[[30,[3]]]]],[[14,[22,13]]]],[[],4],[[],1],[[],6],[[],3],[15,9],[12,11],[[[19,[17,21]]]],[[[20,[17,21]]]],[24,11],[9,32],[11,32],[33,31],[22,9],[[[19,[17,18]]]],[[[20,[17,18]]]],[9,32],[11,32],[33,31],[[1,2],1],[[3,2],3],[[1,1],1],[[3,3],3],[[1,2],1],[[3,2],3],[15],[12],[22],[[31,4]],[[],1],[[],15],[[],12],[[],3],[[],9],[[],11],[[],22],[[4,4],2],[[1,1],2],[[6,6],2],[[[19,[[0,[17,34]],21]],[19,[[0,[17,34]],21]]],2],[[3,3],2],[[[20,[[0,[17,34]],21]],[20,[[0,[17,34]],21]]],2],[[7,7],2],[[8,8],2],[[25,25],2],[[9,9],2],[[11,11],2],[[1,2],1],[[3,2],3],[[1,2],1],[[3,2],3],[1],[3],0,[22,3],[[4,35],[[14,[36]]]],[[4,35],[[14,[36]]]],[[4,35],[[14,[36]]]],[[4,35],[[14,[36]]]],[[4,35],[[14,[36]]]],[[4,35],[[14,[36]]]],[[4,35],[[14,[36]]]],[[1,35],[[14,[36]]]],[[1,35],[[14,[36]]]],[[1,35],[[14,[36]]]],[[1,35],[[14,[36]]]],[[1,35],[[14,[36]]]],[[15,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[6,35],[[14,[36]]]],[[12,35],[[14,[36]]]],[[3,35],[[14,[36]]]],[[3,35],[[14,[36]]]],[[3,35],[[14,[36]]]],[[3,35],[[14,[36]]]],[[3,35],[[14,[36]]]],[[7,35],[[14,[36]]]],[[24,35],[[14,[36]]]],[[8,35],[[14,[36]]]],[[25,35],[[14,[36]]]],[[9,35],[[14,[36]]]],[[11,35],[[14,[36]]]],[[33,35],37],[[22,35],37],[[38,35],37],[[39,35],37],[[40,35],37],[[7,5],[[10,[7]]]],[[8,5],[[10,[8]]]],[6,5],0,[[]],[3,1],[[]],[[]],[[]],[[]],[[]],[[]],[[22,5],[[14,[[19,[17]]]]]],[1,3],[[]],[[]],[[22,5,5],[[14,[[20,[17]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[26,9],[[]],[[]],[9,26],[[]],[27,11],[[]],[11,27],[[]],[[]],[[]],[[]],[[]],[23,[[10,[1]]]],[23,[[10,[3]]]],[23,1],[23,3],[23,1],[23,3],[[],1],[[],3],[[22,5],[[14,[[19,[17,18]]]]]],[[22,5,5],[[14,[[20,[17,18]]]]]],[[6,5],11],[[4,5],9],[[],[[10,[41]]]],[3,42],[4],[1],[6],[[[19,[[0,[17,43]],21]]]],[3],[[[20,[[0,[17,43]],21]]]],0,[4,[[14,[39,13]]]],[[33,22,22],41],[[1,1]],[[3,3]],[[1,1],1],[[3,3],3],[[1,1],2],[[3,3],2],[4,5],[[]],[[]],[[]],[[]],[[]],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,5],[[14,[[19,[17,44]]]]]],[[22,5],[[14,[[19,[17,18]]]]]],[[22,5,5],[[14,[[20,[17,44]]]]]],[[22,5,5],[[14,[[20,[17,18]]]]]],[[[19,[17,21]]],22],[[[20,[17,21]]],22],[12],[9],[11],[1,2],[3,2],[1,2],[3,2],[1,2],[3,2],[1,2],[3,2],[1,2],[3,2],[1,2],[3,2],[1,2],[3,2],[3,2],[1,2],[3,2],[1,2],[3,2],[[31,15,[30,[3]]],[[14,[22,13]]]],[[31,15,12,[30,[3]]],[[14,[22,13]]]],[[6,5,[30,[3]]],[[14,[22,13]]]],[[15,15],[[14,[15]]]],[[12,12],[[14,[12]]]],[[22,22],14],[5,[[10,[4]]]],[[],1],[5,[[10,[6]]]],[[],3],[[11,25],24],[[7,7],9],[[8,8],11],[5,4],[5,6],[[33,12,[10,[15]]],[[14,[33,13]]]],[1,1],[3,3],[7,5],[8,5],[[9,4],[[10,[5]]]],[[11,6],[[10,[5]]]],[[9,9],[[10,[9]]]],[[11,11],[[10,[11]]]],[7,5],[7,5],[7,5],[7,5],[4,5],0,0,[[4,4],[[10,[28]]]],[[1,1],[[10,[28]]]],[[6,6],[[10,[28]]]],[[[19,[[0,[17,45]],21]],[19,[[0,[17,45]],21]]],[[10,[28]]]],[[3,3],[[10,[28]]]],[[[20,[[0,[17,45]],21]],[20,[[0,[17,45]],21]]],[[10,[28]]]],[[7,7],[[10,[28]]]],[[8,8],[[10,[28]]]],[[3,42],3],[33,6],[[22,31,[30,[3]]],[[14,[13]]]],[[1,1]],[[3,3]],0,[[1,1,2]],[[3,3,2]],[[]],[9,5],[11,5],[11,5],[9,5],[[15,7],[[14,[15]]]],[[12,8],[[14,[12]]]],[[22,7],[[14,[22]]]],0,0,[7,4],[8,6],[9,4],[11,6],[[7,7],[[10,[5]]]],[[8,8],[[10,[5]]]],[[4,4],4],[[4,5],4],[[1,1],1],[[6,6],6],[[6,5],6],[[3,3],3],[[7,5],7],[[8,5],8],[[4,5]],[[4,4]],[[1,1]],[[6,6]],[[6,5]],[[3,3]],[[7,5]],[[8,5]],[[33,33]],[[1,1],1],[[3,3],3],0,[[9,7],9],[[11,8],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],46],[[],46],[[1,1]],[[3,3]],[4,[[10,[6]]]],[[31,4],[[10,[6]]]],[[31,7],[[10,[8]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[1,1],1],[[3,3],3],[[22,31],[[14,[22]]]],[[1,2],1],[[3,2],3],[4,5],[6,5],[[33,33],[[14,[13]]]],[[1,2],1],[[3,2],3],[[],4],[[],6]],"p":[[3,"PteFlags"],[15,"bool"],[3,"PteFlagsArch"],[3,"VirtualAddress"],[15,"usize"],[3,"PhysicalAddress"],[3,"Page"],[3,"Frame"],[3,"PageRange"],[4,"Option"],[3,"FrameRange"],[3,"AllocatedFrames"],[15,"str"],[4,"Result"],[3,"AllocatedPages"],[3,"AllocatedFrame"],[8,"FromBytes"],[3,"Mutable"],[3,"BorrowedMappedPages"],[3,"BorrowedSliceMappedPages"],[8,"Mutability"],[3,"MappedPages"],[15,"u64"],[3,"PhysicalMemoryRegion"],[4,"MemoryRegionType"],[3,"CopyablePageRange"],[3,"CopyableFrameRange"],[4,"Ordering"],[8,"Ord"],[8,"Into"],[3,"Mapper"],[3,"RangeInclusive"],[3,"PageTable"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"MemoryManagementInfo"],[3,"InitialMemoryMappings"],[3,"EarlyIdentityMappedPages"],[6,"MmiRef"],[15,"u8"],[8,"Hash"],[3,"Immutable"],[8,"PartialOrd"],[3,"String"],[3,"TypeId"]],"a":{"cache":[238,239,415,416],"cacheable":[238,239,415,416],"mmi":[26],"no_exec":[268,269,423,424],"non-cacheable":[238,239,415,416],"page attribute table":[360,469],"pat":[360,469],"present":[426,427,610,611],"read_only":[428,429,615,616],"slot":[360,469]}},\
"memory_aarch64":{"doc":"This crate implements the virtual memory subsystem …","t":[3,3,3,14,11,11,11,11,11,11,5,12,5,5,12,5,12,11,11,11,11,11,5,12,11,11,11,5,12,5,12,12,2,5,5,11,11,11,11,11,11,11,11,11],"n":["AggregatedSectionMemoryBounds","MmuConfig","SectionMemoryBounds","asm_set_mmu_config_x2_x3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","configure_translation_registers","data","disable_mmu","enable_mmu","end","find_section_memory_bounds","flags","fmt","fmt","from","from","from","get_p4","init","into","into","into","read_mmu_config","rodata","set_as_active_page_table_root","start","text","tlb_flush_all","tlb_flush_by_theseus_asid","tlb_flush_virt_addr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["memory_aarch64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The address bounds and flags of the initial kernel …","See <code>read_mmu_config</code>","The address bounds and mapping flags of a section’s …","Configures the MMU based on the pointer to a MmuConfig, in …","","","","","","","Configures paging for Theseus.","","Disable the MMU using aarch64 registers","Enable the MMU using aarch64 registers","The ending virtual address and physical address.","Finds the addresses in memory of the main kernel sections, …","The page table entry flags that should be used for mapping …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current top-level page table address.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads the current MMU configuration of the current CPU …","","Sets the given <code>page_table</code> as active by updating the TTBR0 …","The starting virtual address and physical address.","","","Flushes all TLB entries with Theseus’ ASID (=0).","Flushes the specific virtual address in TLB.","","","","","","","","",""],"i":[0,0,0,0,8,3,6,8,3,6,0,6,0,0,3,0,3,3,6,8,3,6,0,6,8,3,6,0,6,0,3,6,0,0,0,8,3,6,8,3,6,8,3,6],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[],[[2,[1]]]],0,[[3,4],5],[[6,4],5],[[]],[[]],[[]],[[],7],0,[[]],[[]],[[]],[[],8],0,[7],0,0,0,[[]],[9],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10]],"p":[[15,"str"],[4,"Result"],[3,"SectionMemoryBounds"],[3,"Formatter"],[6,"Result"],[3,"AggregatedSectionMemoryBounds"],[3,"PhysicalAddress"],[3,"MmuConfig"],[3,"VirtualAddress"],[3,"TypeId"]]},\
"memory_initialization":{"doc":"","t":[5],"n":["init_memory_management"],"q":["memory_initialization"],"d":["Initializes the virtual memory management system and …"],"i":[0],"f":[[[1,2],[[4,[3]]]]],"p":[[8,"BootInformation"],[3,"VirtualAddress"],[15,"str"],[4,"Result"]]},\
"memory_structs":{"doc":"This crate contains basic types used for memory management.","t":[3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CopyableFrameRange","CopyablePageRange","Frame","FrameRange","Page","PageRange","PhysicalAddress","VirtualAddress","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address_at_offset","address_at_offset","backward_checked","backward_checked","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","containing_address","containing_address","contains_address","contains_address","default","default","deref","deref","deref_mut","deref_mut","empty","empty","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","frame_offset","from","from","from","from","from","from","from","from","from","from","from","from","from_phys_addr","from_virt_addr","hash","hash","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","new","new","new","new","new_canonical","new_canonical","number","number","offset_of_address","offset_of_address","overlap","overlap","p1_index","p2_index","p3_index","p4_index","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","size_in_bytes","size_in_bytes","size_in_frames","size_in_pages","start_address","start_address","start_address","start_address","steps_between","steps_between","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","to_extended","to_extended","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","zero","zero"],"q":["memory_structsd":["A <code>FrameRange</code> that implements <code>Copy</code>","A <code>PageRange</code> that implements <code>Copy</code>","A <code>Frame</code> is a chunk of <strong>physical</strong> memory aligned to a …","A range of <code>Frame</code>s that are contiguous in physical memory.","A <code>Page</code> is a chunk of <strong>virtual</strong> memory aligned to a <code>PAGE_SIZE</code> …","A range of <code>Page</code>s that are contiguous in virtual memory.","A physical memory address, which is a <code>usize</code> under the hood.","A virtual memory address, which is a <code>usize</code> under the hood.","","","","","","","","","","","","","Returns the <code>VirtualAddress</code> at the given <code>offset</code> into this …","Returns the <code>PhysicalAddress</code> at the given <code>offset</code> into this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>Page</code> containing the given <code>VirtualAddress</code>.","Returns the <code>Frame</code> containing the given <code>PhysicalAddress</code>.","Returns <code>true</code> if this <code>PageRange</code> contains the given …","Returns <code>true</code> if this <code>FrameRange</code> contains the given …","","","","","","","Creates a <code>PageRange</code> that will always yield <code>None</code> when …","Creates a <code>FrameRange</code> that will always yield <code>None</code> when …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the offset from the frame boundary specified by …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","A convenience method for creating a new <code>FrameRange</code> that …","A convenience method for creating a new <code>PageRange</code> that …","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>VirtualAddress</code>, returning an error if the …","Creates a new <code>PhysicalAddress</code>, returning an error if the …","Creates a new range of <code>Page</code>s that spans from <code>start</code> to <code>end</code>, …","Creates a new range of <code>Frame</code>s that spans from <code>start</code> to <code>end</code>…","Creates a new <code>VirtualAddress</code> that is guaranteed to be …","Creates a new <code>PhysicalAddress</code> that is guaranteed to be …","Returns the number of this <code>Page</code>.","Returns the number of this <code>Frame</code>.","Returns the offset of the given <code>VirtualAddress</code> within this …","Returns the offset of the given <code>PhysicalAddress</code> within …","Returns an inclusive <code>PageRange</code> representing the <code>Page</code>s that …","Returns an inclusive <code>FrameRange</code> representing the <code>Frame</code>s …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the 9-bit part of this <code>Page</code>’s <code>VirtualAddress</code> …","Returns the offset from the page boundary specified by …","","","","","Returns the size of this range in number of bytes.","Returns the size of this range in number of bytes.","Returns the number of <code>Frame</code>s covered by this iterator.","Returns the number of <code>Page</code>s covered by this iterator.","Returns the <code>VirtualAddress</code> at the start of this <code>Page</code>.","Returns the <code>PhysicalAddress</code> at the start of this <code>Frame</code>.","Returns the <code>VirtualAddress</code> of the starting <code>Page</code> in this …","Returns the <code>PhysicalAddress</code> of the starting <code>Frame</code> in this …","","","","","","","","","","","","","","","Returns a new separate <code>PageRange</code> that is extended to …","Returns a new separate <code>FrameRange</code> that is extended to …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the underlying <code>usize</code> value for this <code>VirtualAddress</code>.","Returns the underlying <code>usize</code> value for this <code>PhysicalAddress</code>…","Creates a new <code>VirtualAddress</code> with a value 0.","Creates a new <code>PhysicalAddress</code> with a value 0."],"i":[0,0,0,0,0,0,0,0,1,1,3,3,4,5,1,1,3,3,4,5,6,8,4,5,1,3,1,3,1,3,1,3,1,3,1,3,1,3,4,5,6,9,8,10,1,3,4,5,6,9,8,10,1,3,4,5,6,9,8,10,1,3,4,5,4,5,6,8,1,3,6,8,6,8,6,8,1,3,4,5,6,8,1,1,1,1,1,1,1,3,3,3,3,3,3,3,4,5,6,8,4,5,3,1,3,4,5,6,6,9,9,8,8,10,10,8,6,1,3,1,1,3,3,4,5,6,9,8,10,6,8,1,3,6,8,1,3,4,5,6,8,6,8,4,4,4,4,1,1,3,4,5,6,8,8,6,4,5,6,8,4,5,1,1,3,3,4,5,1,1,3,3,4,5,6,8,1,3,4,5,6,9,8,10,1,3,4,5,6,9,8,10,1,3,4,5,6,9,8,10,1,3,1,3],"f":[0,0,0,0,0,0,0,0,[[1,2],1],[[1,1],1],[[3,3],3],[[3,2],3],[[4,2],4],[[5,2],5],[[1,2]],[[1,1]],[[3,3]],[[3,2]],[[4,2]],[[5,2]],[[6,2],[[7,[1]]]],[[8,2],[[7,[3]]]],[[4,2],[[7,[4]]]],[[5,2],[[7,[5]]]],[[1,1],1],[[3,3],3],[[1,1]],[[3,3]],[[1,1],1],[[3,3],3],[[1,1]],[[3,3]],[[1,1],1],[[3,3],3],[[1,1]],[[3,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[4,4],[5,5],[6,6],[9,9],[8,8],[10,10],[[1,1],11],[[3,3],11],[[4,4],11],[[5,5],11],[1,4],[3,5],[[6,1],12],[[8,3],12],[[],1],[[],3],[6,13],[8,13],[6,13],[8,13],[[],6],[[],8],[[1,1],12],[[3,3],12],[[4,4],12],[[5,5],12],[[6,6],12],[[8,8],12],[[1,14],15],[[1,14],15],[[1,14],15],[[1,14],15],[[1,14],15],[[1,14],15],[[1,14],15],[[3,14],15],[[3,14],15],[[3,14],15],[[3,14],15],[[3,14],15],[[3,14],15],[[3,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[8,14],15],[[4,2],[[7,[4]]]],[[5,2],[[7,[5]]]],[3,2],[[]],[[]],[[]],[[]],[[]],[9,6],[6,9],[[]],[[]],[10,8],[[]],[8,10],[[3,2],8],[[1,2],6],[1],[3],[[]],[1,2],[3,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[8],[2,[[7,[1]]]],[2,[[7,[3]]]],[[4,4],6],[[5,5],8],[2,1],[2,3],[4,2],[5,2],[[6,1],[[7,[2]]]],[[8,3],[[7,[2]]]],[[6,6],[[7,[6]]]],[[8,8],[[7,[8]]]],[4,2],[4,2],[4,2],[4,2],[1,2],[[1,1],[[7,[11]]]],[[3,3],[[7,[11]]]],[[4,4],[[7,[11]]]],[[5,5],[[7,[11]]]],[6,2],[8,2],[8,2],[6,2],[4,1],[5,3],[6,1],[8,3],[[4,4],[[7,[2]]]],[[5,5],[[7,[2]]]],[[1,1],1],[[1,2],1],[[3,2],3],[[3,3],3],[[4,2],4],[[5,2],5],[[1,1]],[[1,2]],[[3,2]],[[3,3]],[[4,2]],[[5,2]],[[6,4],6],[[8,5],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[1,2],[3,2],[[],1],[[],3]],"p":[[3,"VirtualAddress"],[15,"usize"],[3,"PhysicalAddress"],[3,"Page"],[3,"Frame"],[3,"PageRange"],[4,"Option"],[3,"FrameRange"],[3,"CopyablePageRange"],[3,"CopyableFrameRange"],[4,"Ordering"],[15,"bool"],[3,"RangeInclusive"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"memory_x86_64":{"doc":"This crate implements the virtual memory subsystem …","t":[16,3,8,8,16,16,16,16,8,16,16,3,10,11,11,11,11,12,10,12,5,10,12,11,11,10,11,11,5,5,12,11,11,11,11,11,10,10,10,10,10,10,10,10,12,10,10,10,10,10,12,12,5,5,11,11,11,11,11,11],"n":["AdditionalReservedMemoryRegions","AggregatedSectionMemoryBounds","BootInformation","ElfSection","ElfSection","ElfSections","MemoryRegion","MemoryRegions","Module","Module","Modules","SectionMemoryBounds","additional_reserved_memory_regions","borrow","borrow","borrow_mut","borrow_mut","data","elf_sections","end","find_section_memory_bounds","flags","flags","fmt","fmt","framebuffer_info","from","from","get_p4","get_vga_mem_addr","init","into","into","is_empty","is_empty","is_empty","kernel_end","len","len","len","memory_regions","modules","name","name","rodata","rsdp","stack_size","start","start","start","start","text","tlb_flush_all","tlb_flush_virt_addr","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["memory_x86_64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The address bounds and flags of the initial kernel …","","","","","","","","","","The address bounds and mapping flags of a section’s …","Returns additional reserved memory regions that aren’t …","","","","","","Returns the kernel’s ELF sections.","The ending virtual address and physical address.","Finds the addresses in memory of the main kernel sections, …","Returns the section’s flags.","The page table entry flags that should be used for mapping …","","","Returns information about the graphical framebuffer, if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current top-level page table address.","Gets the physical memory occupied by vga.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the section is empty.","Returns whether the module is empty.","Returns whether the boot information is empty.","Returns the end of the kernel’s image in memory.","Returns the section’s length in memory, as opposed to …","Returns the module’s length.","Returns the boot information’s length.","Returns memory regions describing the physical memory.","Returns the modules found in the kernel image.","Returns the section’s name.","Returns the module’s name.","","Returns the RSDP if it was provided by the bootloader.","Returns the stack size in bytes.","Returns the section’s starting virtual address.","Returns the module’s starting physical address.","Returns the boot information’s starting virtual address.","The starting virtual address and physical address.","","Flushes the whole TLB. ","Flushes the specific virtual address in TLB. ","","","","","",""],"i":[15,0,0,0,15,15,15,15,0,15,15,0,15,4,7,4,7,7,15,4,0,16,4,4,7,15,4,7,0,0,7,4,7,16,17,15,15,16,17,15,15,15,16,17,7,15,15,16,17,15,4,7,0,0,4,7,4,7,4,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[]],[[]],[[]],[[]],0,[[],[[2,[1]]]],0,[[],[[2,[1]]]],[[],3],0,[[4,5],6],[[7,5],6],[[],[[9,[8]]]],[[]],[[]],[[],10],[[],[[2,[1]]]],0,[[]],[[]],[[],11],[[],11],[[],11],[[],[[2,[12,1]]]],[[],13],[[],13],[[],13],[[],[[2,[1]]]],[[]],[[],1],[[],[[2,[1,1]]]],0,[[],[[9,[10]]]],[[],[[2,[13,1]]]],[[],12],[[],10],[[],[[9,[12]]]],0,0,[[]],[12],[[],2],[[],2],[[],2],[[],2],[[],14],[[],14]],"p":[[15,"str"],[4,"Result"],[3,"ElfSectionFlags"],[3,"SectionMemoryBounds"],[3,"Formatter"],[6,"Result"],[3,"AggregatedSectionMemoryBounds"],[3,"FramebufferInfo"],[4,"Option"],[3,"PhysicalAddress"],[15,"bool"],[3,"VirtualAddress"],[15,"usize"],[3,"TypeId"],[8,"BootInformation"],[8,"ElfSection"],[8,"Module"]]},\
"mlx5":{"doc":"A mlx5 driver for a ConnectX-5 100GbE Network Interface …","t":[17,17,3,17,11,11,11,5,11,11,11,11,11,11,11,11],"n":["CONNECTX5_DEV","CONNECTX5_EX_DEV","ConnectX5Nic","MLX_VEND","borrow","borrow_mut","from","get_mlx5_nic","init","into","mac_address","send","send_fastpath","try_from","try_into","type_id"],"q":["mlx5","","","","","","","","","","","","","","",""],"d":["Device ID for the ConnectX-5 NIC","Device ID for the ConnectX-5-EX NIC","Struct representing a ConnectX-5 network interface card.","Vendor ID for Mellanox","","","Returns the argument unchanged.","Returns a reference to the NIC wrapped in a MutexIrqSafe, …","Initializes the new ConnectX-5 network interface card that …","Calls <code>U::from(self)</code>.","Returns the MAC address of the physical function ","Adds a packet to be sent to the transmit queue and returns …","Adds a packet to be sent to the transmit queue.","","",""],"i":[0,0,0,0,8,8,8,0,8,8,8,8,8,8,8,8],"f":[0,0,0,0,[[]],[[]],[[]],[[],[[2,[1]]]],[[3,4,4,5],[[7,[1,6]]]],[[]],[8],[[8,9],[[7,[6]]]],[[8,10]],[[],7],[[],7],[[],11]],"p":[[3,"MutexIrqSafe"],[4,"Option"],[3,"PciDevice"],[15,"usize"],[15,"u16"],[15,"str"],[4,"Result"],[3,"ConnectX5Nic"],[3,"TransmitBuffer"],[3,"PhysicalAddress"],[3,"TypeId"]]},\
"mlx_ethernet":{"doc":"This crate defines the layout of memory objects that make …","tn":["Cqn","Eqn","FgId","FtId","Lkey","Pd","Rqn","Sqn","Td","Tirn","Tisn","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command_queue","completion_queue","event_queue","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","initialization_segment","into","into","into","into","into","into","into","into","into","into","into","log_page_size","receive_queue","send_queue","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","work_queue","AccessRegister","AccessRegisterOpMod","AllocPd","AllocTransportDomain","AllocUar","AllocationFail","AllocationSuccess","BadBlockNumber","BadCommandType","BadIndex","BadInputLen","BadInputPointer","BadOp","BadOutputLen","BadOutputPointer","BadParam","BadPkt","BadResState","BadResource","BadResourceState","BadSize","BadSysState","BootPages","CmdState","Command","CommandBuilder","CommandCompletionStatus","CommandDeliveryStatus","CommandNotCompleted","CommandOpcode","CommandQueue","CommandQueueEntry","CommandQueueError","CommandReturnStatus","CommandTransportType","Completed","CreateCq","CreateEq","CreateFlowGroup","CreateFlowTable","CreateRq","CreateSq","CreateTir","CreateTis","EnableHca","EswVport","Ethernet","EthernetOffloadCapabilities","EthernetOffloadCapabilities","ExceedLim","GeneralDeviceCapabilities","GeneralDeviceCapabilities","HCACapabilities","HcaPortType","HcaReturnPages","IB","IncorrectCommandOpcode","InitHca","InitPages","Initialized","InputLenErr","InternalErr","InternalError","InvalidCommandDeliveryStatus","InvalidCommandOpcode","InvalidCommandReturnStatus","InvalidMailboxOffset","InvalidPortType","InvalidSQState","ManagePages","ManagePagesOpMod","MissingInput","MissingInputPages","ModifyNicVportContext","ModifyRq","ModifySq","NoCommandEntryAvailable","NoResources","NotImplemented","OK","OutputLenErr","PCIe","PageAllocationFailed","Posted","QueryHcaCap","QueryHcaCapCurrentOpMod","QueryHcaCapMaxOpMod","QueryIssi","QueryNicVportContext","QueryPages","QueryPagesOpMod","QueryRq","QuerySpecialContexts","QuerySq","QueryVportState","QueryVportStateOpMod","Read","RegularPages","ReservedNotZero","ResourceBusy","SetDriverVersion","SetFlowTableEntry","SetFlowTableRoot","SetIssi","SignatureErr","Success","TokenErr","UnimplementedOpcode","Uplink","VnicVport","Write","allocated_pages","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collapsed_cq","complete","cqn","create","create_and_execute_command","db_page","default","eq","eq","eqn","flow_group_id","flow_table_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_command_status","get_cq_number","get_delivery_status","get_device_capabilities","get_eq_number","get_flow_group_id","get_flow_table_id","get_max_mtu","get_port_type","get_protection_domain","get_query_issi_command_output","get_query_pages_command_output","get_receive_queue_number","get_reserved_lkey","get_return_status","get_send_queue_number","get_sq_state","get_tir_context_number","get_tis_context_number","get_transport_domain","get_uar","get_vport_mac_address","get_vport_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mtu","new","opmod","owned_by_hw","pd","post","queue_size","rqn","sqn","td","tirn","tisn","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uar","wait_for_command_completion","CompletionQueue","CompletionQueueDoorbellRecord","CompletionQueueEntry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_packet_transmission","default","default","dump","dump","fmt","from","from","from","init","init","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","EventQueue","EventQueueEntry","borrow","borrow","borrow_mut","borrow_mut","default","dump","dump","fmt","from","from","init","init","into","into","try_from","try_from","try_into","try_into","type_id","type_id","Abort","InitializationSegment","InitializingState","NotAllowed","WaitingPermetion","WaitingResources","borrow","borrow","borrow_mut","borrow_mut","cmdq_entry_stride","device_is_initializing","fmt","from","from","into","into","num_cmdq_entries","set_physical_address_of_cmdq","try_from","try_from","try_into","try_into","type_id","type_id","Error","Ready","ReceiveQueue","ReceiveQueueState","Reset","borrow","borrow","borrow_mut","borrow_mut","create","fmt","from","from","into","into","refill","try_from","try_from","try_from","try_from_primitive","try_into","try_into","type_id","type_id","Error","Ready","Reset","SendQueue","SendQueueState","borrow","borrow","borrow_mut","borrow_mut","create","dump","fmt","from","from","into","into","nop","send","try_from","try_from","try_from","try_from_primitive","try_into","try_into","type_id","type_id","DoorbellRecord","WorkQueueEntryReceive","WorkQueueEntrySend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","dump","dump","from","from","from","init","init","into","into","into","nop","send","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_buffer_info"],"q":["mlx_ethernet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mlx_ethernet::command_queuemlx_ethernet::completion_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mlx_ethernet::event_queue","","","","","","","","","","","","","","","","","","","","","","mlx_ethernet::initialization_segment","","","","","","","","","","","","","","","","","","","","","","","","","mlx_ethernet::receive_queue","","","","","","","","","","","","","","","","","","","","","","","","mlx_ethernet::send_queue","","","","","","","","","","","","","","","","","","","","","","","","","","mlx_ethernet::work_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["completion queue number","event queue number","flow group id","flow table id","","protection domain","receive queue number","send queue number","transport domain","transport interface receive number","transport interface send number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the Command Queue that is used to pass commands …","Completion Queues (CQ) are circular buffers used by the …","Event Queues (EQ) are circular buffers used by the HCA to …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This module defines the layout of the initialization …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Find the page size of the given <code>num_bytes</code> in units of 4KiB …","The Receive Queue (RQ) object holds the descriptor ring …","The Send Queue (SQ) object holds the descriptor ring used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Work Queue (WQ) contains a contiguous memory buffer …","","Possible values of the opcode modifer when the opcode is …","","","","","","","","","","","","","","","","","","","","","","The possible states a command can be in as it is updated …","A struct representing a Command Queue Entry in the Command …","Struct that makes it easier to pass the variety of …","","Return codes written by HW in the delivery status field of …","Trying to access the command entry before HW is done …","Command opcode written by SW in opcode field of the input …","A buffer of fixed-size entries that is used to pass …","Layout of a command passed to the NIC. The fields include …","Possible reasons for failure when executing a command","Command status written by HW in status field of the output …","Type of transport that carries the command.","The command has been processed by HW and output is ready …","","","","","","","","","","","","","","","","","The HCA capabilities are stored in this struct after being …","Possible values of the port type field returned when …","","Infiniband","Opcode value in the command entry is not what was expected","","","Command entries have been filled, but it is still owned by …","","","","Delivery status in the command entry is not a valid value","Opcode in the command entry is not a valid value","Return status in the command entry is not a valid value","Offset in a page is too large to map a …","The returned port type is not a valid value","The returned state of the SQ is invalid","","Possible values of the opcode modifer when the opcode is …","Any other input is not passed to a command that requires …","Allocated pages are not passed to a command that requires …","","","","All command entries are currently being used","","Some function has not been implemented for the given opcode","","","","A call to create a <code>MappedPages</code> failed","The command has been issued to the HW by ringing the …","","Possible values of the opcode modifer when the opcode is …","Possible values of the opcode modifer when the opcode is …","","","","Possible values of the opcode modifer when the opcode is …","","","","","Possible values of the opcode modifer when the opcode is …","","","","","","","","","","","","Initializing a comand entry for the given opcode has not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Polls a completion bit until the command has been …","","Create a command queue object.","Find an command queue entry that is not in use","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the status of command delivery. This only informs …","Get the device capabilities, which is the output of the …","","","","Get the maximum value the MTU can be set to, which is the …","Get the number of pages requested by the NIC, which is the …","Get the protection domain number, which is the output of …","Get the current ISSI version and the supported ISSI …","Get the number of pages requested by the NIC, which is the …","","Get the value of the reserved Lkey for Base Memory …","Returns the status of command execution. A <code>None</code> returned …","","","","","Get the transport domain number, which is the output of …","Get the User Access Region (UAR) number, which is the …","Get the port mac address, which is the output of the …","Get the Vport state in the format (max_tx_speed, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the command is currently under the …","","Posts an initialized command by ringing the doorbell in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for ownership bit to be cleared, and then returns …","A data structure that contains the CQ buffer  and is used …","A structure containing information of recently-posted CQ …","The layout of an entry in the CQ buffer.","","","","","","","Checks if a packet is transmitted by comparing the …","","","Prints out all entries in the CQ","Prints out the fields of a CQE in the format used by other …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a completion queue by mapping the buffer as a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","A data structure that contains the EQ buffer  and is used …","The layout of an entry in the EQ buffer.","","","","","","Prints out all entries in the EQ","Prints out the fields of an EQE in the format used by …","","Returns the argument unchanged.","Returns the argument unchanged.","Creates an event queue by mapping the buffer as a slice of …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The initialization segment is located at offset 0 of PCI …","The possible values of the initialization state of the …","","","","","","","","Returns the required stride of command queue entries …","Returns true if the device is still initializing, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the maximum number of entries that can be in the …","Sets the physical address of the command queue within the …","","","","","","","","","A data structure that contains the RQ ring of descriptors  …","The possible states the RQ can be in.","","","","","","Creates a RQ by mapping the buffer as a slice of …","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Refills the receive queue by updating WQEs with new packet …","","","","","","","","","","","","A data structure that contains the SQ ring of descriptors  …","The possible states the SQ can be in.","","","","","Creates a SQ by mapping the buffer as a slice of …","Prints out all entries in the SQ","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform all the steps to complete a NOP: initialize the …","Perform all the steps to send a packet: initialize the …","","","","","","","","","The layout of a doorbell record in memory. A doorbell …","WQEs are built from multiple segments. In the case of …","WQEs are built from multiple segments. In the case of Send …","","","","","","","","","","Prints out the fields of a WQE in the format used by other …","Prints out the fields of a WQE in the format used by other …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","set a WQE to an initial state","set a WQE to an initial state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Fill the control segment of the WQE to execute a NOP.","Fill the control, ethernet and data segments of the WQE to …","","","","","","","","","","Fill the data segment of the WQE to receive packets."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,0,0,0,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,0,1,2,3,4,5,6,7,8,9,10,11,0,0,0,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,0,20,0,20,20,20,57,57,35,35,36,36,35,36,36,35,36,36,36,36,36,36,36,58,0,0,0,0,0,32,0,0,0,0,0,0,34,20,20,20,20,20,20,20,20,20,59,37,21,22,36,21,22,0,0,57,37,32,20,58,34,35,35,36,32,32,32,32,32,32,20,0,32,32,20,20,20,32,36,32,36,35,60,32,34,20,0,0,20,20,20,0,20,20,20,20,0,23,58,35,36,20,20,20,20,35,35,35,32,59,59,23,17,60,32,57,58,59,24,17,25,35,20,36,21,22,23,37,34,38,26,39,60,32,57,58,59,24,17,25,35,20,36,21,22,23,37,34,38,26,39,20,21,22,23,20,21,22,23,17,24,17,25,25,17,26,20,34,17,17,17,35,20,36,37,38,26,39,60,32,57,58,59,24,17,25,35,20,36,21,22,23,37,34,38,26,39,25,25,26,25,25,25,25,25,25,25,25,25,25,25,26,25,25,25,25,25,25,25,25,60,32,57,58,59,24,17,25,35,20,36,21,22,23,37,34,38,26,39,17,17,17,26,17,24,17,17,17,17,17,17,20,21,22,23,60,32,57,58,59,24,17,25,35,35,20,20,36,36,21,22,23,37,37,34,38,26,39,35,20,36,37,60,32,57,58,59,24,17,25,35,20,36,21,22,23,37,34,38,26,39,60,32,57,58,59,24,17,25,35,20,36,21,22,23,37,34,38,26,39,17,25,0,0,0,43,44,45,43,44,45,43,44,45,43,44,44,43,44,45,43,44,43,44,45,43,44,45,43,44,45,43,44,45,0,0,48,47,48,47,47,48,47,47,48,47,48,47,48,47,48,47,48,47,48,47,61,0,0,61,61,61,61,31,61,31,31,31,31,61,31,61,31,31,31,61,31,61,31,61,31,51,51,0,0,51,50,51,50,51,50,51,50,51,50,51,50,50,51,51,51,50,51,50,51,53,53,53,0,0,52,53,52,53,52,52,53,52,53,52,53,52,52,52,53,53,53,52,53,52,53,0,0,0,54,55,56,54,55,56,54,55,56,55,56,54,55,56,55,56,54,55,56,55,55,54,55,56,54,55,56,54,55,56,56],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[1,12],13],[[2,12],13],[[3,12],13],[[4,12],13],[[5,12],13],[[6,12],13],[[7,12],13],[[8,12],13],[[9,12],13],[[10,12],13],[[11,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,[19,[18]]],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[23,23],[[]],[[]],[[]],[[]],[17,17],[[24,25],24],[[17,3],17],[[[28,[26,27]],29],[[15,[25,30]]]],[[25,17,31],[[15,[24,32]]]],[[17,18],17],[[],26],[[20,20],33],[[34,34],33],[[17,7],17],[[17,11],17],[[17,10],17],[[35,12],13],[[20,12],13],[[36,12],13],[[37,12],13],[[38,12],13],[[26,12],13],[[39,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,24],[[15,[38,32]]]],[[25,24],[[15,[32]]]],[26,[[15,[35,32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[26,[[15,[36,32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[25,24],[[15,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,40],17],[20,17],[[17,40],17],[26,33],[[17,4],17],[[24,31],24],[[17,14],17],[[17,1],17],[[17,2],17],[[17,5],17],[[17,8],17],[[17,9],17],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[14,[[15,[35,[41,[35]]]]]],[[],15],[[],15],[14,[[15,[20,[41,[20]]]]]],[[],15],[42,[[15,[36,[41,[36]]]]]],[[],15],[[],15],[[],15],[42,[[15,[37,[41,[37]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],[[15,[35,[41,[35]]]]]],[[],[[15,[20,[41,[20]]]]]],[[],[[15,[36,[41,[36]]]]]],[[],[[15,[37,[41,[37]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[17,14],17],[[25,24]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[43,29,40]],[[],44],[[],45],[43],[[44,29]],[[44,12],13],[[]],[[]],[[]],[[46,29,46,3],[[15,[43,30]]]],[44],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],0,0,[[]],[[]],[[]],[[]],[[],47],[48],[[47,29]],[[47,12],13],[[]],[[]],[[46,29,7],[[15,[48,30]]]],[47],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[31,42],[31,33],[[31,12],13],[[]],[[]],[[]],[[]],[31,42],[[31,18],[[15,[30]]]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,[[]],[[]],[[]],[[]],[[46,29,14,49,1,6,43],[[15,[50,30]]]],[[51,12],13],[[]],[[]],[[]],[[]],[50,[[15,[30]]]],[[],15],[42,[[15,[51,[41,[51]]]]]],[[],15],[[],[[15,[51,[41,[51]]]]]],[[],15],[[],15],[[],16],[[],16],0,0,0,0,0,[[]],[[]],[[]],[[]],[[46,29,46,46,2,9,6],[[15,[52,30]]]],[52],[[53,12],13],[[]],[[]],[[]],[[]],[52,40],[[52,18],40],[[],15],[42,[[15,[53,[41,[53]]]]]],[[],15],[[],[[15,[53,[41,[53]]]]]],[[],15],[[],15],[[],16],[[],16],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],55],[[],56],[[55,29]],[[56,29]],[[]],[[]],[[]],[55],[56],[[]],[[]],[[]],[[55,14,14]],[[55,14,14,14,18]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[56,14,18,14]]],"p":[[3,"Rqn"],[3,"Sqn"],[3,"Cqn"],[3,"Pd"],[3,"Td"],[3,"Lkey"],[3,"Eqn"],[3,"Tirn"],[3,"Tisn"],[3,"FtId"],[3,"FgId"],[3,"Formatter"],[6,"Result"],[15,"u32"],[4,"Result"],[3,"TypeId"],[3,"CommandBuilder"],[3,"PhysicalAddress"],[3,"Vec"],[4,"CommandOpcode"],[4,"QueryHcaCapMaxOpMod"],[4,"QueryHcaCapCurrentOpMod"],[4,"AccessRegisterOpMod"],[3,"Command"],[3,"CommandQueue"],[3,"CommandQueueEntry"],[3,"Mutable"],[3,"BorrowedSliceMappedPages"],[15,"usize"],[15,"str"],[3,"InitializationSegment"],[4,"CommandQueueError"],[15,"bool"],[4,"CmdState"],[4,"CommandDeliveryStatus"],[4,"CommandReturnStatus"],[4,"HcaPortType"],[3,"CommandCompletionStatus"],[3,"HCACapabilities"],[15,"u16"],[3,"TryFromPrimitiveError"],[15,"u8"],[3,"CompletionQueue"],[3,"CompletionQueueEntry"],[3,"CompletionQueueDoorbellRecord"],[3,"MappedPages"],[3,"EventQueueEntry"],[3,"EventQueue"],[3,"Queue"],[3,"ReceiveQueue"],[4,"ReceiveQueueState"],[3,"SendQueue"],[4,"SendQueueState"],[3,"DoorbellRecord"],[3,"WorkQueueEntrySend"],[3,"WorkQueueEntryReceive"],[4,"ManagePagesOpMod"],[4,"QueryPagesOpMod"],[4,"QueryVportStateOpMod"],[4,"CommandTransportType"],[4,"InitializingState"]]},\
"mod_mgmt":{"doc":"","t":[13,3,13,17,13,17,3,4,17,17,13,17,17,13,13,13,17,13,4,13,3,3,3,17,17,3,13,17,17,3,13,17,4,6,3,6,3,6,6,17,17,17,17,13,13,13,3,3,13,6,3,6,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,5,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,12,12,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,12,12,0,11,11,12,12,12,5,0,11,12,12,12,5,11,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,3,11,11,11,12,11,12,12,5,11,11,11,5],"n":["AbsolutePath","AppCrateRef","Application","BSS_SECTION_NAME","Bss","CRATE_HASH_DELIMITER","CrateNamespace","CrateType","DATA_BSS_SECTION_FLAGS","DATA_SECTION_NAME","Data","EH_FRAME_SECTION_NAME","EXTRA_FILES_DIRECTORY_NAME","EhFrame","Executable","File","GCC_EXCEPT_TABLE_SECTION_NAME","GccExceptTable","IntoCrateObjectFile","Kernel","LoadedCrate","LoadedSection","LoadedSectionInner","MODULE_PREFIX_DELIMITER","NAMESPACES_DIRECTORY_NAME","NamespaceDir","Prefix","RODATA_SECTION_FLAGS","RODATA_SECTION_NAME","RelocationEntry","Rodata","SECTION_HASH_DELIMITER","SectionType","Shndx","StrRef","StrongCrateRef","StrongDependency","StrongSectionRef","SymbolMap","TEXT_SECTION_FLAGS","TEXT_SECTION_NAME","TLS_BSS_SECTION_NAME","TLS_DATA_SECTION_NAME","Text","TlsBss","TlsData","TlsDataImage","TlsInitializer","Userspace","WeakCrateRef","WeakDependent","WeakSectionRef","add_existing_static_tls_section","add_new_dynamic_tls_section","add_symbols","addend","as_func","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_on_write","cmp","copy_section_data_to","crate_name","crate_name_as_prefix","crate_name_from_path","crate_name_without_hash","crate_names","crates_dependent_on_me","crates_i_depend_on","create_application_namespace","data_pages","data_sections","data_sections_iter","debug_symbols_file","default","default_namespace_name","deref","deref","deref","deserialize","dir","drop","drop","dump_symbol_map","dump_symbol_map_recursive","empty","empty","eq","eq","eq","eq","find_section","find_symbol_table","find_symbols_starting_with","find_symbols_starting_with_and_namespace","find_weak_dependent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_crate","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_elf_relocation","from_module_name","get_containing_crate_name","get_containing_crate_name_ranges","get_crate","get_crate_and_namespace","get_crate_containing_address","get_crate_object_file","get_crate_object_file_starting_with","get_crate_object_files_starting_with","get_crate_starting_with","get_crates_starting_with","get_data","get_file_and_dir_names_starting_with","get_file_starting_with","get_files_starting_with","get_function_section","get_hash","get_initial_kernel_namespace","get_namespaces_directory","get_section_containing_address","get_symbol","get_symbol_and_namespace","get_symbol_or_load","get_symbol_starting_with","get_tls_initializer_data","global","global_sections","global_sections_iter","hash","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalidate","is_absolute","is_data_or_bss","is_tls","is_valid_crate_name_char","load_crate","load_crate_as_application","load_crates","mapped_pages","mapped_pages_offset","method_get_crate_object_file_starting_with","method_get_crate_object_files_starting_with","name","name","name","name_without_hash","new","new","new","object_file","offset","parent_crate","parse_nano_core","partial_cmp","recursive_namespace","reexported_symbols","relocation","relocation","replace_containing_crate_name","replace_nano_core_crates","rewrite_section_dependents","rodata_pages","section","section","section_name_str_ref","section_name_without_hash","sections","sections_dependent_on_me","sections_i_depend_on","serialize","set_as_current_tls_base","size","text_pages","tls_sections","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","virt_addr","with_dependencies","write_crate_object_file","write_relocation","NanoCoreItems","borrow","borrow_mut","from","init_symbol_values","into","nano_core_crate_ref","num_new_symbols","parse_nano_core","try_from","try_into","type_id","replace_nano_core_crates"],"q":["mod_mgmtmod_mgmt::parse_nano_core","","","","","","","","","","","","mod_mgmt::replace_nano_core_crates"],"d":["An absolute path that points to the crate object file. ","An application crate that has been loaded into a …","","","A <code>bss</code> section is just like a data section, but is …","A crate’s name and its hash are separated by “-”, …","This struct represents a namespace of crates and their “…","The type of a crate, based on its object file naming …","<code>.data</code> and <code>.bss</code> sections are read-write and non-executable.","","A <code>data</code> section contains data that is both readable and …","","The name of the directory that contains all other “…","The <code>.eh_frame</code> section contains information about stack …","","A direct reference to the crate object file. This will be …","","A <code>.gcc_except_table</code> section contains landing pads for …","A type that can be converted into a crate object file.","","Represents a single crate whose object file has been  …","Represents a section that has been loaded and is part of a …","The parts of a <code>LoadedSection</code> that may be mutable, i.e.,  …","The Theseus Makefile appends prefixes onto bootloader …","The name of the directory that contains all of the …","A wrapper around a <code>Directory</code> reference that offers special …","A string prefix that will be used to search for the crate …","<code>.rodata</code> sections are read-only and non-executable.","","The information necessary to calculate and write a …","An <code>rodata</code> section contains read-only data, i.e., constants.","A section’s demangled name and its hash are separated by …","The possible types of sections that can be loaded from a …","A Section Header iNDeX (SHNDX), as specified by the ELF …","A wrapper around an <code>Arc&lt;str&gt;</code>: an immutable shared …","A Strong reference to a <code>LoadedCrate</code>.","A representation that the owner <code>A</code> of (a <code>LoadedSection</code> …","A Strong reference (<code>Arc</code>) to a <code>LoadedSection</code>.","A “symbol map” from a fully-qualified demangled symbol …","<code>.text</code> sections are read-only and executable.","","","","A <code>text</code> section contains executable code, i.e., functions. ","A <code>.tbss</code> section is a read-only section that holds all-zero …","A <code>.tdata</code> section is a read-only section that holds the …","An initialized TLS area data image ready to be used by a …","A “factory” that creates Thread-Local Storage (TLS) …","","A Weak reference to a <code>LoadedCrate</code>.","A representation that the <code>section</code> <code>A</code> in this struct depends …","A Weak reference (<code>Weak</code>) to a <code>LoadedSection</code>.","Add a TLS section that has pre-determined offset, e.g., …","Inserts the given <code>section</code> into this TLS area at the next …","Adds only <em>global</em> symbols in the given <code>sections</code> iterator to …","The value that is added to the source section’s address  …","Reinterprets this section’s underlying <code>MappedPages</code> …","","Obtain a reference to the inner <code>str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duplicates this <code>CrateNamespace</code> into a new <code>CrateNamespace</code>,  …","","Copies the actual data contents of this <code>LoadedSection</code> to …","The name of this crate.","Returns this crate name as a symbol prefix, including a …","Returns the crate name that is derived from a crate object …","Returns the substring of this crate’s name that excludes …","Returns a list of all of the crate names currently loaded …","Currently may contain duplicates!","Returns the set of crates that this crate depends on.  …","Create a new application <code>CrateNamespace</code> that uses the …","A tuple of:","The set of <code>.data</code> and <code>.bss</code> sections in this crate. The <code>Shndx</code>…","A convenience function to iterate over only the data …","The file that contains debug symbols for this crate.  …","","Returns the string suffix for use as the name  of the …","","","","","Returns the directory that this <code>CrateNamespace</code> is based on.","","","Simple debugging function that returns the entire symbol …","Same as <code>dump_symbol_map()</code>,  but includes symbols from …","Creates an empty TLS initializer with no TLS data sections.","Creates an empty TLS data image with no TLS section …","","","","","Returns the <strong>first</strong> <code>LoadedSection</code> that matches the given …","Returns a reference to the symbol table in the given …","Returns a copied list of the corresponding <code>LoadedSection</code>s  …","Similar to <code>find_symbols_starting_with</code>, but also includes a …","Returns the index of the first <code>WeakDependent</code> object in …","","","","","","","","","","","","","","","Iterates over all crates in this namespace and calls the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a tuple of (CrateType, &amp;str, &amp;str) based on the …","Parses the given symbol string to try to find the name of …","Same as <code>get_containing_crate_name()</code>, but returns the …","Acquires the lock on this <code>CrateNamespace</code>’s crate list …","Acquires the lock on this <code>CrateNamespace</code>’s crate list …","Finds the crate that contains the given <code>VirtualAddress</code> in …","Gets the given object file based on its crate name prefix. ","Like <code>get_crate_starting_with()</code>, but for crate <em>object file</em>s …","Like <code>get_crates_starting_with()</code>, but for crate <em>object file</em>…","Finds the <code>LoadedCrate</code> whose name starts with the given …","Finds the <code>LoadedCrate</code>s whose names start with the given …","Returns a new copy of the TLS data image.","Returns the list of file and directory names in this …","Finds the single file in this directory whose name starts …","Returns the list of files in this Directory whose name …","Returns the <code>LoadedSection</code> of type <code>SectionType::Text</code> that …","","Returns a reference to the default kernel namespace,  …","Returns the top-level directory that contains all of the …","Finds the section that contains the given <code>VirtualAddress</code> …","Finds the corresponding <code>LoadedSection</code> reference for the …","Like <code>get_symbol()</code>, but also returns the exact …","Finds the corresponding <code>LoadedSection</code> reference for the …","Returns a weak reference to the <code>LoadedSection</code> whose name …","Returns a new copy of this namespace’s initial TLS area, …","Whether or not this section’s symbol was exported …","The set of global symbols in this crate, including regular …","A convenience function to iterate over only the global …","","Initializes the module management system based on the …","The inner contents of a section that could possibly change …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalidates the cached data image in this <code>TlsInitializer</code> …","Returns true if the relocation type results in a …","Returns <code>true</code> if <code>Data</code> or <code>Bss</code>, otherwise <code>false</code>.","Returns <code>true</code> if <code>TlsData</code> or <code>TlsBss</code>, otherwise <code>false</code>.","Crate names must be only alphanumeric characters, an …","Loads the specified crate into memory, allowing it to be …","Loads the specified application crate into this …","This function first loads all of the given crates’ …","The <code>MappedPages</code> that cover this section.","The offset into the <code>mapped_pages</code> where this section starts","Same as <code>get_crate_object_file_starting_with()</code>, but is a …","Same as <code>get_crate_object_files_starting_with()</code>, but is a …","Returns the const <code>&amp;str</code> name of this <code>SectionType</code>.","Returns the name of this <code>CrateNamespace</code>, which is just …","The full string name of this section, a fully-qualified …","Returns the substring of this section’s name that …","Create a new <code>LoadedSection</code>, with an empty <code>dependencies</code> …","Creates a new <code>CrateNamespace</code> that is completely empty (no …","Creates a new <code>NamespaceDir</code> that wraps the given <code>DirRef</code>.","The object file that this crate was loaded from.","The offset from the starting virtual address of the target …","The <code>LoadedCrate</code> object that contains/owns this section","Routines for parsing the <code>nano_core</code>, the fully-linked, …","","Returns the recursive namespace that this <code>CrateNamespace</code> …","The set of symbols that this crate’s global symbols are …","The details of the relocation action that was performed.","The details of the relocation action that was performed.","Replaces the <code>old_crate_name</code> substring in the given …","Routines for replacing the crates that comprise the …","Finds all of the weak dependents (sections that depend on …","A tuple of:","A strong reference to the <code>LoadedSection</code> <code>B</code> that the owner …","A weak reference to the <code>LoadedSection</code> <code>A</code> that depends on …","Returns the default name for the given <code>SectionType</code> as a …","Returns the substring of the given section’s name that …","A map containing all the sections in this crate. In …","The list of sections in foreign crates that depend on this …","The list of sections in foreign crates that this section …","","Sets the current CPU’s TLS register to point to this TLS …","The size in bytes of this section.","A tuple of:","The set of thread-local storage (TLS) symbols in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of this section, e.g., <code>.text</code>, <code>.rodata</code>, <code>.data</code>, <code>.bss</code>…","The type of relocation calculation that is performed  to …","","","","","","","","","","","","","","","","The starting <code>VirtualAddress</code> of this section (except for …","Same as [new()<code>](#method.new), but uses the given </code>…","Insert the given crate object file based on its crate type …","Actually write the value of a relocation entry.","The items returned from the <code>parse_nano_core()</code> routine.","","","Returns the argument unchanged.","The symbols in the <code>.init</code> ELF section, which maps the symbol…","Calls <code>U::from(self)</code>.","A reference to the newly-created nano_core crate.","The number of new symbols in the nano_core crate added to …","Parses and/or deserializes the file containing details …","","","","See the module-level documentation for how this works. "],"i":[34,0,26,0,11,0,0,0,0,0,11,0,0,11,26,34,0,11,0,26,0,0,0,0,0,0,34,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,0,0,26,0,0,0,1,1,7,14,2,10,10,10,10,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,10,1,11,12,13,14,15,10,1,11,12,13,14,15,7,10,2,17,17,0,17,7,17,17,0,17,17,17,17,25,26,10,27,15,11,7,17,27,7,7,1,30,10,26,11,14,17,0,7,7,2,10,10,1,30,17,2,2,26,11,12,13,14,34,15,7,10,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,14,26,0,0,7,7,7,15,7,7,7,7,1,15,15,15,17,10,0,0,7,7,7,7,7,7,2,17,17,10,0,2,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,1,14,11,11,0,7,7,7,2,2,7,7,11,7,2,2,2,7,15,17,14,2,0,10,7,17,12,13,0,0,7,17,12,13,0,2,17,25,25,11,30,2,17,17,10,1,11,12,13,14,15,10,2,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,2,14,10,1,30,17,2,26,25,11,12,13,14,34,27,7,15,2,2,15,0,0,51,51,51,51,51,51,51,0,51,51,51,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],[[6,[[4,[2]],5]]]],[[1,2,3],[[6,[5]]]],[[7,8],3],0,[2,[[6,[9]]]],[10,9],[10,9],[[]],[10],[10,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[1,1],[11,11],[12,12],[13,13],[14,14],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[[10,10],16],[[2,2],[[6,[9]]]],0,[17,18],[19,9],[17,9],[[7,8],[[20,[10]]]],[17,[[20,[[21,[17]],22]]]],[17,[[20,[[21,[17]],22]]]],[[[23,[[4,[7]]]]],[[6,[[4,[7]],9]]]],0,0,[17,24],0,[[],25],[26,9],[10],[27,28],[15,29],[[],[[6,[11]]]],[7,15],[17],[27],[7,18],[7,18],[[],1],[[],30],[[10,10],8],[[26,26],8],[[11,11],8],[[14,14],8],[17,[[23,[4]]]],[31,[[6,[9]]]],[[7,9],20],[[7,9],20],[[2,4],[[23,[3]]]],[[10,32],[[6,[33]]]],[[10,32],[[6,[33]]]],[[1,32],[[6,[33]]]],[[30,32],[[6,[33]]]],[[17,32],[[6,[33]]]],[[2,32],[[6,[33]]]],[[2,32],[[6,[33]]]],[[26,32],[[6,[33]]]],[[11,32],[[6,[33]]]],[[12,32],[[6,[33]]]],[[13,32],[[6,[33]]]],[[14,32],[[6,[33]]]],[[34,32],35],[[15,32],35],[[7,8]],[9,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,14],[9,[[6,[9]]]],[9,[[20,[9,22]]]],[9,[[20,[[37,[3]],22]]]],[[7,9],[[23,[28]]]],[[4,9],23],[[7,38,8],[[23,[28]]]],[[15,9],[[23,[39]]]],[[4,9],23],[[4,9],20],[[4,9],23],[[4,9],20],[1,30],[[15,9],[[20,[18]]]],[[15,9],[[23,[39]]]],[[15,9],[[20,[39]]]],[[17,9],[[23,[4]]]],[[],40],[[],[[23,[4]]]],[[],[[23,[29]]]],[[7,38,8],23],[[7,9],41],[[7,9],23],[[7,9,[23,[7]],42,8],41],[[7,9],41],[7,30],0,0,[17,24],[10],[[[20,[43]],44],[[6,[4,9]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[14,8],[11,8],[11,8],[45,8],[[7,39,[23,[7]],42,8],[[6,[9]]]],[[4,39,42,8],[[6,[27,9]]]],[[7,[23,[7]],42,8],[[6,[9]]]],0,0,[[7,9],23],[[7,9],20],[11,9],[7,9],0,[2,9],[[11,10,[4,[[48,[46,47]]]],3,38,3,8,[21,[17]]],2],[[18,15,[23,[[4,[7]]]]],7],[29,15],0,0,0,0,[[10,10],[[23,[16]]]],[7,[[23,[4]]]],0,0,0,[[9,9,9],[[23,[18]]]],0,[[49,49,42],[[6,[9]]]],0,0,0,[11,10],[9,9],0,0,0,[11,6],[30],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,[[11,10,[4,[[48,[46,47]]]],3,38,3,8,[21,[17]],[20,[12,22]],[20,[13,22]]],2],[[15,9],[[6,[39,9]]]],[[14,3,38,8],[[6,[9]]]],0,[[]],[[]],[[]],0,[[]],0,0,[[4,46,46,46,8],[[6,[51]]]],[[],6],[[],6],[[],50],[[4,28,42],[[6,[9]]]]],"p":[[3,"TlsInitializer"],[3,"LoadedSection"],[15,"usize"],[3,"Arc"],[4,"TlsInitializerError"],[4,"Result"],[3,"CrateNamespace"],[15,"bool"],[15,"str"],[3,"StrRef"],[4,"SectionType"],[3,"StrongDependency"],[3,"WeakDependent"],[3,"RelocationEntry"],[3,"NamespaceDir"],[4,"Ordering"],[3,"LoadedCrate"],[3,"String"],[3,"Path"],[3,"Vec"],[3,"CowWeak"],[3,"Global"],[4,"Option"],[8,"Iterator"],[3,"LoadedSectionInner"],[4,"CrateType"],[3,"AppCrateRef"],[6,"StrongCrateRef"],[6,"DirRef"],[3,"TlsDataImage"],[3,"ElfFile"],[3,"Formatter"],[3,"Error"],[4,"IntoCrateObjectFile"],[6,"Result"],[3,"Rela"],[3,"Range"],[3,"VirtualAddress"],[6,"FileRef"],[15,"u64"],[6,"WeakSectionRef"],[6,"MmiRef"],[3,"BootloaderModule"],[3,"MemoryManagementInfo"],[15,"char"],[3,"MappedPages"],[3,"Spin"],[3,"Mutex"],[6,"StrongSectionRef"],[3,"TypeId"],[3,"NanoCoreItems"]]},\
"mouse":{"doc":"A basic driver for a mouse connected to the legacy PS/2 …","t":[5],"n":["init"],"q":["mouse"],"d":["Initialize the PS/2 mouse driver and register its …"],"i":[0],"f":[[[1,[3,[2]]],[[5,[4]]]]],"p":[[3,"PS2Mouse"],[4,"Event"],[3,"Queue"],[15,"str"],[4,"Result"]]},\
"mouse_data":{"doc":"","t":[3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["MouseButtons","MouseEvent","MouseMovementRelative","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buttons","clone","clone","clone","fifth","fifth_or_err","fmt","fmt","fmt","fourth","fourth_or_err","from","from","from","from_bytes","into","into","into","into_bytes","left","left_or_err","middle","middle_or_err","movement","new","new","new","right","right_or_err","scroll_movement","set_fifth","set_fifth_checked","set_fourth","set_fourth_checked","set_left","set_left_checked","set_middle","set_middle_checked","set_right","set_right_checked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_fifth","with_fifth_checked","with_fourth","with_fourth_checked","with_left","with_left_checked","with_middle","with_middle_checked","with_right","with_right_checked","x_movement","y_movement"],"q":["mouse_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Returns the value of fifth.","Returns the value of fifth.","","","","Returns the value of fourth.","Returns the value of fourth.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","Returns the value of left.","Returns the value of left.","Returns the value of middle.","Returns the value of middle.","","","Returns an instance with zero initialized data.","","Returns the value of right.","Returns the value of right.","","Sets the value of fifth to the given value.","Sets the value of fifth to the given value.","Sets the value of fourth to the given value.","Sets the value of fourth to the given value.","Sets the value of left to the given value.","Sets the value of left to the given value.","Sets the value of middle to the given value.","Sets the value of middle to the given value.","Sets the value of right to the given value.","Sets the value of right to the given value.","","","","","","","","","","Returns a copy of the bitfield with the value of fifth set …","Returns a copy of the bitfield with the value of fifth set …","Returns a copy of the bitfield with the value of fourth …","Returns a copy of the bitfield with the value of fourth …","Returns a copy of the bitfield with the value of left set …","Returns a copy of the bitfield with the value of left set …","Returns a copy of the bitfield with the value of middle …","Returns a copy of the bitfield with the value of middle …","Returns a copy of the bitfield with the value of right set …","Returns a copy of the bitfield with the value of right set …","",""],"i":[0,0,0,1,2,3,1,2,3,3,1,2,3,2,2,1,2,3,2,2,1,2,3,2,1,2,3,2,2,2,2,2,3,1,2,3,2,2,1,2,2,2,2,2,2,2,2,2,2,1,2,3,1,2,3,1,2,3,2,2,2,2,2,2,2,2,2,2,1,1],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[2],[2,[[5,[4]]]],[[1,6],7],[[2,6],7],[[3,6],7],[2],[2,[[5,[4]]]],[[]],[[]],[[]],[[],2],[[]],[[]],[[]],[2],[2],[2,[[5,[4]]]],[2],[2,[[5,[4]]]],0,[[8,8,9],1],[[],2],[[2,1],3],[2],[2,[[5,[4]]]],0,[2],[2,[[5,[10]]]],[2],[2,[[5,[10]]]],[2],[2,[[5,[10]]]],[2],[2,[[5,[10]]]],[2],[2,[[5,[10]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],[[],11],[2,2],[2,[[5,[2,10]]]],[2,2],[2,[[5,[2,10]]]],[2,2],[2,[[5,[2,10]]]],[2,2],[2,[[5,[2,10]]]],[2,2],[2,[[5,[2,10]]]],0,0],"p":[[3,"MouseMovementRelative"],[3,"MouseButtons"],[3,"MouseEvent"],[3,"InvalidBitPattern"],[4,"Result"],[3,"Formatter"],[6,"Result"],[15,"i16"],[15,"i8"],[3,"OutOfBounds"],[3,"TypeId"]]},\
"multicore_bringup":{"doc":"Initialization and bring-up of secondary CPUs.","t":[3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["GraphicInfo","MulticoreBringupInfo","ap_gdt","ap_start_realmode_begin","ap_start_realmode_end","bits_per_pixel","blue_position","blue_size","borrow","borrow","borrow_mut","borrow_mut","bytes_per_scanline","clone","clone_into","fmt","from","from","get_graphic_info","green_position","green_size","handle_ap_cores","height","into","into","physical_address","red_position","red_size","to_owned","total_memory_size_in_bytes","try_from","try_from","try_into","try_into","type_id","type_id","width"],"q":["multicore_bringup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A structure to access information about the graphical …","Information needed to bring up APs (secondary CPUs) on …","The address of the GDT set up for each AP (secondary CPU)","The starting virtual addresses of the <code>ap_start</code> realmode …","The ending virtual addresses (exclusive) of the <code>ap_start</code> …","The size of each pixel, in number of bits, <em>not</em> bytes.","The position of the least significant bit of a pixel’s …","The size of a pixel’s Blue value, in number of bits.","","","","","The number of bytes in each row or line of the framebuffer…","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns information about the currently-active graphical …","The position of the least significant bit of a pixel’s …","The size of a pixel’s Green value, in number of bits.","Starts up and sets up AP cores based on system information …","Returns the visible height of the screen, in pixels.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the physical address of the primary framebuffer …","The position of the least significant bit of a pixel’s …","The size of a pixel’s Red value, in number of bits.","","Returns the total size in bytes of the VGA graphics memory.","","","","","","","Returns the visible width of the screen, in pixels."],"i":[0,0,8,8,8,1,1,1,8,1,8,1,1,1,1,1,8,1,0,1,1,0,1,8,1,1,1,1,1,1,8,1,8,1,8,1,1],"f":[0,0,0,0,0,[1,2],[1,2],[1,2],[[]],[[]],[[]],[[]],[1,3],[1,1],[[]],[[1,4],5],[[]],[[]],[[],[[6,[1]]]],[1,2],[1,2],[[7,8],[[11,[9,10]]]],[1,3],[[]],[[]],[1,9],[1,2],[1,2],[[]],[1,9],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[1,3]],"p":[[3,"GraphicInfo"],[15,"u8"],[15,"u16"],[3,"Formatter"],[6,"Result"],[4,"Option"],[6,"MmiRef"],[3,"MulticoreBringupInfo"],[15,"u32"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"multiple_heaps":{"doc":"An implementation of an allocator that uses multiple …","t":[3,17,11,11,11,11,11,11,5,11,5,11,11,11],"n":["MultipleHeaps","PER_CORE_HEAP_INITIAL_SIZE_PAGES","alloc","borrow","borrow_mut","dealloc","empty","from","init_individual_heap","into","switch_to_multiple_heaps","try_from","try_into","type_id"],"q":["multiple_heaps","","","","","","","","","","","","",""],"d":["An allocator that contains multiple heaps. The heap that …","Starting size of each per-core heap. ","Allocates the given <code>layout</code> from the heap of the core the …","","","Deallocates the memory at the address given by <code>ptr</code>. Memory …","","Returns the argument unchanged.","Initializes the heap given by <code>key</code>. There are 11 size …","Calls <code>U::from(self)</code>.","The setup routine for multiple heaps. It creates and …","","",""],"i":[0,0,1,1,1,1,1,1,0,1,0,1,1,1],"f":[0,0,[[1,2],3],[[]],[[]],[[1,3,2]],[[],1],[[]],[[4,1],[[6,[5]]]],[[]],[[],[[6,[5]]]],[[],6],[[],6],[[],7]],"p":[[3,"MultipleHeaps"],[3,"Layout"],[15,"u8"],[15,"usize"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"mutex_preemption":{"doc":"Offers preemption-safe <code>Mutex</code> and <code>RwLock</code> types that …","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MutexPreempt","MutexPreemptGuard","RwLockPreempt","RwLockPreemptReadGuard","RwLockPreemptWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref_mut","deref_mut","fmt","fmt","force_read_decrement","force_unlock","force_write_unlock","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","lock","lock","lock","lock_mut","lock_mut","new","new","read","reader_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock_mut","try_lock_mut","try_read","try_write","type_id","type_id","type_id","type_id","type_id","write","writer_count"],"q":["mutex_preemption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A mutual exclusion wrapper based on <code>spin::Mutex</code> that …","A guard that allows the locked data to be accessed, during …","A multi-reader, single-writer mutual exclusion wrapper …","A guard that allows the locked data to be immutably …","A guard that allows the locked data to be mutably accessed,","","","","","","","","","","","","","","","","","","","","Force decrement the reader count.","Force unlock the spinlock.","Force unlock exclusive write access.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","","","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this MutexPreempt, returning the underlying data.","","","Consumes this <code>RwLockPreempt</code>, returning the underlying data.","Returns <code>true</code> if the lock is currently held.","","","Returns <code>true</code> if the lock is currently held.","","Spins until the lock can be acquired, upon which …","","","","Creates a new lock wrapping the supplied data.","Creates a new lock wrapping the supplied data.","Locks this <code>RwLockPreempt</code> with shared read (immutable) …","Return the number of readers that currently hold the lock …","","","","","","","","","","","Tries to lock the MutexPreempt. If it is already locked, …","","","","","Attempt to acquire this lock with shared read (immutable) …","Attempt to acquire this lock with exclusive write …","","","","","","Lock this <code>RwLockPreempt</code> with exclusive write access, …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,3,5,4,6,7,3,5,4,6,7,3,4,5,6,7,5,7,3,4,4,3,4,3,5,4,6,7,3,3,4,4,3,5,4,6,7,3,3,4,4,3,3,4,4,3,3,4,3,4,3,4,4,4,3,5,4,6,7,3,5,4,6,7,3,3,4,3,4,4,4,3,5,4,6,7,4,4],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[[5,[1]]]],[[[6,[1]]]],[[[7,[1]]]],[[[5,[1]]]],[[[7,[1]]]],[[[3,[[0,[1,8]]]],9],10],[[[4,[[0,[1,8]]]],9],10],[[[4,[1]]]],[[[3,[1]]]],[[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]]]],[3],[4],[[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[3],[3],[4],[4],[[[3,[1]]],11],[3,11],[4,11],[[[4,[1]]],11],[3],[[[3,[1]]],[[5,[1]]]],[4],[3],[4],[[],3],[[],4],[[[4,[1]]],[[6,[1]]]],[[[4,[1]]],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[3,[1]]],[[14,[[5,[1]]]]]],[3,14],[4,14],[3,14],[4,14],[[[4,[1]]],[[14,[[6,[1]]]]]],[[[4,[1]]],[[14,[[7,[1]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[[4,[1]]],[[7,[1]]]],[[[4,[1]]],12]],"p":[[8,"Sized"],[8,"Default"],[3,"MutexPreempt"],[3,"RwLockPreempt"],[3,"MutexPreemptGuard"],[3,"RwLockPreemptReadGuard"],[3,"RwLockPreemptWriteGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"bool"],[15,"usize"],[4,"Result"],[4,"Option"],[3,"TypeId"]]},\
"mutex_sleep":{"doc":"Locking types that put a task to sleep while it waits for …","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MutexSleep","MutexSleepGuard","RwLockSleep","RwLockSleepReadGuard","RwLockSleepWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","deref","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","lock","lock","lock","lock_mut","lock_mut","new","new","read","reader_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock_mut","try_lock_mut","try_read","try_write","type_id","type_id","type_id","type_id","type_id","write","writer_count"],"q":["mutex_sleep","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A mutual exclusion wrapper that puts a <code>Task</code> to sleep while …","A guard that allows the locked data to be accessed, during …","A multi-reader, single-writer mutual exclusion wrapper …","A guard that allows the locked data to be immutably …","A guard that allows the locked data to be mutably accessed,","","","","","","","","","","","","","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","","","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>MutexSleep</code>, returning the underlying data.","","Consumes this <code>RwLockSleep</code>, returning the underlying data.","","","Returns <code>true</code> if the lock is currently held.","","Returns <code>true</code> if the lock is currently held.","","Blocks until the lock is acquired by putting this <code>Task</code> to …","","","","Creates a new lock wrapping the supplied data.","Creates a new lock wrapping the supplied data.","Locks this <code>RwLockSleep</code> with shared read (immutable) access.","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Tries to lock the MutexSleep. If it is already locked, it …","","","","Attempt to acquire this lock with shared read (immutable) …","Attempt to acquire this lock with exclusive write …","","","","","","Locks this <code>RwLockSleep</code> with exclusive write (mutable) …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,3,5,4,6,7,3,5,4,6,7,3,4,5,6,7,5,7,5,6,7,3,4,4,4,3,5,4,6,7,3,3,4,4,3,5,4,6,7,3,3,4,4,3,3,4,4,3,3,4,3,4,3,4,4,4,3,5,4,6,7,3,5,4,6,7,3,3,4,3,4,4,4,3,5,4,6,7,4,4],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[[5,[1]]]],[[[6,[1]]]],[[[7,[1]]]],[[[5,[1]]]],[[[7,[1]]]],[[[5,[1]]]],[[[6,[1]]]],[[[7,[1]]]],[[[3,[[0,[1,8]]]],9],10],[[[4,[[0,[1,8]]]],9],10],[[[4,[1]]]],[[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]]]],[3],[4],[[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[3],[3],[4],[4],[3,11],[[[3,[1]]],11],[4,11],[[[4,[1]]],11],[3],[[[3,[1]]],[[13,[[5,[1]],12]]]],[4],[3],[4],[[],3],[[],4],[[[4,[1]]],[[13,[[6,[1]],12]]]],[[[4,[1]]],14],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[3,15],[[[3,[1]]],[[15,[[5,[1]]]]]],[4,15],[3,15],[4,15],[[[4,[1]]],[[15,[[6,[1]]]]]],[[[4,[1]]],[[15,[[7,[1]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[[4,[1]]],[[13,[[7,[1]],12]]]],[[[4,[1]]],14]],"p":[[8,"Sized"],[8,"Default"],[3,"MutexSleep"],[3,"RwLockSleep"],[3,"MutexSleepGuard"],[3,"RwLockSleepReadGuard"],[3,"RwLockSleepWriteGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"bool"],[15,"str"],[4,"Result"],[15,"usize"],[4,"Option"],[3,"TypeId"]]},\
"nano_core":{"doc":"The aptly-named tiny crate containing the first OS code to …","t":[14],"n":["try_exit"],"q":["nano_core"],"d":["Just like Rust’s <code>try!()</code> macro, but instead of performing …"],"i":[0],"f":[0],"p":[]},\
"net":{"doc":"","t":[13,3,13,4,13,13,13,13,3,4,4,13,13,13,13,13,8,3,13,6,3,3,13,13,13,13,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,0,11,11,11,11,11,11,11,11,10,12,12,12,11,11,11,11,11,0,11,10,5,11,11,10,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,4,13,4,13,13,13,6,6,4,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,3,8,3,13,13,3,3,8,13,13,3,4,13,4,4,8,3,13,13,8,16,3,13,13,8,16,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,12,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,11,11,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,4,4,3,6,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,6,6,4,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,13,13,13,4,4,3,4,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,3,13,13,3,3,13,4,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,17,18,17,17,17,13,4,4,4,3,4,4,4,4,13,4,4,3,4,4,4,13,4,4,3,3,4,4,4,13,13,13,13,13,13,3,3,3,3,3,13,13,13,13,13,13,3,3,13,3,3,3,3,13,3,4,4,4,13,3,3,13,3,4,4,18,18,18,18,17,18,18,13,13,13,3,13,13,4,13,13,13,3,3,4,4,3,3,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,18,3,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,18,18,13,13,13,13,13,13,13,13,17,13,13,13,4,4,3,3,3,13,13,13,13,13,13,13,13,13,13,17,18,18,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,12,11,12,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11],"n":["Checksum","DeviceCapabilities","Dropped","Error","Exhausted","Finished","Fragmented","Illegal","Instant","IpAddress","IpCidr","Ipv4","Ipv4","Ipv6","Ipv6","Malformed","NetworkDevice","NetworkInterface","NotSupported","Result","Socket","SocketSet","Truncated","Unaddressable","Unknown","Unrecognized","ZERO","add","add","add_assign","add_socket","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","capabilities","capabilities","checksum","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_micros","from_micros_const","from_millis","from_millis_const","from_secs","get","get_default_interface","get_hash","get_interfaces","get_mut","hash","icmp","into","into","into","into","into","iter","iter_mut","lock","mac_address","max_burst_size","max_transmission_unit","medium","micros","millis","new","partial_cmp","partial_cmp","phy","poll","receive","register_device","remove","secs","send","sub","sub","sub_assign","tcp","to_owned","to_owned","to_string","to_string","total_micros","total_millis","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","udp","vzip","vzip","vzip","vzip","vzip","wire","BindError","BufferFull","Endpoint","Exhausted","Ident","InvalidState","PacketBuffer","PacketMetadata","RecvError","SendError","Socket","Udp","Unaddressable","Unaddressable","Unspecified","bind","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","downcast","downcast_mut","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hop_limit","into","into","into","into","into","is_open","is_specified","new","packet_recv_capacity","packet_send_capacity","partial_cmp","payload_recv_capacity","payload_send_capacity","recv","recv_slice","send","send_slice","send_with","set_hop_limit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","vzip","vzip","vzip","vzip","vzip","Both","Both","Checksum","ChecksumCapabilities","Device","DeviceCapabilities","Ethernet","Ethernet","FaultInjector","FuzzInjector","Fuzzer","Ieee802154WithFcs","Ip","Loopback","Medium","None","PcapLinkType","PcapMode","PcapSink","PcapWriter","Rx","RxOnly","RxToken","RxToken","Tracer","Tx","TxOnly","TxToken","TxToken","Unknown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket_interval","capabilities","capabilities","capabilities","capabilities","capabilities","capabilities","checksum","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume","consume","corrupt_chance","default","default","default","default","drop_chance","eq","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","fuzz_packet","get_mut","get_mut","get_ref","get_ref","global_header","icmpv4","icmpv6","ignored","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","ip_mtu","ipv4","max_burst_size","max_packet_size","max_rx_rate","max_transmission_unit","max_tx_rate","medium","new","new","new","new","new","packet","packet_header","partial_cmp","receive","receive","receive","receive","receive","receive","rx","set_bucket_interval","set_corrupt_chance","set_drop_chance","set_max_packet_size","set_max_rx_rate","set_max_tx_rate","tcp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transmit","transmit","transmit","transmit","transmit","transmit","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udp","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_u16","write_u32","CloseWait","Closed","Closing","ConnectError","Established","FinWait1","FinWait2","Finished","InvalidState","InvalidState","InvalidState","InvalidState","LastAck","Listen","ListenError","RecvError","SendError","Socket","SocketBuffer","State","SynReceived","SynSent","TimeWait","Unaddressable","Unaddressable","abort","ack_delay","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","connect","downcast","downcast_mut","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hop_limit","into","into","into","into","into","into","is_active","is_listening","is_open","keep_alive","listen","local_endpoint","may_recv","may_send","nagle_enabled","new","peek","peek_slice","recv","recv_capacity","recv_queue","recv_slice","remote_endpoint","send","send_capacity","send_queue","send_slice","set_ack_delay","set_hop_limit","set_keep_alive","set_nagle_enabled","set_timeout","state","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","vzip","vzip","vzip","vzip","vzip","vzip","write_str","BindError","BufferFull","Exhausted","InvalidState","PacketBuffer","PacketMetadata","RecvError","SendError","Socket","Unaddressable","Unaddressable","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","clone","clone","clone","clone_into","clone_into","clone_into","close","downcast","downcast_mut","endpoint","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","hop_limit","into","into","into","into","is_open","new","packet_recv_capacity","packet_send_capacity","payload_recv_capacity","payload_send_capacity","peek","peek_slice","recv","recv_slice","send","send_slice","send_with","set_hop_limit","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","vzip","vzip","vzip","vzip","ADDRCONF","AddrUnreachable","AdminProhibit","Arp","ArpHardware","ArpOperation","ArpPacket","ArpRepr","AtPointer","BROADCAST","BROADCAST","BadLength","BeyondScope","CommProhibited","Discard","DiscardSendAll","DiscardSendUnicast","DstHostUnknown","DstNetUnknown","DstUnreachable","DstUnreachable","DstUnreachable","DstUnreachable","ETHERNET_HEADER_LEN","EchoReply","EchoReply","EchoReply","EchoReply","EchoRequest","EchoRequest","EchoRequest","EchoRequest","EndOfList","ErroneousHdrField","Error","Ethernet","Ethernet","EthernetAddress","EthernetFrame","EthernetIpv4","EthernetProtocol","EthernetRepr","Experiment1","Experiment2","FailedPolicy","Fin","FragExpired","FragReassemExceeded","FragRequired","HardwareAddress","HopByHop","HopLimitExceeded","Host","HostPrecedViol","HostProhibited","HostToS","HostUnreachToS","HostUnreachable","IPV4_HEADER_LEN","IPV4_MAPPED_PREFIX","IPV4_MIN_MTU","IPV6_HEADER_LEN","IPV6_MIN_MTU","Icmp","IcmpRepr","Icmpv4DstUnreachable","Icmpv4Message","Icmpv4Packet","Icmpv4ParamProblem","Icmpv4Redirect","Icmpv4Repr","Icmpv4TimeExceeded","Icmpv6","Icmpv6DstUnreachable","Icmpv6Message","Icmpv6Packet","Icmpv6ParamProblem","Icmpv6Repr","Icmpv6TimeExceeded","Igmp","IpAddress","IpCidr","IpEndpoint","IpListenEndpoint","IpProtocol","IpRepr","IpVersion","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4Address","Ipv4Cidr","Ipv4FragKey","Ipv4Packet","Ipv4Repr","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6Address","Ipv6Cidr","Ipv6Frag","Ipv6FragmentHeader","Ipv6FragmentRepr","Ipv6HopByHopHeader","Ipv6HopByHopRepr","Ipv6NoNxt","Ipv6Option","Ipv6OptionFailureType","Ipv6OptionRepr","Ipv6OptionType","Ipv6Opts","Ipv6Packet","Ipv6Repr","Ipv6Route","Ipv6RoutingHeader","Ipv6RoutingRepr","Ipv6RoutingType","LINK_LOCAL_ALL_NODES","LINK_LOCAL_ALL_ROUTERS","LOOPBACK","MANAGED","MAX_HARDWARE_ADDRESS_LEN","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","MaxSegmentSize","MissingOption","Mld","MldAddressRecord","MldQuery","MldReport","MldRepr","Mtu","Mtu","Ndisc","NdiscNeighborFlags","NdiscOption","NdiscOptionRepr","NdiscOptionType","NdiscPrefixInfoFlags","NdiscPrefixInformation","NdiscRedirectedHeader","NdiscRepr","NdiscRouterFlags","NeighborAdvert","NeighborAdvert","NeighborSolicit","NeighborSolicit","Net","NetProhibited","NetToS","NetUnreachToS","NetUnreachable","Nimrod","NoOperation","NoRoute","None","ON_LINK","OTHER","OVERRIDE","Pad1","Pad1","PadN","PadN","ParamProblem","ParamProblem","ParamProblem","PktTooBig","PktTooBig","PortUnreachable","PortUnreachable","PrecedCutoff","PrefixInformation","PrefixInformation","PrettyPrinter","ProtoUnreachable","Psh","Query","ROUTER","RawHardwareAddress","Redirect","Redirect","Redirect","RedirectedHeader","RedirectedHeader","RejectRoute","Reply","Report","Request","Reserved","Result","RouterAdvert","RouterAdvert","RouterAdvert","RouterSolicit","RouterSolicit","RouterSolicit","Rpl","Rpl","Rst","SOLICITED","SOLICITED_NODE_PREFIX","SackPermitted","SackRange","Skip","SourceLinkLayerAddr","SourceLinkLayerAddr","SrcHostIsolated","SrcRouteFailed","Syn","TCP_HEADER_LEN","TargetLinkLayerAddr","TargetLinkLayerAddr","Tcp","TcpControl","TcpOption","TcpPacket","TcpRepr","TcpSeqNumber","TimeExceeded","TimeExceeded","TimeExceeded","TimeExceeded","Timestamp","TimestampReply","TtlExpired","Type0","Type2","Type2","UDP_HEADER_LEN","UNSPECIFIED","UNSPECIFIED","Udp","UdpPacket","UdpRepr","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","UnrecognizedNxtHdr","UnrecognizedOption","WindowScale","ack","ack_number","ack_number","add","add_assign","addr","addr","address","address","address","addresses","all","all","all","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_ipv4","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","aux_data_len","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","checksum","checksum","checksum","checksum","checksum","clear_flags","clear_flags","clear_prefix_reserved","clear_redirected_reserved","clear_reserved","clear_reserved","clear_reserved","clear_s_flag","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmpr_e","cmpr_i","complement","complement","complement","contains","contains","contains","contains_addr","contains_addr","contains_addr","contains_subnet","contains_subnet","contains_subnet","control","current_hop_limit","cwr","data","data","data","data","data_len","data_len","data_mut","data_mut","data_mut","default","default","default","default","default","default","default","dest_addr","difference","difference","difference","dont_frag","dscp","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_port","dst_port","dst_port","dst_port","ece","echo_ident","echo_ident","echo_seq_no","echo_seq_no","ecn","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ethertype","ethertype","extend","extend","extend","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fin","flags","flow_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frag_offset","frag_offset","frag_offset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bytes","from_bytes","from_bytes","from_bytes","from_iter","from_iter","from_iter","from_netmask","from_parts","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_key","hardware_len","hardware_type","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","home_address","hop_limit","hop_limit","hop_limit","hop_limit","hop_limit","ident","ident","ident","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_address","into_address","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_all","is_all","is_all","is_broadcast","is_broadcast","is_broadcast","is_broadcast","is_empty","is_empty","is_empty","is_empty","is_empty","is_error","is_ipv4_mapped","is_link_local","is_link_local","is_local","is_loopback","is_loopback","is_mld","is_multicast","is_multicast","is_multicast","is_multicast","is_ndisc","is_specified","is_unicast","is_unicast","is_unicast","is_unicast","is_unicast","is_unspecified","is_unspecified","is_unspecified","len","len","len","length","link_layer_addr","max_resp_code","max_seg_size","mcast_addr","mcast_addr","measure_with","measure_with","measure_with","measure_with","measure_with","measure_with","measure_with","measure_with","more_frags","more_frags","more_frags","msg_code","msg_code","msg_type","msg_type","mtu","neighbor_flags","netmask","network","new","new","new","new","new","new","new","new","new","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","next_header","next_header","next_header","next_header","next_header","next_header","next_header","next_header","next_header","next_header","not","not","not","nr_mcast_addr_rcrds","ns","num_srcs","num_srcs","of_packet","operation","option_type","option_type","options","options","options","options","options_mut","options_mut","pad","param_problem_ptr","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","payload","payload","payload","payload","payload","payload","payload_len","payload_len","payload_len","payload_len","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","pkt_too_big_mtu","port","port","preferred_lifetime","preferred_lifetime","prefix","prefix","prefix_flags","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","print","protocol_len","protocol_type","psh","qqic","qrv","quash_psh","reachable_time","record_type","remove","remove","remove","retrans_time","router_flags","router_lifetime","routing_type","rst","s_flag","sack_permitted","sack_ranges","segment_len","segment_len","segments_left","selective_ack_permitted","selective_ack_ranges","seq_number","seq_number","set","set","set","set_ack","set_ack_number","set_addresses","set_aux_data_len","set_checksum","set_checksum","set_checksum","set_checksum","set_checksum","set_cmpr_e","set_cmpr_i","set_current_hop_limit","set_cwr","set_data_len","set_data_len","set_dest_addr","set_dont_frag","set_dscp","set_dst_addr","set_dst_addr","set_dst_addr","set_dst_port","set_dst_port","set_ece","set_echo_ident","set_echo_ident","set_echo_seq_no","set_echo_seq_no","set_ecn","set_ethertype","set_fin","set_flow_label","set_frag_offset","set_frag_offset","set_hardware_len","set_hardware_type","set_header_len","set_header_len","set_header_len","set_header_len","set_home_address","set_hop_limit","set_hop_limit","set_ident","set_ident","set_len","set_link_layer_addr","set_max_resp_code","set_mcast_addr","set_mcast_addr","set_more_frags","set_more_frags","set_msg_code","set_msg_code","set_msg_type","set_msg_type","set_mtu","set_neighbor_flags","set_next_header","set_next_header","set_next_header","set_next_header","set_next_header","set_nr_mcast_addr_rcrds","set_ns","set_num_srcs","set_num_srcs","set_operation","set_option_type","set_option_type","set_pad","set_param_problem_ptr","set_payload_len","set_payload_len","set_pkt_too_big_mtu","set_preferred_lifetime","set_prefix","set_prefix_flags","set_prefix_len","set_protocol_len","set_protocol_type","set_psh","set_qqic","set_qrv","set_reachable_time","set_record_type","set_retrans_time","set_router_flags","set_router_lifetime","set_routing_type","set_rst","set_s_flag","set_segments_left","set_seq_number","set_source_hardware_addr","set_source_protocol_addr","set_src_addr","set_src_addr","set_src_addr","set_src_port","set_src_port","set_syn","set_target_addr","set_target_hardware_addr","set_target_protocol_addr","set_total_len","set_traffic_class","set_urg","set_urgent_at","set_valid_lifetime","set_version","set_version","set_window_len","solicited_node","source_hardware_addr","source_protocol_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_port","src_port","src_port","src_port","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","syn","target_addr","target_hardware_addr","target_protocol_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","total_len","total_len","traffic_class","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","urg","urgent_at","v4","v6","valid_lifetime","valid_lifetime","verify_checksum","verify_checksum","verify_checksum","verify_checksum","verify_checksum","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window_len","window_len","window_scale","write_parts","operation","source_hardware_addr","source_protocol_addr","target_hardware_addr","target_protocol_addr","data","data","data","data","header","header","ident","ident","reason","reason","seq_no","seq_no","data","data","data","data","data","data","header","header","header","header","ident","ident","mtu","pointer","reason","reason","reason","seq_no","seq_no","data","length","type_","addresses","cmpr_e","cmpr_i","home_address","length","length","next_header","next_header","pad","segments_left","segments_left","data","data","max_resp_code","mcast_addr","nr_mcast_addr_rcrds","num_srcs","qqic","qrv","s_flag","data","length","type_","dest_addr","flags","flags","hop_limit","lladdr","lladdr","lladdr","lladdr","lladdr","mtu","prefix_info","reachable_time","redirected_hdr","retrans_time","router_lifetime","target_addr","target_addr","target_addr","data","kind","PrettyIndent","PrettyPrint","PrettyPrinter","borrow","borrow_mut","fmt","fmt","from","increase","into","new","pretty_print","to_string","try_from","try_into","type_id","vzip"],"q":["net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","net::icmp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","net::phynet::tcp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","net::udp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","net::wirenet::wire::ArpRepr","","","","","net::wire::Icmpv4Repr","","","","","","","","","","","","net::wire::Icmpv6Repr","","","","","","","","","","","","","","","","","","","net::wire::Ipv6OptionRepr","","","net::wire::Ipv6RoutingRepr","","","","","","","","","","","net::wire::MldRepr","","","","","","","","","net::wire::NdiscOptionRepr","","","net::wire::NdiscRepr","","","","","","","","","","","","","","","","","","net::wire::TcpOption","","net::wire::pretty_print","","","","","","","","","","","","","","","",""],"d":["","A description of device capabilities.","","","","","","","A representation of an absolute time value.","An internetworking address.","A specification of a CIDR block, containing an address and …","An IPv4 address.","","An IPv6 address.","","","A network device.","A network interface.","","","A network socket.","An extensible set of sockets.","","","","","","Add a socket to the set, and return its handle.","","","Adds a socket to the interface.","","","","","","","","","","","Returns the device capabilities.","Returns the device capabilities.","","Checksum behavior.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Instant</code> from a number of microseconds.","","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of seconds.","Get a socket from the set by its handle, as mutable.","Gets the first available interface.","","Returns a list of available interfaces behind a mutex.","Get a mutable socket from the set by its handle, as …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get an iterator to the inner sockets.","Get a mutable iterator to the inner sockets.","","Returns the MAC address.","Maximum burst size, in terms of MTU.","Maximum transmission unit.","Medium of the device.","The fractional number of microseconds that have passed …","The fractional number of milliseconds that have passed …","Create a socket set using the provided storage.","","","Access to networking hardware.","Polls the sockets associated with the interface.","","Registers a network device.","Remove a socket from the set, without changing its state.","The number of whole seconds that have passed since the …","","","","","","","","","","The total number of milliseconds that have passed since …","The total number of milliseconds that have passed since …","","","","","","","","","","","","","","","","","","","","","","Low-level packet access and construction.","Error returned by <code>Socket::bind</code>","","Type of endpoint to bind the ICMP socket to. See …","","","","An ICMP packet ring buffer.","An ICMP packet metadata.","Error returned by <code>Socket::recv</code>","Error returned by <code>Socket::send</code>","A ICMP socket","","","","","Bind the socket to the given endpoint.","","","","","","","","","","","Check whether the receive buffer is not empty.","Check whether the transmit buffer is full.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the time-to-live (IPv4) or hop limit (IPv6) value …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the socket is open.","","Create an ICMP socket with the given buffers.","Return the maximum number packets the socket can receive.","Return the maximum number packets the socket can transmit.","","Return the maximum number of bytes inside the recv buffer.","Return the maximum number of bytes inside the transmit …","Dequeue a packet received from a remote endpoint, and …","Dequeue a packet received from a remote endpoint, copy the …","Enqueue a packet to be sent to a given remote address, and …","Enqueue a packet to be sent to a given remote address, and …","Enqueue a packet to be send to a given remote address and …","Set the time-to-live (IPv4) or hop limit (IPv6) value used …","","","","","","","","","","","","","","","","","","","","","","","","","","Capture both received and transmitted packets.","Verify checksum when receiving and compute checksum when …","A description of checksum behavior for a particular …","A description of checksum behavior for every supported …","An interface for sending and receiving raw network frames.","A description of device capabilities.","Ethernet frames","Ethernet medium. Devices of this type send and receive …","A fault injector device.","A fuzz injector device.","Represents a fuzzer. It is expected to replace bytes in …","IEEE 802.15.4 packets with FCS included.","IPv4 or IPv6 packets (depending on the version field)","A loopback device.","Type of medium of a device.","Ignore checksum completely.","Captured packet header type.","Packet capture mode.","A packet capture sink.","A packet capture writer device.","Verify checksum when receiving.","Capture only received packets.","A token to receive a single network packet.","","A tracer device.","Compute checksum before sending.","Capture only transmitted packets.","A token to transmit a single network packet.","","","","","","","","","","","","","","","","","","","","","","","","","Return the interval for packet rate limiting, in …","Get a description of device capabilities.","","","","","","Checksum behavior.","","","","","","","","","","","","","","Consumes the token to receive a single network packet.","Consumes the token to send a single network packet.","Return the probability of corrupting a packet, in percents.","","","","","Return the probability of dropping a packet, in percents.","","","","Flush data written into the sync.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Modify a single packet with fuzzed data.","Get a mutable reference to the underlying device.","Get a mutable reference to the underlying device.","Get a reference to the underlying device.","Get a reference to the underlying device.","Write the libpcap global header into the sink.","","","Checksum behavior that results in not computing or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the underlying device, consuming the tracer.","Return the underlying device, consuming the fault injector.","Return the underlying device, consuming the fuzz injector.","","","Maximum burst size, in terms of MTU.","Return the maximum packet size, in octets.","Return the maximum packet reception rate, in packets per …","Maximum transmission unit.","Return the maximum packet transmission rate, in packets …","Medium of the device.","Create a tracer device.","Create a fault injector device, using the given random …","Create a fuzz injector device.","Creates a loopback device.","Creates a packet capture writer.","Write the libpcap packet header followed by packet data …","Write the libpcap packet header into the sink.","","Construct a token pair consisting of one receive token and …","","","","","","Returns whether checksum should be verified when receiving.","Set the interval for packet rate limiting, in milliseconds.","Set the probability of corrupting a packet, in percents.","Set the probability of dropping a packet, in percents.","Set the maximum packet size, in octets.","Set the maximum packet reception rate, in packets per …","Set the maximum packet transmission rate, in packets per …","","","","","","","","Construct a transmit token.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether checksum should be verified when sending.","","","","","","","","","","","","","","","","","","","","","","","","Write data into the sink.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","","","","Error returned by <code>Socket::connect</code>","","","","","","","","","","","Error returned by <code>Socket::listen</code>","Error returned by <code>Socket::recv</code>","Error returned by <code>Socket::send</code>","A Transmission Control Protocol socket.","A TCP socket ring buffer.","The state of a TCP socket, according to RFC 793.","","","","","","Aborts the connection, if any.","Return the ACK delay duration.","","","","","","","","","","","","","Check whether the receive half of the full-duplex …","Check whether the transmit half of the full-duplex …","","","","","","","","","","","Close the transmit half of the full-duplex connection.","Connect to a given endpoint.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the time-to-live (IPv4) or hop limit (IPv6) value …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether a connection is active.","Return whether the socket is passively listening for …","Return whether the socket is open.","Return the keep-alive interval.","Start listening on the given endpoint.","Return the local endpoint, or None if not connected.","Return whether the receive half of the full-duplex …","Return whether the transmit half of the full-duplex …","Return whether Nagle’s Algorithm is enabled.","Create a socket using the given buffers.","Peek at a sequence of received octets without removing …","Peek at a sequence of received octets without removing …","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the recv buffer.","Return the amount of octets queued in the receive buffer. …","Dequeue a sequence of received octets, and fill a slice …","Return the remote endpoint, or None if not connected.","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the transmit …","Return the amount of octets queued in the transmit buffer.","Enqueue a sequence of octets to be sent, and fill it from …","Set the ACK delay duration.","Set the time-to-live (IPv4) or hop limit (IPv6) value used …","Set the keep-alive interval.","Enable or disable Nagle’s Algorithm.","Set the timeout duration.","Return the connection state, in terms of the TCP state …","Return the timeout duration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error returned by <code>Socket::bind</code>","","","","A UDP packet ring buffer.","A UDP packet metadata.","Error returned by <code>Socket::recv</code>","Error returned by <code>Socket::send</code>","A User Datagram Protocol socket.","","","Bind the socket to the given endpoint.","","","","","","","","","Check whether the receive buffer is not empty.","Check whether the transmit buffer is full.","","","","","","","Close the socket.","","","Return the bound endpoint.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the time-to-live (IPv4) or hop limit (IPv6) value …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the socket is open.","Create an UDP socket with the given buffers.","Return the maximum number packets the socket can receive.","Return the maximum number packets the socket can transmit.","Return the maximum number of bytes inside the recv buffer.","Return the maximum number of bytes inside the transmit …","Peek at a packet received from a remote endpoint, and …","Peek at a packet received from a remote endpoint, copy the …","Dequeue a packet received from a remote endpoint, and …","Dequeue a packet received from a remote endpoint, copy the …","Enqueue a packet to be sent to a given remote endpoint, …","Enqueue a packet to be sent to a given remote endpoint, …","Enqueue a packet to be send to a given remote endpoint and …","Set the time-to-live (IPv4) or hop limit (IPv6) value used …","","","","","","","","","","","","","","","","","","","","","","Address unreachable.","Communication with destination administratively prohibited.","","ARP hardware type.","ARP operation type.","A read/write wrapper around an Address Resolution Protocol …","A high-level representation of an Address Resolution …","Pointer indicates the error","The broadcast address.","The broadcast address.","Bad length","Beyond scope of source address.","Communication administratively prohibited","Discard the containing packet","Discard the containing packet and notify the sender","Discard the containing packet and only notify the sender …","Destination host unknown","Destination network unknown","Destination unreachable","","Destination Unreachable.","","The Ethernet header length","Echo reply","","Echo Reply","","Echo request","","Echo Request","","","Erroneous header field encountered.","Parsing a packet failed.","","","A six-octet Ethernet II address.","A read/write wrapper around an Ethernet II frame buffer.","An Ethernet and IPv4 Address Resolution Protocol packet.","Ethernet protocol type.","A high-level representation of an Internet Protocol …","RFC3692-style Experiment 1","RFC3692-style Experiment 2","Source address failed ingress/egress policy.","","Fragment reassembly time exceeded","Fragment reassembly time exceeded.","Fragmentation required, and DF flag set","Representation of an hardware address, such as an Ethernet …","","Hop limit exceeded in transit.","Redirect Datagram for the Host","Host precedence violation","Host administratively prohibited","Redirect Datagram for the ToS &amp; host","Host unreachable for ToS","Destination host unreachable","","The prefix used in IPv4-mapped addresses.","Minimum MTU required of all links supporting IPv4. See RFC …","Length of an IPv6 header.","Minimum MTU required of all links supporting IPv6. See RFC …","","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for type “…","Internet protocol control message subtype for type “…","A high-level representation of an Internet Control Message …","Internet protocol control message subtype for type “Time …","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for the type “…","A high-level representation of an Internet Control Message …","Internet protocol control message subtype for the type “…","","An internetworking address.","A specification of a CIDR block, containing an address and …","An internet endpoint address.","An internet endpoint address for listening.","IP datagram encapsulated protocol.","An IP packet representation.","Internet protocol version.","","","","An IPv4 address.","","","A four-octet IPv4 address.","A specification of an IPv4 CIDR block, containing an …","","A read/write wrapper around an Internet Protocol version 4 …","A high-level representation of an Internet Protocol …","","","","An IPv6 address.","","","A sixteen-octet IPv6 address.","A specification of an IPv6 CIDR block, containing an …","","A read/write wrapper around an IPv6 Fragment Header.","A high-level representation of an IPv6 Fragment header.","A read/write wrapper around an IPv6 Hop-by-Hop Options …","A high-level representation of an IPv6 Hop-by-Hop Options …","","A read/write wrapper around an IPv6 Extension Header …","Action required when parsing the given IPv6 Extension …","A high-level representation of an IPv6 Extension Header …","IPv6 Extension Header Option Type","","A read/write wrapper around an Internet Protocol version 6 …","A high-level representation of an Internet Protocol …","","A read/write wrapper around an IPv6 Routing Header buffer.","A high-level representation of an IPv6 Routing Header.","IPv6 Extension Routing Header Routing Type","The link-local all nodes multicast address.","The link-local all routers multicast address.","The loopback address.","","","All multicast-capable routers","All multicast-capable nodes","","Missing a required option","","A read/write wrapper around an MLDv2 Listener Report …","Multicast Listener Query","Multicast Listener Report","A high-level representation of an MLDv2 packet header.","MTU","","","","A read/write wrapper around an NDISC Option.","A high-level representation of an NDISC Option.","NDISC Option Type","","","","A high-level representation of an Neighbor Discovery …","","Neighbor Advertisement","","Neighbor Solicitation","","Redirect Datagram for the Network","Network administratively prohibited","Redirect Datagram for the ToS &amp; network","Network unreachable for ToS","Destination network unreachable","Nimrod (DEPRECATED 2009-05-06)","","No Route to destination.","","","","","1 byte of padding","","Multiple bytes of padding","","Parameter problem","Parameter Problem.","","Packet Too Big.","","Destination port unreachable","Port unreachable.","Precedence cutoff in effect","Prefix Information","","Wrapper for using a <code>PrettyPrint</code> where a <code>Display</code> is …","Destination protocol unreachable","","","","Unparsed hardware address.","Message redirect","Redirect","","Redirected Header","","Reject route to destination.","","","","Reserved for future use","","Router advertisement","Router Advertisement","","Router solicitation","Router Solicitation","","RPL Source Routing Header","","","","The solicited node prefix.","","","Skip this option and continue processing the packet","Source Link-layer Address","","Source host isolated","Source route failed","","","Target Link-layer Address","","","The possible control flags of a Transmission Control …","A representation of a single TCP option.","A read/write wrapper around a Transmission Control …","A high-level representation of a Transmission Control …","A TCP sequence number.","Time exceeded","","Time Exceeded.","","Timestamp","Timestamp reply","TTL expired in transit","Source Route (DEPRECATED)","Type 2 Routing Header for Mobile IPv6","","","An unspecified address.","The unspecified address.","","A read/write wrapper around an User Datagram Protocol …","A high-level representation of an User Datagram Protocol …","","","","","","","","","","","","","","","","","","","","","Unrecognized Next Header type encountered.","Unrecognized IPv6 option encountered.","","Return the ACK flag.","Return the acknowledgement number field.","","","","","","Return the IP address of this CIDR block.","Return the address of this IPv4 CIDR block.","Return the address of this IPv6 CIDR block.","Return the address vector in bytes","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Return an Ethernet address as a sequence of octets, in …","Return an address as a sequence of octets, in big-endian.","Return an IPv4 address as a sequence of octets, in …","Return an IPv6 address as a sequence of octets, in …","","","Convert an IPv4 mapped IPv6 address to an IPv4 address.","","","","","","","","","Return the length of the auxiliary data.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the broadcast address of this IPv4 CIDR.","Return the length of a packet that will be emitted from …","Return the length of a buffer required to hold a packet …","Return the length of a header that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","Return the total length of a packet that will be emitted …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length, in bytes, of a header that will be …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length of a packet that will be emitted from …","","Return the length of a header that will be emitted from …","","Return the length of a packet that will be emitted from …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Return the checksum field.","Return the checksum field.","Return the header checksum field.","Return the checksum field.","Return the checksum field.","Clear the entire flags field.","Clear the entire flags field.","Clear the reserved bits.","Clear the reserved bits.","Clear any reserved fields in the message header.","Set reserved fields.","Initialize reserved fields to 0.","Clear the Suppress Router-Side Processing flag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of prefix octets elided from the last …","Return the number of prefix octets elided from addresses[…","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPv6 CIDR …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPV6 CIDR …","","Return the current hop limit field.","Return the CWR flag.","Return a pointer to the type-specific data.","Return the option data.","Return the option data.","","Return the length of the data.","Return the length of the data.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the option data.","Return a mutable pointer to the option data.","","","","","","","","Return the destination address field.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Return the “don’t fragment” flag.","Return the Differential Services Code Point field.","Return the destination address field.","Return the destination address.","Return the destination address field.","Return the destination address field.","","","IPv6 address of the destination node.","Return the destination port field.","Return the destination port field.","","","Return the ECE flag.","Return the identifier field (for echo request and reply …","Return the identifier field (for echo request and reply …","Return the sequence number field (for echo request and …","Return the sequence number field (for echo request and …","Return the Explicit Congestion Notification field.","Emit a high-level representation into an Address …","Emit a high-level representation into an Ethernet II frame.","Emit a high-level representation into an Internet Control …","Emit a high-level representation into an Internet Control …","Emit this high-level representation into a buffer.","Emit a high-level representation into an Internet Protocol …","Emit a high-level representation into an Internet Protocol …","Emit a high-level representation into an IPv6 Fragment …","Emit a high-level representation into an IPv6 Hop-by-Hop …","Emit a high-level representation into an IPv6 Extension …","Emit a high-level representation into an IPv6 Routing …","Emit a high-level representation into an MLDv2 packet.","","Emit a high-level representation into an NDISC Option.","","Emit a high-level representation into a Transmission …","Emit a high-level representation into an User Datagram …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the EtherType field, without checking for 802.1Q.","","","","","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Return the FIN flag.","","Return the flow label field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the fragment offset, in octets.","Return the fragment offset field.","The offset of the data following this header, relative to …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Construct an Ethernet address from a sequence of octets, …","Construct an IPv4 address from a sequence of octets, in …","Construct an IPv6 address from a sequence of octets, in …","","","","","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from a sequence of words, in …","Parse a string representation of an Ethernet address.","Parse a string representation of an IP address.","Parse a string representation of an IP CIDR.","","Parse a string representation of an IPv4 address.","Parse a string representation of an IPv4 CIDR.","Parse a string representation of an IPv6 address.","Parse a string representation of an IPv6 CIDR.","","","","","","","","","","","","","","Returns the key for identifying the packet.","Return the hardware length field.","Return the hardware type field.","","","","","","","","","","","","","","","Return the length of a frame header.","Return the header length. The result depends on the value …","Return the header length. The result depends on the value …","Return the length of a header that will be emitted from …","Return the header length, in octets.","Return the header length.","Return length of the Hop-by-Hop Options header in 8-octet …","Return the header length field. Length of the Routing …","Return the header length, in octets.","Return the length of a header that will be emitted from …","Return the length of the packet header that will be …","Return the IPv6 Home Address","Return the TTL value.","Return the time to live field.","Return the hop limit field.","","The 8-bit hop limit field.","Return the fragment identification field.","Return the fragment identification value field.","The identification for every packet that is fragmented.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to an <code>IpAddress</code>.","Convert to an <code>IpAddress</code>.","Consume the packet, returning the underlying buffer.","Consumes the frame, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the ipv6 option, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the NDISC option, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Query whether this address is the broadcast address.","Query whether the address is the broadcast address.","Query whether the address is the broadcast address.","Query wether the address is a broadcast address.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return whether the segment has no flags set (except PSH) …","","Per RFC 4443 § 2.1 ICMPv6 message types with the highest …","Query whether the IPv6 address is an IPv4 mapped IPv6 …","Query whether the address falls into the “link-local” …","Query whether the IPv6 address is in the link-local scope.","Query whether the “locally administered” bit in the …","Query whether the address falls into the “loopback” …","Query whether the IPv6 address is the loopback address.","Return a boolean value indicating if the given message type","Query whether the “multicast” bit in the OUI is set.","Query whether the address is a valid multicast address.","Query whether the address is a multicast address.","Query whether the IPv6 address is a multicast address.","Return a boolean value indicating if the given message type","Query whether the endpoint has a specified address and …","Query whether the address is an unicast address.","Query whether the address is a valid unicast address.","Query whether the address is an unicast address.","Query whether the IPv6 address is an unicast address.","Query wether the address is an unicast address.","Query whether the address falls into the “unspecified” …","Query whether the address falls into the “unspecified” …","Query whether the IPv6 address is the unspecified address.","Return the length of a control flag, in terms of sequence …","Return the length field.","","Length of the Hop-by-Hop Options header in 8-octet units, …","Return the Source/Target Link-layer Address.","Return the maximum response code field.","","Return the address being queried.","Return the multicast address field.","","","","","","","","","Return the “more fragments” flag.","Return more fragment flag field.","When there are more fragments following this header","Return the message code field.","Return the message code field.","Return the message type field.","Return the message type field.","Return the MTU value.","Return the Neighbor Solicitation flags.","Return the network mask of this IPv4 CIDR.","Return the network block of this IPv4 CIDR.","Format the listing with the recorded parameters when …","Create a CIDR block from the given address and prefix …","Create an endpoint address from given address and port.","Create a new IpRepr, choosing the right IP version for the …","Construct an IPv4 address from parts.","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from parts.","Create an IPv6 CIDR block from the given address and …","Create a raw octet buffer with an IPv6 Routing Header …","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Imbue a raw octet buffer with ARP packet structure.","Imbue a raw octet buffer with Ethernet frame structure.","Imbue a raw octet buffer with ICMPv4 packet structure.","Imbue a raw octet buffer with ICMPv6 packet structure.","Imbue a raw octet buffer with IPv4 packet structure.","Create a raw octet buffer with an IPv6 packet structure.","Create a raw octet buffer with an IPv6 Fragment Header …","Create a raw octet buffer with an IPv6 Hop-by-Hop Options …","Create a raw octet buffer with an IPv6 Extension Header …","Imbue a raw octet buffer with a Address Record structure.","Create a raw octet buffer with an NDISC Option structure.","Imbue a raw octet buffer with TCP packet structure.","Imbue a raw octet buffer with UDP packet structure.","Return the next header (protocol).","Return the next_header (protocol) field.","Return the next header field.","Return the next header field.","Return the next header field.","Return the next header field.","","Protocol contained in the next header.","The type of header immediately following the Fragment …","The type of header immediately following the Hop-by-Hop …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number of Multicast Address Records.","Return the NS flag.","Return number of sources.","Return the number of sources field.","Return the version of an IP packet stored in the provided …","Return the operation field.","Return the option type.","Return the option type.","Return the option data.","Return an <code>Iterator</code> for the contained options.","Return a pointer to the options.","The options contained in the Hop-by-Hop Options header.","Return a mutable pointer to the option data.","Return a pointer to the options.","Return the number of octets used for padding after …","Return the pointer field (for parameter problem messages).","Parse an Address Resolution Protocol packet and return a …","Parse an Ethernet II frame and return a high-level …","Parse an Internet Control Message Protocol version 4 …","Parse an Internet Control Message Protocol version 6 …","Parse an Internet Protocol version 4 packet and return a …","Parse an Internet Protocol version 6 packet and return a …","Parse an IPv6 Fragment Header and return a high-level …","Parse an IPv6 Hop-by-Hop Options Header and return a …","Parse an IPv6 Extension Header Option and return a …","Parse an IPv6 Routing Header and return a high-level …","Parse an MLDv2 packet and return a high-level …","Parse an NDISC packet and return a high-level …","Parse an NDISC Option and return a high-level …","","Parse a Transmission Control Protocol packet and return a …","Parse an User Datagram Protocol packet and return a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a pointer to the payload, without checking for …","Return a pointer to the type-specific data.","Return a pointer to the payload.","Return a pointer to the payload.","Return a pointer to the address records.","Return a pointer to the payload.","Return a pointer to the payload.","","Return the payload length.","Return the payload length field.","","Length of the payload including the extension headers.","Return a mutable pointer to the payload.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload.","Return a pointer to the address records.","Return a mutable pointer to the payload data.","Return a mutable pointer to the payload.","Return the MTU field (for packet too big messages).","","","Return the preferred lifetime of the prefix.","","Return the prefix.","","Return the prefix information flags.","If <code>self</code> is a CIDR-compatible subnet mask, return …","Return the prefix length of this CIDR block.","Return the prefix length of this IPv4 CIDR block.","Return the prefix length of this IPv6 CIDR block.","Return the prefix length.","","Pretty-printing of packet representation.","","","","","","","","","Create a <code>PrettyPrinter</code> which prints the given object.","Return the protocol length field.","Return the protocol type field.","Return the PSH flag.","Return the Querier’s Query Interval Code.","Return the Querier’s Robustness Variable.","Turn the PSH flag into no flag, and keep the rest as-is.","Return the reachable time field.","Return the record type for the given sources.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Return the retransmit time field.","Return the Router Advertisement flags.","Return the router lifetime field.","Return the routing type field.","Return the RST flag.","Return the Suppress Router-Side Processing flag.","","","Return the length of the segment, in terms of sequence …","Return the length of the segment, in terms of sequence …","Return the segments left field.","Returns whether the selective acknowledgement SYN flag is …","Return the selective acknowledgement ranges, if any. If …","Return the sequence number field.","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the ACK flag.","Set the acknowledgement number field.","Set address data","Return the length of the auxiliary data.","Set the checksum field.","","Set the header checksum field.","Set the checksum field.","Set the checksum field.","Set the number of prefix octets elided from the last …","Set the number of prefix octets elided from addresses[…","Set the current hop limit field.","Set the CWR flag.","Set the option data length.","Set the option data length.","Set the destination address field.","Set the “don’t fragment” flag.","Set the Differential Services Code Point field.","Set the destination address field.","Set the destination address field.","Set the destination address field.","Set the destination port field.","Set the destination port field.","Set the ECE flag.","Set the identifier field (for echo request and reply …","Set the identifier field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the Explicit Congestion Notification field.","Set the EtherType field.","Set the FIN flag.","Set the flow label field.","Set the fragment offset, in octets.","Set the fragment offset field.","Set the hardware length field.","Set the hardware type field.","Set the header length, in octets.","Set the option data length. Length of the Hop-by-Hop …","Set the option data length. Length of the Routing header …","Set the header length, in octets.","Set the Ipv6 Home Address","Set the time to live field.","Set the hop limit field.","Set the fragment identification field.","Set the fragmentation identification field.","Set the length field.","Set the Source/Target Link-layer Address.","Set the maximum response code field.","Set the address being queried.","Return the multicast address field.","Set the “more fragments” flag.","Set the more fragments flag field.","Set the message code field.","Set the message code field.","Set the message type field.","Set the message type field.","Set the MTU value.","Set the Neighbor Solicitation flags.","Set the next header (protocol) field.","Set the next header field.","Set the next header field.","Set the next header field.","Set the next header field.","Set the number of Multicast Address Records.","Set the NS flag.","Set number of sources.","Return the number of sources field.","Set the operation field.","Set the option type.","Set the option type.","Set the number of octets used for padding after …","Set the pointer field (for parameter problem messages).","Set the payload length.","Set the payload length field.","Set the MTU field (for packet too big messages).","Set the preferred lifetime of the prefix.","Set the prefix.","Set the prefix information flags.","Set the prefix length.","Set the protocol length field.","Set the protocol type field.","Set the PSH flag.","Set the Querier’s Query Interval Code.","Set the Querier’s Robustness Variable.","Set the reachable time field.","Return the record type for the given sources.","Set the retransmit time field.","Set the Router Advertisement flags.","Set the router lifetime field.","Set the routing type.","Set the RST flag.","Set the Suppress Router-Side Processing flag.","Set the segments left field.","Set the sequence number field.","Set the source hardware address field.","Set the source protocol address field.","Set the source address field.","Set the source address field.","Set the source address field.","Set the source port field.","Set the source port field.","Set the SYN flag.","Set the target address field.","Set the target hardware address field.","Set the target protocol address field.","Set the total length field.","Set the traffic class field.","Set the URG flag.","Set the urgent pointer field.","Set the valid lifetime of the prefix.","Set the version field.","Set the version field.","Return the window size field.","The solicited node for the given unicast address.","Return the source hardware address field.","Return the source protocol address field.","Return the source address field.","Return the source address.","Return the source address field.","Return the source address field.","","","IPv6 address of the source node.","Return the source port field.","Return the source port field.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Return the SYN flag.","Return the target address field.","Return the target hardware address field.","Return the target protocol address field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Return the total length field.","Return the payload length added to the known header length.","Return the traffic classeturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Return the URG flag.","Return the urgent pointer field.","Create an address wrapping an IPv4 address with the given …","Create an address wrapping an IPv6 address with the given …","Return the valid lifetime of the prefix.","","Validate the header checksum.","Validate the header checksum.","Validate the header checksum.","Validate the packet checksum.","Validate the packet checksum.","Return the protocol version.","Return the protocol version.","Return the version field.","Return the version field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the window size field.","","","Write a IPv6 address to the given slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of addresses, numbered 1 to <code>n</code>.","Number of prefix octets from the last segment that are …","Number of prefix octets from each segment, except the last …","The home address of the destination mobile node.","Length of the Routing header in 8-octet units, not …","Length of the Routing header in 8-octet units, not …","The type of header immediately following the Routing …","The type of header immediately following the Routing …","Number of octets that are used for padding after <code>address[n]</code>…","Number of route segments remaining.","Number of route segments remaining.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indentation state.","Interface for printing listings.","Wrapper for using a <code>PrettyPrint</code> where a <code>Display</code> is …","","","","","Returns the argument unchanged.","Increase indentation level.","Calls <code>U::from(self)</code>.","Create an indentation state. The entire listing will be …","Write a concise, formatted representation of a packet …","","","","",""],"i":[8,0,8,0,8,8,8,8,0,0,0,35,66,35,66,8,0,0,8,0,0,0,8,8,8,8,3,1,3,3,5,5,6,8,1,3,5,6,8,1,3,137,137,5,7,8,3,8,3,8,3,8,3,8,8,1,3,3,5,6,8,8,1,3,3,3,3,3,3,1,0,8,0,1,8,0,5,6,8,1,3,1,1,6,137,7,7,7,3,3,1,8,3,0,5,137,0,1,3,137,3,3,3,0,8,3,8,3,3,3,5,6,8,1,3,5,6,8,1,3,5,6,8,1,3,0,5,6,8,1,3,0,0,31,0,32,33,30,0,0,0,0,0,33,30,31,33,29,30,31,32,33,29,30,31,32,33,29,29,29,30,31,32,33,30,31,32,33,33,33,29,29,30,31,32,33,30,31,32,33,29,30,31,32,33,29,29,30,31,32,33,29,29,33,29,29,29,33,29,29,29,29,29,29,29,29,30,31,32,33,30,31,32,33,29,30,31,32,33,29,30,31,32,33,29,29,30,31,32,33,29,44,45,0,0,0,0,43,47,0,0,0,43,43,0,0,45,0,0,0,0,45,44,0,138,0,45,44,0,138,43,39,38,40,41,43,44,42,45,46,7,47,39,38,40,41,43,44,42,45,46,7,47,38,138,39,38,40,41,42,7,43,44,45,46,7,47,43,44,45,46,7,47,43,139,140,38,45,46,7,47,38,43,44,47,141,38,40,41,43,44,42,45,46,7,47,39,38,40,41,43,43,44,42,45,46,7,47,142,39,42,39,42,141,46,46,46,39,38,40,41,43,44,42,45,46,7,47,39,38,40,7,46,7,38,38,7,38,7,39,38,40,41,42,141,141,43,138,39,38,40,41,42,45,38,38,38,38,38,38,46,43,44,45,46,7,47,138,39,38,40,41,42,39,38,40,41,43,44,42,45,46,7,47,39,38,40,41,43,44,42,45,46,7,47,45,39,38,40,41,43,44,42,45,46,7,47,46,39,38,40,41,43,44,42,45,46,7,47,141,141,141,55,55,55,0,55,55,55,54,51,52,53,54,55,55,0,0,0,0,0,0,55,55,55,51,52,50,50,51,52,53,54,55,50,51,52,53,54,55,50,50,50,51,52,53,54,55,51,52,53,54,55,50,50,50,50,51,52,53,54,55,51,52,53,54,55,55,50,51,52,53,54,55,50,50,51,52,53,54,55,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,52,53,54,55,55,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,50,50,51,52,53,54,55,50,50,0,61,62,60,0,0,0,0,0,60,61,59,60,61,62,59,60,61,62,59,59,59,60,61,62,60,61,62,59,59,59,59,60,61,62,60,61,62,59,60,61,62,59,59,60,61,62,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,61,62,60,61,62,59,60,61,62,59,60,61,62,59,59,60,61,62,59,74,117,117,109,0,0,0,0,115,75,68,115,117,112,124,124,124,112,112,111,88,116,89,0,111,88,116,89,111,88,116,89,100,118,0,107,76,0,0,86,0,0,125,125,117,129,114,119,112,0,121,119,113,112,112,113,112,112,0,70,0,0,0,121,0,0,0,0,0,0,0,0,121,0,0,0,0,0,0,121,0,0,0,0,0,0,0,109,110,120,35,66,90,0,0,0,0,0,109,110,120,35,66,90,0,0,121,0,0,0,0,121,0,0,0,0,121,0,0,121,0,0,0,70,70,70,72,0,68,68,100,115,89,0,116,116,0,126,99,89,0,0,0,0,0,0,0,0,0,116,98,116,98,113,112,113,112,112,125,100,117,129,74,72,73,123,95,123,95,111,116,89,116,89,112,117,112,126,99,0,112,129,97,73,0,111,116,98,126,99,117,108,97,108,125,0,111,116,98,111,116,98,125,96,129,73,69,100,100,124,126,99,112,112,129,0,126,99,121,0,0,0,0,0,111,88,116,89,111,111,114,125,125,96,0,68,70,121,0,0,107,108,109,111,112,113,114,115,116,117,118,119,121,123,124,95,125,126,99,100,118,118,100,64,64,101,65,65,57,63,66,67,69,71,72,73,74,75,35,68,70,76,77,70,78,79,80,81,82,83,64,84,85,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,67,86,79,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,78,79,80,81,82,83,103,104,105,71,85,106,64,84,80,81,82,64,84,82,64,106,106,81,103,71,81,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,93,94,123,124,95,125,96,85,97,72,73,98,126,74,127,128,99,65,64,100,129,101,84,130,102,76,77,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,93,94,123,124,95,125,96,85,97,72,73,98,126,74,127,128,99,65,64,100,129,101,84,130,102,76,77,107,108,109,75,111,112,113,114,115,116,117,118,119,120,121,35,66,57,63,122,68,67,70,69,123,124,125,72,73,126,74,71,71,72,73,74,72,73,74,66,67,69,66,67,69,101,81,64,80,105,106,128,105,106,80,105,106,75,63,68,67,70,69,65,81,72,73,74,82,82,79,90,82,83,87,91,92,64,84,101,130,64,80,81,80,81,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,130,72,73,74,107,108,78,86,109,75,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,79,87,72,73,74,80,81,82,64,84,64,127,83,132,107,108,78,78,86,86,109,109,75,75,79,79,87,110,111,111,112,112,113,114,114,115,80,80,88,88,116,116,117,117,118,118,119,119,81,89,120,120,121,121,35,35,66,66,57,57,63,63,90,122,68,68,67,67,82,82,91,91,70,70,69,69,83,83,92,92,103,103,93,93,104,104,94,94,123,123,124,124,105,105,95,95,125,125,71,71,96,96,85,97,72,72,72,72,72,73,73,73,73,73,98,126,126,74,74,74,74,74,106,106,127,128,99,99,65,65,64,64,100,129,101,101,84,84,130,130,102,102,76,76,77,77,82,103,93,132,107,107,108,108,78,86,109,109,75,79,87,110,110,110,111,111,112,112,113,113,114,114,115,115,80,88,116,116,117,117,118,118,119,119,81,89,120,121,121,35,35,35,66,66,66,57,57,63,63,63,63,90,90,90,122,68,67,82,91,70,70,69,83,92,103,93,104,94,123,123,124,124,124,105,95,125,125,71,96,85,97,72,73,98,126,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,76,77,77,77,72,73,74,72,73,74,72,73,74,75,68,70,77,72,73,74,67,70,75,35,66,57,68,67,70,69,75,120,35,66,57,63,68,67,70,69,72,73,74,82,78,78,75,120,35,66,57,63,68,67,70,69,72,73,74,128,79,80,81,90,82,83,104,71,64,101,130,71,90,82,83,91,92,82,103,93,72,73,74,72,73,74,72,73,74,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,68,70,78,79,80,81,82,83,103,104,105,71,85,106,64,84,72,73,74,75,35,68,76,72,73,74,101,77,116,70,68,70,75,68,70,116,75,35,68,70,116,63,75,35,68,70,76,35,68,70,129,84,77,94,106,81,101,81,85,78,79,80,81,82,83,64,84,82,103,93,80,81,80,81,106,81,67,67,132,66,57,90,68,67,70,69,71,78,79,80,81,82,83,103,104,105,71,85,106,64,84,78,79,80,81,82,83,103,104,105,85,106,64,84,90,82,83,103,104,71,91,92,93,94,72,73,74,81,64,81,85,120,78,105,106,104,94,64,94,104,64,71,81,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,130,77,107,108,109,75,111,112,113,114,115,116,117,118,119,120,121,35,66,57,63,122,68,67,70,69,123,124,125,72,73,126,74,65,79,81,82,83,85,64,84,101,90,83,91,92,79,81,82,83,85,64,84,81,57,63,106,127,106,127,106,35,66,67,69,106,127,0,78,79,80,82,83,106,64,84,132,78,78,64,81,81,129,81,85,72,73,74,81,81,81,71,64,81,101,101,64,101,71,64,64,64,101,72,73,74,64,64,71,85,80,81,82,64,84,71,71,81,64,105,106,81,82,82,79,82,83,64,84,64,80,81,80,81,82,79,64,83,82,103,78,78,82,104,71,64,71,82,83,82,103,84,106,81,81,85,82,103,80,81,80,81,106,81,82,83,103,104,71,81,64,81,85,78,105,106,71,81,90,83,81,106,106,106,106,78,78,64,81,81,81,85,81,81,81,71,64,81,71,64,78,78,79,82,83,64,84,64,81,78,78,82,83,64,64,106,82,83,64,70,78,78,79,90,82,83,87,91,92,64,84,101,130,72,73,74,65,65,72,73,74,72,73,74,64,81,78,78,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,93,94,123,124,95,125,96,85,97,72,73,98,126,74,127,128,99,65,64,100,129,101,84,130,102,76,77,132,78,86,109,75,79,111,112,114,80,88,116,117,118,119,120,121,35,66,57,63,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,126,106,99,65,64,101,84,130,102,76,77,72,73,74,82,83,83,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,72,73,74,64,64,35,35,106,127,80,81,82,64,84,35,90,82,83,132,107,108,78,86,109,75,79,87,110,111,112,113,114,115,80,88,116,117,118,119,81,89,120,121,35,66,57,63,90,122,68,67,82,91,70,69,83,92,103,93,104,94,123,124,105,95,125,71,96,85,97,72,73,98,126,74,106,127,128,99,65,64,100,129,101,84,130,102,76,77,64,101,101,70,143,143,143,143,143,144,145,146,147,146,147,144,145,146,147,144,145,148,149,150,151,152,153,148,149,150,151,152,153,149,151,148,150,151,152,153,154,154,154,155,155,155,156,156,155,156,155,155,156,155,157,158,157,157,158,157,157,157,157,159,159,159,160,161,162,161,163,161,164,162,160,161,161,161,160,161,161,164,162,160,165,165,0,0,0,135,135,135,135,135,135,135,135,166,135,135,135,135,135],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,4],3],[[3,4]],[5,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[5,7],0,[8,8],[3,3],[[]],[[]],[[8,8],9],[[3,3],9],[[8,8],10],[[3,3],10],[[8,11],12],[[8,11],12],[[1,11],[[14,[13]]]],[[3,11],[[14,[13]]]],[[3,11],[[14,[13]]]],[[]],[[]],[15,8],[[]],[[]],[[]],[[],3],[16,3],[[],3],[16,3],[[],3],[[1,2]],[[],[[18,[[17,[5]]]]]],[[],19],[[],20],[[1,2]],[8],0,[[]],[[]],[[]],[[]],[[]],[1,21],[1,21],[6,22],[[]],0,0,0,[3,16],[3,16],[[],1],[[8,8],[[18,[9]]]],[[3,3],[[18,[9]]]],0,[5,23],[[],[[18,[24]]]],[25,[[17,[5]]]],[[1,2],26],[3,16],[[],[[14,[8]]]],[[3,3],4],[[3,4],3],[[3,4]],0,[[]],[[]],[[],27],[[],27],[3,16],[3,16],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],28],[[],28],[[],28],[[],28],[[],28],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29,[[14,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,10],[29,10],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[33,33],9],[[],33],[26,[[18,[29]]]],[26,[[18,[29]]]],[[30,30],10],[[31,31],10],[[32,32],10],[[33,33],10],[[30,11],[[14,[13]]]],[[31,11],[[14,[13]]]],[[32,11],[[14,[13]]]],[[33,11],[[14,[13]]]],[[29,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[29,[[18,[34]]]],[[]],[[]],[[]],[[]],[[]],[29,10],[33,10],[[[36,[35]],[36,[35]]],29],[29,37],[29,37],[[33,33],[[18,[9]]]],[29,37],[29,37],[29,[[14,[32]]]],[29,[[14,[32]]]],[[29,37,35],[[14,[31]]]],[[29,35],[[14,[31]]]],[[29,37,35],[[14,[37,31]]]],[[29,[18,[34]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],28],[[],28],[[],28],[[],28],[[],28],[29,26],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,4],[[],7],[39,7],[38,7],[40,7],[41,7],[42,7],0,[43,43],[44,44],[45,45],[46,46],[7,7],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[[43,43],9],[3,[[14,[15]]]],[[3,37],[[14,[15]]]],[38,34],[[],45],[[],46],[[],7],[[],47],[38,34],[[43,43],10],[[44,44],10],[[47,47],10],[[]],[[38,11],[[14,[13]]]],[[40,11],[[14,[13]]]],[[41,11],[[14,[13]]]],[[43,11],[[14,[13]]]],[[44,11],[[14,[13]]]],[[42,11],[[14,[13]]]],[[45,11],[[14,[13]]]],[[46,11],[[14,[13]]]],[[7,11],[[14,[13]]]],[[47,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[48,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[42],[39],[42],[43],0,0,[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[38],[40],[7,37],0,0,[38,37],[38,19],0,[38,19],0,[[],39],[48,38],[[],40],[47,41],[44,42],[3],[[3,37]],[[43,43],[[18,[9]]]],[[],18],[39,18],[38,18],[40,18],[41,18],[42,18],[45,10],[[38,4]],[[38,34]],[[38,34]],[[38,37]],[[38,19]],[[38,19]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[39,18],[38,18],[40,18],[41,18],[42,18],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[45,10],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49],[48],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[50],[50,[[18,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,10],[50,10],[51,51],[52,52],[53,53],[54,54],[55,55],[[]],[[]],[[]],[[]],[[]],[50],[[50,56],[[14,[52]]]],[26,[[18,[50]]]],[26,[[18,[50]]]],[[51,51],10],[[52,52],10],[[53,53],10],[[54,54],10],[[55,55],10],[[51,11],[[14,[13]]]],[[52,11],[[14,[13]]]],[[53,11],[[14,[13]]]],[[54,11],[[14,[13]]]],[[55,11],[[14,[13]]]],[[55,11],[[14,[13]]]],[[50,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[18,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[50,10],[50,10],[50,10],[50,[[18,[4]]]],[50,[[14,[51]]]],[50,[[18,[57]]]],[50,10],[50,10],[50,10],[[],50],[[50,37],[[14,[54]]]],[50,[[14,[37,54]]]],[50,[[14,[54]]]],[50,37],[50,37],[50,[[14,[37,54]]]],[50,[[18,[57]]]],[50,[[14,[53]]]],[50,37],[50,37],[50,[[14,[37,53]]]],[[50,[18,[4]]]],[[50,[18,[34]]]],[[50,[18,[4]]]],[[50,10]],[[50,[18,[4]]]],[50,55],[50,[[18,[4]]]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[50,26],[[]],[[]],[[]],[[]],[[]],[[]],[[50,58],[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,[59,[[14,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,10],[59,10],[60,60],[61,61],[62,62],[[]],[[]],[[]],[59],[26,[[18,[59]]]],[26,[[18,[59]]]],[59,63],[[60,60],10],[[61,61],10],[[62,62],10],[[60,11],[[14,[13]]]],[[61,11],[[14,[13]]]],[[62,11],[[14,[13]]]],[[59,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[59,[[18,[34]]]],[[]],[[]],[[]],[[]],[59,10],[[[36,[57]],[36,[57]]],59],[59,37],[59,37],[59,37],[59,37],[59,[[14,[62]]]],[59,[[14,[62]]]],[59,[[14,[62]]]],[59,[[14,[62]]]],[[59,37,57],[[14,[61]]]],[[59,57],[[14,[61]]]],[[59,37,57],[[14,[37,61]]]],[[59,[18,[34]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],28],[[],28],[[],28],[[],28],[59,26],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[64,10],[64,65],0,[[65,37],65],[[65,37]],0,0,[66,35],[67,68],[69,70],[71],[[],72],[[],73],[[],74],[75],[35],[68],[70],[76],[77],[70,[[18,[68]]]],[78],[79],[80],[81],[82],[83],[64],[84],[85,34],[[72,72],72],[[73,73],73],[[74,74],74],[[72,72]],[[73,73]],[[74,74]],[[72,72],72],[[73,73],73],[[74,74],74],[[72,72]],[[73,73]],[[74,74]],[72,34],[73,34],[74,34],[[72,72],72],[[73,73],73],[[74,74],74],[[72,72]],[[73,73]],[[74,74]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,[[18,[68]]]],[86,37],[37,37],[87,37],[88,37],[89,37],[90,37],[91,37],[92,37],[93,37],[94,37],[95,37],[96,37],[97,37],[98,37],[99,37],[100,37],[101,37],[78,[[14,[102]]]],[79,[[14,[102]]]],[80,[[14,[102]]]],[81,[[14,[102]]]],[82,[[14,[102]]]],[83,[[14,[102]]]],[103,[[14,[102]]]],[104,[[14,[102]]]],[105,[[14,[102]]]],[71,[[14,[102]]]],[85,[[14,[102]]]],[106,[[14,[102]]]],[64,[[14,[102]]]],[84,[[14,[102]]]],[80,49],[81,49],[82,49],[64,49],[84,49],[82],[64],[106],[106],[81],[103],[71],[81],[107,107],[108,108],[78,78],[86,86],[109,109],[75,75],[79,79],[87,87],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[80,80],[88,88],[116,116],[117,117],[118,118],[119,119],[81,81],[89,89],[120,120],[121,121],[35,35],[66,66],[57,57],[63,63],[90,90],[122,122],[68,68],[67,67],[82,82],[91,91],[70,70],[69,69],[83,83],[92,92],[93,93],[94,94],[123,123],[124,124],[95,95],[125,125],[96,96],[85,85],[97,97],[72,72],[73,73],[98,98],[126,126],[74,74],[127,127],[128,128],[99,99],[65,65],[64,64],[100,100],[129,129],[101,101],[84,84],[130,130],[102,102],[76,76],[77,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[107,107],9],[[108,108],9],[[109,109],9],[[75,75],9],[[111,111],9],[[112,112],9],[[113,113],9],[[114,114],9],[[115,115],9],[[116,116],9],[[117,117],9],[[118,118],9],[[119,119],9],[[120,120],9],[[121,121],9],[[35,35],9],[[66,66],9],[[57,57],9],[[63,63],9],[[122,122],9],[[68,68],9],[[67,67],9],[[70,70],9],[[69,69],9],[[123,123],9],[[124,124],9],[[125,125],9],[[72,72],9],[[73,73],9],[[126,126],9],[[74,74],9],[71,34],[71,34],[72,72],[73,73],[74,74],[[72,72],10],[[73,73],10],[[74,74],10],[[66,35],10],[[67,68],10],[[69,70],10],[[66,66],10],[[67,67],10],[[69,69],10],0,[81,34],[64,10],[80],[105],[106],0,[105,34],[106,34],[80],[105],[106],[[],75],[[],63],[[],68],[[],67],[[],70],[[],69],[[],65],[81,70],[[72,72],72],[[73,73],73],[[74,74],74],[82,10],[82,34],[79,75],[90,35],[82,68],[83,70],0,0,0,[64,49],[84,49],0,0,[64,10],[80,49],[81,49],[80,49],[81,49],[82,34],[[86,78]],[[87,79]],[[88,80,46]],[[89,35,35,81,46]],[[90,46]],[[91,82,46]],[[92,83]],[[93,103]],[[94,104]],[[95,105]],[[96,71]],[[97,81]],[[98,81]],[[99,106]],[100],[[101,64,35,35,46]],[[130,84,35,35,37,131,46]],[[],72],[[],73],[[],74],[[107,107],10],[[108,108],10],[[78,78],10],[[86,86],10],[[109,109],10],[[75,75],10],[[87,87],10],[[110,110],10],[[111,111],10],[[112,112],10],[[113,113],10],[[114,114],10],[[115,115],10],[[80,80],10],[[88,88],10],[[116,116],10],[[117,117],10],[[118,118],10],[[119,119],10],[[81,81],10],[[89,89],10],[[120,120],10],[[121,121],10],[[35,35],10],[[66,66],10],[[57,57],10],[[63,63],10],[[90,90],10],[[122,122],10],[[68,68],10],[[67,67],10],[[82,82],10],[[91,91],10],[[70,70],10],[[69,69],10],[[83,83],10],[[92,92],10],[[103,103],10],[[93,93],10],[[104,104],10],[[94,94],10],[[123,123],10],[[124,124],10],[[105,105],10],[[95,95],10],[[125,125],10],[[71,71],10],[[96,96],10],[[85,85],10],[[97,97],10],[[72,72],10],[[73,73],10],[[98,98],10],[[126,126],10],[[74,74],10],[[106,106],10],[[127,127],10],[[128,128],10],[[99,99],10],[[65,65],10],[[64,64],10],[[100,100],10],[[129,129],10],[[101,101],10],[[84,84],10],[[130,130],10],[[102,102],10],[[76,76],10],[[77,77],10],[79,109],0,[72],[73],[74],[80],[[81,35,35]],[82],[[64,35,35]],[[84,35,35]],[64,10],0,[83,48],[[132,11],[[14,[13]]]],[[107,11],[[14,[13]]]],[[108,11],[[14,[13]]]],[[78,11],[[14,[13]]]],[[78,11],[[14,[13]]]],[[86,11],[[14,[13]]]],[[86,11],[[14,[13]]]],[[109,11],[[14,[13]]]],[[109,11],[[14,[13]]]],[[75,11],[[14,[13]]]],[[75,11],[[14,[13]]]],[[79,11],[[14,[13]]]],[[79,11],[[14,[13]]]],[[87,11],[[14,[13]]]],[[110,11],[[14,[13]]]],[[111,11],[[14,[13]]]],[[111,11],[[14,[13]]]],[[112,11],[[14,[13]]]],[[112,11],[[14,[13]]]],[[113,11],[[14,[13]]]],[[114,11],[[14,[13]]]],[[114,11],[[14,[13]]]],[[115,11],[[14,[13]]]],[[80,11],[[14,[13]]]],[[80,11],[[14,[13]]]],[[88,11],[[14,[13]]]],[[88,11],[[14,[13]]]],[[116,11],[[14,[13]]]],[[116,11],[[14,[13]]]],[[117,11],[[14,[13]]]],[[117,11],[[14,[13]]]],[[118,11],[[14,[13]]]],[[118,11],[[14,[13]]]],[[119,11],[[14,[13]]]],[[119,11],[[14,[13]]]],[[81,11],[[14,[13]]]],[[89,11],[[14,[13]]]],[[120,11],[[14,[13]]]],[[120,11],[[14,[13]]]],[[121,11],[[14,[13]]]],[[121,11],[[14,[13]]]],[[35,11],[[14,[13]]]],[[35,11],[[14,[13]]]],[[66,11],[[14,[13]]]],[[66,11],[[14,[13]]]],[[57,11],[[14,[13]]]],[[57,11],[[14,[13]]]],[[63,11],[[14,[13]]]],[[63,11],[[14,[13]]]],[[90,11],[[14,[13]]]],[[122,11],[[14,[13]]]],[[68,11],[[14,[13]]]],[[68,11],[[14,[13]]]],[[67,11],[[14,[13]]]],[[67,11],[[14,[13]]]],[[82,11],[[14,[13]]]],[[82,11],[[14,[13]]]],[[91,11],[[14,[13]]]],[[91,11],[[14,[13]]]],[[70,11],[[14,[13]]]],[[70,11],[[14,[13]]]],[[69,11],[[14,[13]]]],[[69,11],[[14,[13]]]],[[83,11],[[14,[13]]]],[[83,11],[[14,[13]]]],[[92,11],[[14,[13]]]],[[92,11],[[14,[13]]]],[[103,11],[[14,[13]]]],[[103,11],[[14,[13]]]],[[93,11],[[14,[13]]]],[[93,11],[[14,[13]]]],[[104,11],[[14,[13]]]],[[104,11],[[14,[13]]]],[[94,11],[[14,[13]]]],[[94,11],[[14,[13]]]],[[123,11],[[14,[13]]]],[[123,11],[[14,[13]]]],[[124,11],[[14,[13]]]],[[124,11],[[14,[13]]]],[[105,11],[[14,[13]]]],[[105,11],[[14,[13]]]],[[95,11],[[14,[13]]]],[[95,11],[[14,[13]]]],[[125,11],[[14,[13]]]],[[125,11],[[14,[13]]]],[[71,11],[[14,[13]]]],[[71,11],[[14,[13]]]],[[96,11],[[14,[13]]]],[[96,11],[[14,[13]]]],[[85,11],[[14,[13]]]],[[97,11],[[14,[13]]]],[[72,11],[[14,[13]]]],[[72,11],[[14,[13]]]],[[72,11],[[14,[13]]]],[[72,11],[[14,[13]]]],[[72,11],[[14,[13]]]],[[73,11],[[14,[13]]]],[[73,11],[[14,[13]]]],[[73,11],[[14,[13]]]],[[73,11],[[14,[13]]]],[[73,11],[[14,[13]]]],[[98,11],[[14,[13]]]],[[126,11],[[14,[13]]]],[[126,11],[[14,[13]]]],[[74,11],[[14,[13]]]],[[74,11],[[14,[13]]]],[[74,11],[[14,[13]]]],[[74,11],[[14,[13]]]],[[74,11],[[14,[13]]]],[[106,11],[[14,[13]]]],[[106,11],[[14,[13]]]],[[127,11],[[14,[13]]]],[[128,11],[[14,[13]]]],[[99,11],[[14,[13]]]],[[99,11],[[14,[13]]]],[[65,11],[[14,[13]]]],[[65,11],[[14,[13]]]],[[64,11],[[14,[13]]]],[[64,11],[[14,[13]]]],[[100,11],[[14,[13]]]],[[129,11],[[14,[13]]]],[[101,11],[[14,[13]]]],[[101,11],[[14,[13]]]],[[84,11],[[14,[13]]]],[[84,11],[[14,[13]]]],[[130,11],[[14,[13]]]],[[130,11],[[14,[13]]]],[[102,11],[[14,[13]]]],[[102,11],[[14,[13]]]],[[76,11],[[14,[13]]]],[[76,11],[[14,[13]]]],[[77,11],[[14,[13]]]],[[77,11],[[14,[13]]]],[82,49],[103,49],0,[[]],[49,107],[[]],[[]],[49,108],[[]],[[]],[49,109],[[]],[[]],[[]],[[]],[88,110],[89,110],[[]],[[]],[34,111],[[]],[34,112],[34,113],[[]],[34,114],[[]],[34,115],[[]],[[]],[[]],[[]],[34,116],[[]],[34,117],[[]],[34,118],[34,119],[[]],[[]],[[]],[[]],[34,121],[[]],[70,35],[[]],[68,35],[67,66],[[]],[69,66],[[]],[[],57],[49,63],[[],63],[57,63],[[]],[[]],[92,90],[91,90],[[]],[[]],[[]],[[]],[[]],[68,70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,123],[[]],[[]],[123,124],[34,124],[[]],[[]],[34,125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,76],[[]],[76,77],[75,77],[[]],[34,[[18,[72]]]],[34,[[18,[73]]]],[34,[[18,[74]]]],[34,72],[34,73],[34,74],[34,72],[34,73],[34,74],[[],75],[[],68],[[],70],[[],77],[[],72],[[],73],[[],74],[[68,68],[[14,[67,102]]]],[[],70],[58,[[14,[75]]]],[58,[[14,[35]]]],[58,[[14,[66]]]],[58,[[14,[57]]]],[58,[[14,[68]]]],[58,[[14,[67]]]],[58,[[14,[70]]]],[58,[[14,[69]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[82,122],[78,34],[78,107],[75],[120],[35],[66],[57],[63],[68],[67],[70],[69],[72],[73],[74],0,[[],37],[80,37],[81,37],[90,37],[82,34],[83,37],[104,34],[71,34],[64,34],[101,37],[130,37],[71,70],[90,34],[82,34],[83,34],0,0,[82,49],[103,48],0,[[72,72]],[[73,73]],[[74,74]],[[72,72],72],[[73,73],73],[[74,74],74],[[72,72],10],[[73,73],10],[[74,74],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,35],[70,35],[78],[79],[80],[81],[82],[83],[103],[104],[105],[71],[85],[106],[64],[84],[72,10],[73,10],[74,10],[75,10],[35,10],[68,10],[76,10],[72,10],[73,10],[74,10],[101,10],[77,10],[116,10],[70,10],[68,10],[70,10],[75,10],[68,10],[70,10],[116,10],[75,10],[35,10],[68,10],[70,10],[116,10],[63,10],[75,10],[35,10],[68,10],[70,10],[76,10],[35,10],[68,10],[70,10],[129,37],[84,49],[77,37],0,[106,77],[81,49],0,[81,70],[85,70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,10],[103,10],0,[80,34],[81,34],[80,111],[81,116],[106,48],[81,73],[67,68],[67,67],[[58,133],132],[[35,34],66],[[35,49],57],[[35,35,121,37,34],90],[[34,34,34,34],68],[[68,34],67],[[49,49,49,49,49,49,49,49],70],[[70,34],69],[[],71],[[],[[14,[78,102]]]],[[],[[14,[79,102]]]],[[],[[14,[80,102]]]],[[],[[14,[81,102]]]],[[],[[14,[82,102]]]],[[],[[14,[83,102]]]],[[],[[14,[103,102]]]],[[],[[14,[104,102]]]],[[],[[14,[105,102]]]],[[],[[14,[71,102]]]],[[],[[14,[85,102]]]],[[],[[14,[106,102]]]],[[],[[14,[64,102]]]],[[],[[14,[84,102]]]],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[],103],[[],104],[[],105],[[],85],[[],106],[[],64],[[],84],[90,121],[82,121],[83,121],[103,121],[104,121],[71,121],0,0,0,0,[72,72],[73,73],[74,74],[81,49],[64,10],[81,49],[85,49],[[],[[14,[120,102]]]],[78,108],[105,123],[106,126],[104],[94,134],[64],0,[104],[64],[71,34],[81,48],[78,[[14,[86,102]]]],[79,[[14,[87,102]]]],[[80,46],[[14,[88,102]]]],[[35,35,81,46],[[14,[89,102]]]],[[82,46],[[14,[91,102]]]],[83,[[14,[92,102]]]],[103,[[14,[93,102]]]],[104,[[14,[94,102]]]],[105,[[14,[95,102]]]],[71,[[14,[96,102]]]],[81,[[14,[97,102]]]],[81,[[14,[98,102]]]],[106,[[14,[99,102]]]],[[],[[14,[102]]]],[[64,35,35,46],[[14,[101,102]]]],[[84,35,35,46],[[14,[130,102]]]],[[77,47],[[14,[76,102]]]],[[107,107],[[18,[9]]]],[[108,108],[[18,[9]]]],[[109,109],[[18,[9]]]],[[75,75],[[18,[9]]]],[[111,111],[[18,[9]]]],[[112,112],[[18,[9]]]],[[113,113],[[18,[9]]]],[[114,114],[[18,[9]]]],[[115,115],[[18,[9]]]],[[116,116],[[18,[9]]]],[[117,117],[[18,[9]]]],[[118,118],[[18,[9]]]],[[119,119],[[18,[9]]]],[[120,120],[[18,[9]]]],[[121,121],[[18,[9]]]],[[35,35],[[18,[9]]]],[[66,66],[[18,[9]]]],[[57,57],[[18,[9]]]],[[63,63],[[18,[9]]]],[[122,122],[[18,[9]]]],[[68,68],[[18,[9]]]],[[67,67],[[18,[9]]]],[[70,70],[[18,[9]]]],[[69,69],[[18,[9]]]],[[123,123],[[18,[9]]]],[[124,124],[[18,[9]]]],[[125,125],[[18,[9]]]],[[72,72],[[18,[9]]]],[[73,73],[[18,[9]]]],[[126,126],[[18,[9]]]],[[74,74],[[18,[9]]]],[[65,65],[[18,[9]]]],[79],[81],[82],[83],[85],[64],[84],0,[90,37],[83,49],0,0,[79],[81],[82],[83],[85],[64],[84],[81,48],0,0,[106,4],0,[106,70],0,[106,74],[35,[[18,[34]]]],[66,34],[67,34],[69,34],[106,34],0,0,[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[133,11,135],[[14,[13]]]],[[],132],[78,34],[78,109],[64,10],[81,34],[81,34],[129,129],[81,4],[85,136],[[72,72]],[[73,73]],[[74,74]],[81,4],[81,72],[81,4],[71,125],[64,10],[81,10],0,0,[64,37],[101,37],[71,34],[64,[[14,[10,102]]]],[64,[[14,[102]]]],[64,65],0,[[72,72,10]],[[73,73,10]],[[74,74,10]],[[64,10]],[[64,65]],[71],[[85,34]],[[80,49]],[[81,49]],[[82,49]],[[64,49]],[[84,49]],[[71,34]],[[71,34]],[[81,34]],[[64,10]],[[105,34]],[[106,34]],[[81,70]],[[82,10]],[[82,34]],[[79,75]],[[82,68]],[[83,70]],[[64,49]],[[84,49]],[[64,10]],[[80,49]],[[81,49]],[[80,49]],[[81,49]],[[82,34]],[[79,109]],[[64,10]],[[83,48]],[[82,49]],[[103,49]],[[78,34]],[[78,107]],[[82,34]],[[104,34]],[[71,34]],[[64,34]],[[71,70]],[[82,34]],[[83,34]],[[82,49]],[[103,48]],[[84,49]],[[106,77]],[[81,49]],[[81,70]],[[85,70]],[[82,10]],[[103,10]],[[80,34]],[[81,34]],[[80,111]],[[81,116]],[[106,48]],[[81,73]],[[82,121]],[[83,121]],[[103,121]],[[104,121]],[[71,121]],[[81,49]],[[64,10]],[[81,49]],[[85,49]],[[78,108]],[[105,123]],[[106,126]],[[71,34]],[[81,48]],[[90,37]],[[83,49]],[[81,48]],[[106,4]],[[106,70]],[[106,74]],[[106,34]],[[78,34]],[[78,109]],[[64,10]],[[81,34]],[[81,34]],[[81,4]],[[85,136]],[[81,4]],[[81,72]],[[81,4]],[[71,125]],[[64,10]],[81],[[71,34]],[[64,65]],[78],[78],[[79,75]],[[82,68]],[[83,70]],[[64,49]],[[84,49]],[[64,10]],[[81,70]],[78],[78],[[82,49]],[[83,34]],[[64,10]],[[64,49]],[[106,4]],[[82,34]],[[83,34]],[[64,49]],[70,70],[78],[78],[79,75],[90,35],[82,68],[83,70],0,0,0,[64,49],[84,49],0,0,[[72,72],72],[[73,73],73],[[74,74],74],[[65,65],37],[[65,37],65],[[72,72]],[[73,73]],[[74,74]],[[72,72],72],[[73,73],73],[[74,74],74],[64,10],[81,70],[78],[78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[72,72]],[[73,73]],[[74,74]],[82,49],[83,37],[83,34],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[72,72],72],[[73,73],73],[[74,74],74],[64,10],[64,49],[[34,34,34,34],35],[[49,49,49,49,49,49,49,49],35],[106,4],0,[80,10],[[81,35,35],10],[82,10],[[64,35,35],10],[[84,35,35],10],[35,120],[90,120],[82,34],[83,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,49],0,0,[70],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[135,11],[[14,[13]]]],[[135,11],[[14,[13]]]],[[]],[[135,11],[[14,[13]]]],[[]],[58,135],[[133,11,135],[[14,[13]]]],[[],27],[[],14],[[],14],[[],28],[[]]],"p":[[3,"SocketSet"],[3,"SocketHandle"],[3,"Instant"],[3,"Duration"],[3,"NetworkInterface"],[3,"Socket"],[3,"DeviceCapabilities"],[4,"Error"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[4,"Error"],[15,"i64"],[3,"Arc"],[4,"Option"],[15,"u64"],[6,"Mutex"],[8,"Iterator"],[8,"DerefMut"],[6,"Result"],[3,"ReceivedFrame"],[3,"MutexIrqSafe"],[4,"Socket"],[3,"String"],[3,"TypeId"],[3,"Socket"],[4,"BindError"],[4,"SendError"],[4,"RecvError"],[4,"Endpoint"],[15,"u8"],[4,"IpAddress"],[3,"PacketBuffer"],[15,"usize"],[3,"FaultInjector"],[3,"Tracer"],[3,"FuzzInjector"],[3,"Loopback"],[3,"PcapWriter"],[4,"PcapLinkType"],[4,"PcapMode"],[4,"Checksum"],[3,"ChecksumCapabilities"],[4,"Medium"],[15,"u32"],[15,"u16"],[3,"Socket"],[4,"ListenError"],[4,"ConnectError"],[4,"SendError"],[4,"RecvError"],[4,"State"],[3,"InterfaceInner"],[3,"IpEndpoint"],[15,"str"],[3,"Socket"],[4,"BindError"],[4,"SendError"],[4,"RecvError"],[3,"IpListenEndpoint"],[3,"TcpPacket"],[3,"TcpSeqNumber"],[4,"IpCidr"],[3,"Ipv4Cidr"],[3,"Ipv4Address"],[3,"Ipv6Cidr"],[3,"Ipv6Address"],[3,"Ipv6RoutingHeader"],[3,"NdiscRouterFlags"],[3,"NdiscNeighborFlags"],[3,"NdiscPrefixInfoFlags"],[3,"EthernetAddress"],[4,"HardwareAddress"],[3,"RawHardwareAddress"],[3,"ArpPacket"],[3,"EthernetFrame"],[3,"Icmpv4Packet"],[3,"Icmpv6Packet"],[3,"Ipv4Packet"],[3,"Ipv6Packet"],[3,"UdpPacket"],[3,"MldAddressRecord"],[4,"ArpRepr"],[3,"EthernetRepr"],[4,"Icmpv4Repr"],[4,"Icmpv6Repr"],[4,"IpRepr"],[3,"Ipv4Repr"],[3,"Ipv6Repr"],[3,"Ipv6FragmentRepr"],[3,"Ipv6HopByHopRepr"],[4,"Ipv6OptionRepr"],[4,"Ipv6RoutingRepr"],[4,"MldRepr"],[4,"NdiscRepr"],[4,"NdiscOptionRepr"],[4,"TcpOption"],[3,"TcpRepr"],[3,"Error"],[3,"Ipv6FragmentHeader"],[3,"Ipv6HopByHopHeader"],[3,"Ipv6Option"],[3,"NdiscOption"],[4,"ArpHardware"],[4,"ArpOperation"],[4,"EthernetProtocol"],[4,"IcmpRepr"],[4,"Icmpv4Message"],[4,"Icmpv4DstUnreachable"],[4,"Icmpv4Redirect"],[4,"Icmpv4TimeExceeded"],[4,"Icmpv4ParamProblem"],[4,"Icmpv6Message"],[4,"Icmpv6DstUnreachable"],[4,"Icmpv6ParamProblem"],[4,"Icmpv6TimeExceeded"],[4,"IpVersion"],[4,"IpProtocol"],[3,"Ipv4FragKey"],[4,"Ipv6OptionType"],[4,"Ipv6OptionFailureType"],[4,"Ipv6RoutingType"],[4,"NdiscOptionType"],[3,"NdiscPrefixInformation"],[3,"NdiscRedirectedHeader"],[4,"TcpControl"],[3,"UdpRepr"],[8,"FnOnce"],[3,"PrettyPrinter"],[8,"AsRef"],[3,"Ipv6OptionsIterator"],[3,"PrettyIndent"],[4,"RecordType"],[8,"NetworkDevice"],[8,"Device"],[8,"RxToken"],[8,"TxToken"],[8,"PcapSink"],[8,"Fuzzer"],[13,"EthernetIpv4"],[13,"EchoRequest"],[13,"EchoReply"],[13,"DstUnreachable"],[13,"TimeExceeded"],[13,"DstUnreachable"],[13,"PktTooBig"],[13,"TimeExceeded"],[13,"ParamProblem"],[13,"EchoRequest"],[13,"EchoReply"],[13,"Unknown"],[13,"Rpl"],[13,"Type2"],[13,"Query"],[13,"Report"],[13,"Unknown"],[13,"Redirect"],[13,"RouterAdvert"],[13,"NeighborAdvert"],[13,"RouterSolicit"],[13,"NeighborSolicit"],[13,"Unknown"],[8,"PrettyPrint"]]},\
"network_interface_card":{"doc":"","t":[8,10,10,10,10],"n":["NetworkInterfaceCard","get_received_frame","mac_address","poll_receive","send_packet"],"q":["network_interface_card","","","",""],"d":["A trait that defines the necessary minimum functions that …","Returns the earliest <code>ReceivedFrame</code>, which is essentially a …","Returns the MAC address that this NIC is configured with. …","Poll the NIC for received frames.  Can be used as an …","Sends a packet contained in the given <code>transmit_buffer</code> out …"],"i":[0,6,6,6,6],"f":[0,[[],[[2,[1]]]],[[]],[[],[[4,[3]]]],[5,[[4,[3]]]]],"p":[[3,"ReceivedFrame"],[4,"Option"],[15,"str"],[4,"Result"],[3,"TransmitBuffer"],[8,"NetworkInterfaceCard"]]},\
"network_manager":{"doc":"","t":[7,8,6,5,10,10,10,10,10,10,10],"n":["NETWORK_INTERFACES","NetworkInterface","NetworkInterfaceRef","add_to_network_interfaces","ethernet_addr","has_ip_addr","ip_addrs","poll","routes","routes_mut","set_ethernet_addr"],"q":["network_manager","","","","","","","","","",""],"d":["A list of all of the available and initialized network …","A trait that represents a Network Interface within …","A trait object wrapped in an Arc and Mutex that allows  …","Add a Nic to the global list of network interfaces. The …","Get the Ethernet address of the interface.","Check whether the interface has the given IP address …","Get the IP addresses of the interface.","Polls (or flushes) the network interface, which should be …","","","Set the Ethernet address of the interface."],"i":[0,0,0,0,1,1,1,1,1,1,1],"f":[0,0,0,[[[0,[1,2]]]],[[],3],[4,5],[[]],[[6,7],[[8,[5]]]],[[],9],[[],9],[3]],"p":[[8,"NetworkInterface"],[8,"Send"],[3,"Address"],[4,"Address"],[15,"bool"],[3,"Set"],[3,"Instant"],[6,"Result"],[3,"Routes"]]},\
"nic_buffers":{"doc":"Defines buffers that are used to send and receive packets.","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ReceiveBuffer","ReceivedFrame","TransmitBuffer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","from","from","from","into","into","into","length","length","new","new","phys_addr","phys_addr","set_length","set_length","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["nic_buffers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A buffer that stores a packet (a piece of an Ethernet …","A network (e.g., Ethernet) frame that has been received by …","A buffer that stores a packet to be transmitted through …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new TransmitBuffer with the specified size in …","Creates a new ReceiveBuffer with the given <code>MappedPages</code>, …","","","Sets the buffers length.","Sets the buffers length.","","","","","","","","",""],"i":[0,0,0,1,2,10,1,2,10,1,2,1,2,2,1,2,10,1,2,10,1,2,1,2,1,2,1,2,1,2,10,1,2,10,1,2,10],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[1],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[1,3],[2,3],[3,[[5,[1,4]]]],[[6,7,3,8],[[5,[2,4]]]],[1,7],[2,7],[[1,3],[[5,[4]]]],[[2,3],[[5,[4]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],9],[[],9],[[],9]],"p":[[3,"TransmitBuffer"],[3,"ReceiveBuffer"],[15,"u16"],[15,"str"],[4,"Result"],[3,"MappedPages"],[3,"PhysicalAddress"],[3,"Queue"],[3,"TypeId"],[3,"ReceivedFrame"]]},\
"nic_initialization":{"doc":"Functions that are used in a NIC initialization procedure.","t":[5,5,5],"n":["init_rx_buf_pool","init_rx_queue","init_tx_queue"],"q":["nic_initialization","",""],"d":["Initialize the receive buffer pool from where receive …","Steps to create and initialize a receive descriptor queue","Steps to create and initialize a transmit descriptor queue"],"i":[0,0,0],"f":[[[1,2,3],[[5,[4]]]],[[1,3,1],[[5,[4]]]],[1,[[5,[[8,[6,7]],4]]]]],"p":[[15,"usize"],[15,"u16"],[3,"Queue"],[15,"str"],[4,"Result"],[8,"TxDescriptor"],[3,"Mutable"],[3,"BorrowedSliceMappedPages"]]},\
"nic_queues":{"doc":"Defines the receive and transmit queues that store a ring …","t":[3,8,3,8,11,11,11,11,12,12,12,11,11,12,12,11,11,12,12,11,12,12,12,11,12,12,12,12,12,11,10,10,10,10,10,10,10,10,10,10,11,11,11,11,12,12,11,11],"n":["RxQueue","RxQueueRegisters","TxQueue","TxQueueRegisters","borrow","borrow","borrow_mut","borrow_mut","cpu_id","cpu_id","filter_num","from","from","id","id","into","into","num_rx_descs","num_tx_descs","poll_queue_and_store_received_packets","received_frames","regs","regs","return_frame","rx_buffer_pool","rx_buffer_size_bytes","rx_bufs_in_use","rx_cur","rx_descs","send_on_queue","set_rdbah","set_rdbal","set_rdh","set_rdlen","set_rdt","set_tdbah","set_tdbal","set_tdh","set_tdlen","set_tdt","try_from","try_from","try_into","try_into","tx_cur","tx_descs","type_id","type_id"],"q":["nic_queues","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct that holds all information for one receive queue. …","The register trait that gives access to only those …","A struct that holds all information for a transmit queue.  …","The register trait that gives access to only those …","","","","","The cpu which this queue is mapped to.  This in itself …","The cpu which this queue is mapped to.  This in itself …","The filter id for the physical NIC filter that is set for …","Returns the argument unchanged.","Returns the argument unchanged.","The number of the queue, stored here for our convenience.","The number of the queue, stored here for our convenience.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of receive descriptors in the descriptor ring","The number of transmit descriptors in the descriptor ring","Polls the queue and removes all received packets from it. …","The queue of received Ethernet frames, ready for …","Registers for this receive queue","Registers for this transmit queue","Returns the earliest received ethernet frame.","Pool where <code>ReceiveBuffer</code>s are stored.","","The list of rx buffers, in which the index in the vector …","Current receive descriptor index","Receive descriptors","Sends a packet on the transmit queue","","","","","","","","","","","","","","","Current transmit descriptor index","Transmit descriptors ","",""],"i":[0,0,0,0,3,10,3,10,3,10,3,3,10,3,10,3,10,3,10,3,3,3,10,3,3,3,3,3,3,10,1,1,1,1,1,8,8,8,8,8,3,10,3,10,10,10,3,10],"f":[0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],0,0,[[]],[[]],0,0,[[[3,[1,2]]],[[5,[4]]]],0,0,0,[[[3,[1,2]]],[[7,[6]]]],0,0,0,0,0,[[[10,[8,9]],11]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[],5],[[],5],[[],5],[[],5],0,0,[[],13],[[],13]],"p":[[8,"RxQueueRegisters"],[8,"RxDescriptor"],[3,"RxQueue"],[15,"str"],[4,"Result"],[3,"ReceivedFrame"],[4,"Option"],[8,"TxQueueRegisters"],[8,"TxDescriptor"],[3,"TxQueue"],[3,"TransmitBuffer"],[15,"u32"],[3,"TypeId"]]},\
"no_drop":{"doc":"A simple wrapper that prevents the inner object from being …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NoDrop","borrow","borrow_mut","deref","deref_mut","fmt","from","into","into_inner","new","try_from","try_into","type_id"],"q":["no_drop","","","","","","","","","","","",""],"d":["A wrapper for an inner object that ensures the inner …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Consumes this <code>NoDrop</code> wrapper and returns the inner object.","Wraps the given <code>obj</code> in a <code>NoDrop</code> wrapper.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1],[1],[[[1,[2]],3],4],[[]],[[]],[1],[[],1],[[],5],[[],5],[[],6]],"p":[[3,"NoDrop"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"ota_update_client":{"doc":"Functions to communicate with a network server that …","t":[4,17,3,3,13,13,5,11,11,11,11,11,11,12,5,5,5,5,5,11,11,11,11,11,11,11,12,12,5,12,11,11,11,11,11,11,11,11,11],"n":["CrateSet","DIFF_FILE_NAME","Diff","DownloadedFile","Exclude","Include","as_lines","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","content","default_remote_endpoint","download_available_update_builds","download_crates","download_diff","download_listing","from","from","from","includes","into","into","into","name","pairs","parse_diff_lines","state_transfer_functions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["ota_update_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An enum used for specifying which crate files to download …","The name (and relative path) of the diff file inside each …","A representation of an diff file used to define an …","A file that has been downloaded over the network,  …","The set of crates to exclude, i.e., all crates except for …","The set of crates to include, i.e., only these crates will …","Convenience function for converting a byte stream that is …","","","","","","","","The default remote endpoint, server IP and port, of the …","Connects to the update server over the given network …","Connects to the update server over the given network …","Connects to the update server over the given network …","Connects to the update server over the given network …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns true if this <code>CrateSet</code> specifies that the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A list of tuples in which the first element is the old …","Parses a series of diff lines into a representation of an …","The list of state transfer functions which should be …","","","","","","","","",""],"i":[0,0,0,0,9,9,0,8,9,11,8,9,11,8,0,0,0,0,0,8,9,11,9,8,9,11,8,11,0,11,8,9,11,8,9,11,8,9,11],"f":[0,0,0,0,0,0,[[],[[4,[[2,[1]],3]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[6,5],[[4,[[2,[1]],3]]]],[[6,5,3,[7,[1]]],[[4,[[2,[8]],3]]]],[[6,5,3],[[4,[[2,[1]],3]]]],[[6,5,3],[[4,[[2,[1]],3]]]],[[]],[[]],[[]],[[9,3],10],[[]],[[]],[[]],0,0,[2,[[4,[11,3]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],12],[[],12],[[],12]],"p":[[3,"String"],[3,"Vec"],[15,"str"],[4,"Result"],[3,"Endpoint"],[6,"NetworkInterfaceRef"],[3,"BTreeSet"],[3,"DownloadedFile"],[4,"CrateSet"],[15,"bool"],[3,"Diff"],[3,"TypeId"]]},\
"owned_borrowed_trait":{"doc":"An abstraction over an owned value or borrowed reference …","t":[3,16,18,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Borrowed","Inner","OWNED","Owned","OwnedOrBorrowed","as_inner","as_inner","as_inner","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref","from","from","into","into","into_inner","into_inner","into_inner","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["owned_borrowed_trait","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A wrapper that indicates the contained value is a borrowed …","The inner type of the owned value or borrowed reference.","<code>true</code> if the wrapper type contains an owned value, i.e., …","A wrapper that indicates the contained value is an owned …","A trait for abstracting over an owned value or borrowed …","Returns a reference to the inner value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this wrapper type and returns the contained value …","","","","","","","",""],"i":[0,5,5,0,0,5,1,2,1,2,1,2,1,2,1,2,1,2,1,2,5,1,2,1,2,1,2,1,2],"f":[0,0,0,0,0,[[]],[1],[2],[1],[2],[[]],[[]],[[]],[[]],[1],[2],[[]],[[]],[[]],[[]],[[]],[1],[2],[[],3],[[],3],[[],3],[[],3],[[],4],[[],4]],"p":[[3,"Owned"],[3,"Borrowed"],[4,"Result"],[3,"TypeId"],[8,"OwnedOrBorrowed"]]},\
"page_allocator":{"doc":"Provides an allocator for virtual memory pages. The …","t":[3,3,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11],"n":["AllocatedPages","DeferredAllocAction","allocate_pages","allocate_pages_at","allocate_pages_by_bytes","allocate_pages_by_bytes_at","allocate_pages_by_bytes_deferred","allocate_pages_deferred","borrow","borrow","borrow_mut","borrow_mut","deref","drop","drop","empty","fmt","from","from","init","into","into","merge","split","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["page_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a range of allocated <code>VirtualAddress</code>es, …","A series of pending actions related to page allocator …","Allocates the given number of pages with no constraints on …","Allocates the given number of pages starting at (inclusive …","Allocates pages with no constraints on the starting …","Allocates pages starting at the given <code>VirtualAddress</code> with …","Similar to <code>allocated_pages_deferred()</code>, but accepts a size …","The core page allocation routine that allocates the given …","","","","","","","","Returns an empty AllocatedPages object that performs no …","","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the page allocator.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Merges the given <code>AllocatedPages</code> object <code>ap</code> into this …","Splits this <code>AllocatedPages</code> into two separate <code>AllocatedPages</code>…","","","","","",""],"i":[0,0,0,0,0,0,0,0,2,8,2,8,2,2,8,2,2,2,8,0,2,8,2,2,2,8,2,8,2,8],"f":[0,0,[1,[[3,[2]]]],[[4,1],[[6,[2,5]]]],[1,[[3,[2]]]],[[4,1],[[6,[2,5]]]],[[[3,[4]],1],[[6,[5]]]],[[[3,[4]],1],[[6,[5]]]],[[]],[[]],[[]],[[]],[2,7],[2],[8],[[],2],[[2,9],10],[[]],[[]],[4,[[6,[5]]]],[[]],[[]],[[2,2],[[6,[2]]]],[[2,11],[[6,[2]]]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12]],"p":[[15,"usize"],[3,"AllocatedPages"],[4,"Option"],[3,"VirtualAddress"],[15,"str"],[4,"Result"],[3,"PageRange"],[3,"DeferredAllocAction"],[3,"Formatter"],[6,"Result"],[3,"Page"],[3,"TypeId"]]},\
"page_attribute_table":{"doc":"Support for the Page Attribute Table (PAT) feature on x86.","t":[7,4,3,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11],"n":["FIXED_PAT","MemoryCachingType","PageAttributeTable","PatNotSupported","Uncacheable","UncachedMinus","WriteBack","WriteCombining","WriteProtected","WriteThrough","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","fmt","fmt","from","from","from","from","from_bytes","init","into","into","into","into_bytes","is_supported","new","pat_slot_index","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["page_attribute_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Theseus’s fixed <code>PageAttributeTable</code> has slots that align …","The various types of memory caching that x86 supports for …","The Page Attribute Table (PAT) consists of 8 “slots” …","An empty error type indicating that the Page Attribute …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","Sets up and enables the Page Attribute Table (PAT) for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","Returns <code>true</code> if the Page Attribute Table is supported on …","Returns an instance with zero initialized data.","Returns the index of the <code>PageAttributeTable</code> (PAT) slot …","","","","","","","","",""],"i":[0,0,0,0,2,2,2,2,2,2,1,2,5,1,2,5,1,2,2,5,1,1,2,5,1,0,1,2,5,1,0,1,2,1,2,5,1,2,5,1,2,5],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[2,3],4],[[5,3],4],[6,1],[[]],[[]],[[]],[[],1],[[],[[7,[5]]]],[[]],[[]],[[]],[1],[[],8],[[],1],[2,9],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10]],"p":[[3,"PageAttributeTable"],[4,"MemoryCachingType"],[3,"Formatter"],[6,"Result"],[3,"PatNotSupported"],[15,"u64"],[4,"Result"],[15,"bool"],[15,"u8"],[3,"TypeId"]],"a":{"mtrr":[1],"page attribute table":[1],"pat":[1]}},\
"page_table_entry":{"doc":"Defines the structure of Page Table Entries (PTEs) on …","t":[13,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Exclusive","NonExclusive","PageTableEntry","UnmapResult","UnmappedFrames","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","flags","from","from","from","into","into","into","is_unused","pointed_frame","set_entry","set_flags","set_unmapped","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","zero"],"q":["page_table_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A page table entry, which is a <code>u64</code> value under the hood.","The frames returned from the action of unmapping a page …","A range of frames that have been unmapped from a …","","","","","","","","Returns this <code>PageTableEntry</code>’s flags.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this entry is unused, i.e., cleared/zeroed …","Returns the physical <code>Frame</code> pointed to (mapped by) this …","Sets this <code>PageTableEntry</code> to map the given <code>frame</code> with the …","Sets the flags components of this <code>PageTableEntry</code> to …","Removes the mapping represented by this page table entry.","","","","","","","","","","","Zeroes out this entry, setting it as “unused”."],"i":[9,9,0,0,0,9,1,3,9,1,3,1,3,9,1,3,9,1,3,3,3,3,3,3,9,1,3,9,1,3,9,1,3,3,3],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[3,5],[3,[[7,[6]]]],[[3,8,4]],[[3,4]],[3,9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[3,12],[3]],"p":[[3,"UnmappedFrames"],[3,"FrameRange"],[3,"PageTableEntry"],[3,"PteFlagsX86_64"],[15,"bool"],[3,"Frame"],[4,"Option"],[3,"AllocatedFrame"],[4,"UnmapResult"],[4,"Result"],[3,"TypeId"],[15,"u64"]]},\
"panic_entry":{"doc":"Provides the default entry points and lang items for …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"panic_wrapper":{"doc":"Provides types and simple routines for handling panics. …","t":[5],"n":["panic_wrapper"],"q":["panic_wrapper"],"d":["Performs the standard panic handling routine, which …"],"i":[0],"f":[[1,[[3,[2]]]]],"p":[[3,"PanicInfo"],[15,"str"],[4,"Result"]]},\
"path":{"doc":"","t":[13,17,17,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CurrentDir","EXTENSION_DELIMITER","PATH_DELIMITER","ParentDir","Path","PathComponent","RootDir","as_string","basename","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","components","deref","deref_mut","eq","extension","file_stem","fmt","fmt","from","from","from","get","get_absolute","get_dir","get_file","hash","into","into","is_absolute","new","rcomponents","relative","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A structure that represents a relative or absolute path to …","","","","Returns just the file name, i.e., the trailling component …","","","","","","","Returns an iterator over the components of this <code>Path</code>, …","","","","Returns the file extension, if present.  If there are …","Like <code>basename()</code>, but excludes the file extension, if …","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the file or directory specified by the given path, ","Returns the file or directory specified by the given …","Returns the file specified by the given path, which can be …","Returns the file specified by the given path, which can be …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a boolean indicating whether this Path is absolute,","Creates a new <code>Path</code> from the given String.","Returns a reverse iterator over the components of this <code>Path</code>…","Returns a <code>Path</code> that expresses a relative path from this …","","","","","","","",""],"i":[1,0,0,1,0,0,1,1,3,1,3,1,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,1,3,1,3,1,3],"f":[0,0,0,0,0,0,0,[1,2],[3,4],[[]],[[]],[[]],[[]],[3,3],[[]],[3,5],[3,2],[3,2],[[3,3],6],[3,[[7,[4]]]],[3,4],[[3,8],9],[[3,8],[[11,[10]]]],[[]],[2,3],[[]],[[3,12],[[7,[13]]]],[3,[[7,[13]]]],[[3,12],[[7,[12]]]],[[3,12],[[7,[14]]]],[3],[[]],[[]],[3,6],[2,3],[3,5],[[3,3],[[7,[3]]]],[[]],[[],2],[[],11],[[],11],[[],11],[[],11],[[],15],[[],15]],"p":[[4,"PathComponent"],[3,"String"],[3,"Path"],[15,"str"],[8,"Iterator"],[15,"bool"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[6,"DirRef"],[4,"FileOrDir"],[6,"FileRef"],[3,"TypeId"]]},\
"pci":{"doc":"","t":[13,17,17,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,4,3,3,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,5,5,11,12,12,12,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["IoPort","MSIX_CAPABILITY","MSI_CAPABILITY","MemoryMapped","PCI_BAR0","PCI_BAR1","PCI_BAR2","PCI_BAR3","PCI_BAR4","PCI_BAR5","PCI_BIST","PCI_CACHE_LINE_SIZE","PCI_CAPABILITIES","PCI_CARDBUS_CIS","PCI_CLASS","PCI_COMMAND","PCI_DEVICE_ID","PCI_EXPANSION_ROM_BASE","PCI_HEADER_TYPE","PCI_INTERRUPT_LINE","PCI_INTERRUPT_PIN","PCI_LATENCY_TIMER","PCI_MAX_LATENCY","PCI_MIN_GRANT","PCI_PROG_IF","PCI_REVISION_ID","PCI_STATUS","PCI_SUBCLASS","PCI_SUBSYSTEM_ID","PCI_SUBSYSTEM_VENDOR_ID","PCI_VENDOR_ID","PciBus","PciConfigSpaceAccessMechanism","PciDevice","PciLocation","bars","bist","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","bus_number","cache_line_size","class","clone","clone_into","command","deref","deref_mut","determine_mem_base","determine_mem_size","device_id","devices","eq","find_pci_capability","fmt","fmt","fmt","fmt","from","from","from","from","function","get_pci_buses","get_pci_device_bsf","hash","header_type","int_line","int_pin","into","into","into","into","latency_timer","location","pci_device_iter","pci_enable_msi","pci_enable_msix","pci_map_bar_mem","pci_read_16","pci_read_32","pci_read_8","pci_set_command_bus_master_bit","pci_set_interrupt_disable_bit","pci_write","prog_if","revision_id","slot","status","subclass","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vendor_id"],"q":["pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A PCI bus, which contains a list of PCI devices on that …","Lists the 2 possible PCI configuration space access …","Contains information common to every type of PCI Device, …","The bus, slot, and function number of a given PCI device. …","The six Base Address Registers (BARs)","","","","","","","","","","","The number identifier of this PCI bus.","","The class code, used to determine device type.","","","","","","Returns the base address of the memory region specified by …","Returns the size in bytes of the memory region specified …","","The list of devices attached to this PCI bus.","","Explores the PCI config space and returns address of …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a list of all PCI buses in this system. If the PCI …","Returns a reference to the <code>PciDevice</code> with the given bus, …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","the bus, slot, and function number that locates this PCI …","Returns an iterator that iterates over all <code>PciDevice</code>s, in …","Enable MSI interrupts for a PCI device. We assume the …","Enable MSI-X interrupts for a PCI device. Only the enable …","Maps device memory specified by a Base Address Register.","Read 16-bit data at the specified <code>offset</code> from this PCI …","read 32-bit data at the specified <code>offset</code> from the PCI …","Read 8-bit data at the specified <code>offset</code> from the PCI …","Sets the PCI device’s bit 3 in the command portion, …","Sets the PCI device’s command bit 10 to disable legacy …","Write 32-bit data to the specified <code>offset</code> for the PCI …","The programming interface of this PCI device, also used to …","","","","The subclass code, used to determine device type.","","","","","","","","","","","","","","",""],"i":[21,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,21,11,1,3,21,11,1,3,1,11,3,3,1,1,3,3,3,3,3,3,11,1,1,11,1,1,3,21,11,1,3,1,0,0,1,3,3,3,21,11,1,3,3,3,0,3,3,3,1,1,1,1,1,1,3,3,1,3,3,1,1,21,11,1,3,21,11,1,3,21,11,1,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],0,0,0,[1,1],[[]],0,[3,1],[3,1],[[3,4],[[7,[5,6]]]],[[3,4],8],0,0,[[1,1],9],[[1,2],[[10,[2]]]],[[11,12],13],[[1,12],[[7,[14]]]],[[1,12],[[7,[14]]]],[[3,12],13],[[]],[[]],[[]],[[]],[1,2],[[],15],[[2,2,2],[[10,[3]]]],[1],0,0,0,[[]],[[]],[[]],[[]],0,0,[[],16],[[3,2,2],[[7,[6]]]],[3,[[7,[6]]]],[[3,4],[[7,[17,6]]]],[[1,2],18],[[1,2],8],[[1,2],2],[1],[1],[[1,2,8]],0,0,[1,2],0,0,[[]],[[],19],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],20],[[],20],[[],20],[[],20],0],"p":[[3,"PciLocation"],[15,"u8"],[3,"PciDevice"],[15,"usize"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[15,"u32"],[15,"bool"],[4,"Option"],[3,"PciBus"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Vec"],[8,"Iterator"],[3,"MappedPages"],[15,"u16"],[3,"String"],[3,"TypeId"],[4,"PciConfigSpaceAccessMechanism"]]},\
"per_cpu":{"doc":"Contains <code>PerCpuData</code>, the data stored on a per-CPU basis in …","t":[3,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["CpuLocalCpuId","PerCpuData","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","init","into","into","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["per_cpu","","","","","","","","","","","","","","","","",""],"d":["An immutable type wrapper for this CPU’s unique ID, kept …","The data stored on a per-CPU basis in Theseus.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the current CPU’s <code>PerCpuData</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,6,1,6,1,1,6,1,0,6,1,6,1,6,1,6,1],"f":[0,0,[[]],[[]],[[]],[[]],[1],[[]],[[]],[2,[[4,[3]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5]],"p":[[3,"CpuLocalCpuId"],[3,"CpuId"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"PerCpuData"]]},\
"percent_encoding":{"doc":"URLs use special chacters to indicate the parts of the …","t":[3,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["DEFAULT_ENCODE_SET","EncodeSet","PATH_SEGMENT_ENCODE_SET","PercentDecode","PercentEncode","QUERY_ENCODE_SET","SIMPLE_ENCODE_SET","USERINFO_ENCODE_SET","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","contains","contains","contains","contains","contains","decode_utf8","decode_utf8_lossy","define_encode_set","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","if_any","into","into","into","into","into","into","into","into_iter","into_iter","next","next","percent_decode","percent_encode","percent_encode_byte","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utf8_percent_encode"],"q":["percent_encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This encode set is used for path components.","Represents a set of characters / bytes that should be …","This encode set is used for on ‘/’-separated path …","The return type of <code>percent_decode()</code>.","The return type of <code>percent_encode()</code> and …","This encode set is used in the URL parser for query …","This encode set is used for the path of cannot-be-a-base …","This encode set is used for username and password.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called with UTF-8 bytes rather than code points. Should …","","","","","","Decode the result of percent-decoding as UTF-8.","Decode the result of percent-decoding as UTF-8, lossily.","Define a new struct that implements the <code>EncodeSet</code> trait, …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If the percent-decoding is different from the input, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Percent-decode the given bytes.","Percent-encode the given bytes with the given encode set.","Return the percent-encoding of the given bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Percent-encode the UTF-8 encoding of the given string."],"i":[0,0,0,0,0,0,0,0,1,2,3,4,5,8,9,1,2,3,4,5,8,9,1,2,3,4,5,8,9,1,2,3,4,5,8,9,7,1,2,3,4,5,9,9,0,1,2,3,4,5,8,8,9,1,2,3,4,5,8,9,9,1,2,3,4,5,8,9,8,9,8,9,0,0,0,8,9,1,2,3,4,5,8,9,8,1,2,3,4,5,8,9,1,2,3,4,5,8,9,1,2,3,4,5,8,9,0],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[[8,[[0,[6,7]]]]],[[8,[[0,[6,7]]]]]],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,11],[[1,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[[5,10],11],[9,[[15,[[13,[12]],14]]]],[9,[[13,[12]]]],0,[[1,16],17],[[2,16],17],[[3,16],17],[[4,16],17],[[5,16],17],[[[8,[[0,[18,7]]]],16],17],[[[8,[7]],16],17],[[9,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[20,[[19,[10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[20,[12]]]],[9,[[20,[10]]]],[[],9],[7,[[8,[7]]]],[10,12],[[[8,[7]]]],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[12,7],[[8,[7]]]]],"p":[[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[8,"Clone"],[8,"EncodeSet"],[3,"PercentEncode"],[3,"PercentDecode"],[15,"u8"],[15,"bool"],[15,"str"],[4,"Cow"],[3,"Utf8Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Vec"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"physical_nic":{"doc":"Defines a trait <code>PhysicalNic</code> that must be implemented by …","t":[8,10,10],"n":["PhysicalNic","return_rx_queues","return_tx_queues"],"q":["physical_nic","",""],"d":["This trait must be implemented by any NIC driver that …","Returns the <code>RxQueue</code>s owned by a virtual NIC back to the …","Returns the <code>TxQueue</code>s owned by a virtual NIC back to the …"],"i":[0,4,4],"f":[0,[[[2,[1]]]],[[[2,[3]]]]],"p":[[3,"RxQueue"],[3,"Vec"],[3,"TxQueue"],[8,"PhysicalNic"]]},\
"pic":{"doc":"Support for the x86 PIC (8259 Programmable Interrupt …","t":[3,17,3,17,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11],"n":["ChainedPics","IRQ_BASE_OFFSET","IrqStatusRegisters","PIC_SPURIOUS_INTERRUPT_IRQ","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","init","into","into","mask_irqs","master_irr","master_isr","notify_end_of_interrupt","read_isr_irr","slave_irr","slave_isr","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["pic","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A pair of chained PIC chips, which represents the standard …","The offset added to the first IRQ: <code>0x20</code>.","The set of status registers for both PIC chips.","The IRQ number reserved for spurious PIC interrupts (as …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new interface for the standard PIC1 and PIC2 …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Each mask is a bitwise mask for each IRQ line, with the …","","","Figure out which (if any) PICs in our chain need to know …","Reads the ISR and IRR registers of both the master and …","","","","","","","",""],"i":[0,0,0,0,1,5,1,5,1,1,1,5,5,1,5,5,1,1,5,5,1,1,1,5,1,5,1,5],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],3],[[1,2],3],[[]],[[]],[[4,4],5],[[]],[[]],[[5,4,4]],0,0,[[5,4]],[5,1],0,0,[[],6],[[],6],[[],6],[[],6],[[],7],[[],7]],"p":[[3,"IrqStatusRegisters"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"ChainedPics"],[4,"Result"],[3,"TypeId"]]},\
"pit_clock":{"doc":"Full support for the Programmable Interval Timer (PIT) …","t":[5,5],"n":["enable_interrupts","pit_wait"],"q":["pit_clock",""],"d":["Configures the PIT to fire an interrupt at the given …","Waits (blocking) for the given number of <code>microseconds</code> …"],"i":[0,0],"f":[[1,[[3,[2]]]],[1,[[3,[2]]]]],"p":[[15,"u32"],[15,"str"],[4,"Result"]]},\
"pit_clock_basic":{"doc":"Basic support for waiting using the Programmable Interval …","t":[17,7,7,17,17,5],"n":["CHANNEL0","PIT_CHANNEL_0","PIT_COMMAND","PIT_DEFAULT_DIVIDEND_HZ","PIT_MINIMUM_FREQ","pit_wait"],"q":["pit_clock_basic","","","","",""],"d":["Port for Channel 0; used for PIT interrupts.","","","the timer’s default frequency is 1.19 MHz","","Waits (blocking) for the given number of <code>microseconds</code> …"],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,[1,[[3,[2]]]]],"p":[[15,"u32"],[15,"str"],[4,"Result"]]},\
"pmu_x86":{"doc":"Support for the Performance Monitoring Unit ","t":[13,13,3,4,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,12,11,11,11,11,5,5,5,11,5,0,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BranchInstructionsRetired","BranchMissesRetired","Counter","EventType","InstructionsRetired","LastLevelCacheMisses","LastLevelCacheReferences","SampleResults","UnhaltedCoreCycles","UnhaltedReferenceCycles","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","diff","drop","end","find_function_names_from_samples","from","from","from","get_count_since_start","handle_sample","init","instruction_pointers","into","into","into","new","print_samples","reset_pmu","retrieve_samples","start","start_samples","stat","task_ids","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PMUResults","PerformanceCounters","borrow","borrow","borrow_mut","borrow_mut","end","fmt","from","from","into","into","new","start","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["pmu_x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pmu_x86::stat","","","","","","","","","","","","","","","","","","",""],"d":["This event counts branch instructions at retirement. It …","This event counts mispredicted branch instructions at …","A logical counter object to correspond to a physical PMC","Used to select the event type to count. Event types are …","This event counts the number of instructions at …","This event counts each cache miss condition for references …","This event counts requests originating from the core that …","Stores the instruction pointers and corresponding task IDs …","This event counts core clock cycles when the clock signal …","This event counts reference clock cycles at a fixed …","","","","","","","lightweight function with no checks to get the counter …","","Stops counting, releases the counter, and returns the …","Finds the corresponding function for each instruction …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Allows user to get count since start without …","This function is designed to be invoked from an interrupt …","Initialization function that enables the PMU if one is …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a Counter object and assigns a physical counter …","Simple function to print values from SampleResults in a …","Frees all counters and make them available to be used. …","Returns the samples that were stored during sampling in …","Starts the count.","Start interrupt process in order to take samples using the …","This module implements the equivalent of “perf stat”. …","","","","","","","","","","","","","","","","","Stop the counters and return the counter values. The …","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initialize seven performance monitoring counters. They …","Start running all the counters ","","","","","",""],"i":[8,8,0,0,8,8,8,0,8,8,8,1,5,8,1,5,1,1,1,0,8,1,5,1,0,0,5,8,1,5,1,0,0,0,1,0,0,5,8,1,5,8,1,5,8,1,5,0,0,13,14,13,14,13,14,13,14,13,14,13,13,13,14,13,14,13,14],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1],[1,[[4,[2,3]]]],[5,[[4,[3]]]],[[]],[[]],[[]],[1,[[4,[2,3]]]],[6,[[4,[7,3]]]],[[],[[4,[3]]]],0,[[]],[[]],[[]],[8,[[4,[1,3]]]],[5],[[],[[4,[3]]]],[[],[[4,[5,3]]]],[1,[[4,[3]]]],[[8,9,[11,[10]],9],[[4,[3]]]],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],[13,[[4,[14,3]]]],[[14,15],16],[[]],[[]],[[]],[[]],[[],[[4,[13,3]]]],[13,[[4,[3]]]],[[],4],[[],4],[[],4],[[],4],[[],12],[[],12]],"p":[[3,"Counter"],[15,"u64"],[15,"str"],[4,"Result"],[3,"SampleResults"],[3,"InterruptStackFrame"],[15,"bool"],[4,"EventType"],[15,"u32"],[15,"usize"],[4,"Option"],[3,"TypeId"],[3,"PerformanceCounters"],[3,"PMUResults"],[3,"Formatter"],[6,"Result"]]},\
"port_io":{"doc":"CPU-level input/output instructions, including <code>inb</code>, <code>outb</code>, …","t":[3,8,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,5,11,11,11,5,5,5,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Port","PortIn","PortOut","PortReadOnly","PortWriteOnly","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","inb","inl","into","into","into","inw","new","new","new","outb","outl","outw","port_address","port_address","port_address","port_in","port_out","read","read","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write"],"q":["port_io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A readable and writable I/O port over an arbitrary type …","This trait is defined for any type which can be read from …","This trait is defined for any type which can be read from …","A read-only I/O port over an arbitrary type supporting the …","A write-only I/O port over an arbitrary type supporting …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Read a <code>u8</code>-sized value from <code>port</code>.","Read a <code>u32</code>-sized value from <code>port</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read a <code>u16</code>-sized value from <code>port</code>.","Create a new I/O port.","Create a new read-only I/O port.","Create a new read-only I/O port.","Write a <code>u8</code>-sized <code>value</code> to <code>port</code>.","Write a <code>u32</code>-sized <code>value</code> to <code>port</code>.","Write a <code>u8</code>-sized <code>value</code> to <code>port</code>.","Returns the address of this port.","Returns the address of this port.","Returns the address of this port.","Read a value from the specified port.","Write a value to the specified port.","Read data of size <code>T</code> from the port.","Read data of size <code>T</code> from the port.","","","","","","","","","","Write data of size <code>T</code> to the port. This is unsafe because …","Write data of size <code>T</code> to the port. This is unsafe because …"],"i":[0,0,0,0,0,4,7,8,4,7,8,4,7,8,4,7,8,0,0,4,7,8,0,4,7,8,0,0,0,4,7,8,2,3,4,7,4,7,8,4,7,8,4,7,8,4,8],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2,3]]]],5],6],[[[7,[[0,[1,2]]]],5],6],[[[8,[[0,[1,3]]]],5],6],[[]],[[]],[[]],[9,10],[9,11],[[]],[[]],[[]],[9,9],[9,[[4,[[0,[2,3]]]]]],[9,[[7,[2]]]],[9,[[8,[3]]]],[[10,9]],[[11,9]],[[9,9]],[[[4,[[0,[2,3]]]]],9],[[[7,[2]]],9],[[[8,[3]]],9],[9],[9],[[[4,[[0,[2,3]]]]],[[0,[2,3]]]],[[[7,[2]]],2],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[[4,[[0,[2,3]]]],[0,[2,3]]]],[[[8,[3]],3]]],"p":[[8,"Debug"],[8,"PortIn"],[8,"PortOut"],[3,"Port"],[3,"Formatter"],[6,"Result"],[3,"PortReadOnly"],[3,"PortWriteOnly"],[15,"u16"],[15,"u8"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"ps2":{"doc":"Driver for the PS/2 interface, which supports legacy …","t":[13,13,13,13,3,3,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,4,4,4,4,13,13,13,13,4,3,13,13,13,13,4,4,3,3,3,4,13,4,3,3,3,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Acknowledge","AncientATKeyboard","ClockLineStuckHigh","ClockLineStuckLow","ControllerConfigurationByte","ControllerToHostStatus","Count1PerMm","Count2PerMm","Count4PerMm","Count8PerMm","DataLineStuckHigh","DataLineStuckLow","DeviceToHostResponse","DisableDataReporting","DisablePort1","DisablePort2","DisableScanning","EnableDataReporting","EnablePort1","EnablePort2","EnableScanning","Four","Four","Get","GetDeviceID","HostToControllerCommand","HostToKeyboardCommand","HostToKeyboardCommandOrData","HostToMouseCommand","HostToMouseCommandOrData","IdentifyKeyboard","KeyDetectionErrorOrInternalBufferOverrun1","KeyDetectionErrorOrInternalBufferOverrun2","KeyboardCommand","KeyboardType","LEDState","LEDState","MF2Keyboard","MF2KeyboardWithPSControllerTranslator","MouseCommand","MouseId","MousePacket","MousePacket3","MousePacket4","MousePacketGeneric","MouseResolution","MouseResolution","MouseSampleRate","PS2Controller","PS2Keyboard","PS2Mouse","Passed","PortTestResult","ReadData","ReadFromInternalRAMByte0","ResendByte","ResendByte","ResendCommand","Reset","ResetAndStartSelfTest","ResetWrapMode","ResponseToEcho","SampleRate","SampleRate","ScancodeSet","ScancodeSet","ScancodeSet","SelfTestFailed1","SelfTestFailed2","SelfTestPassed","Set1","Set2","Set3","SetDefaults","SetLEDStatus","SetRemoteMode","SetRepeatRateAndDelay","SetResolution","SetScaling","SetStreamMode","SetWrapMode","StatusRequest","TestController","TestPort1","TestPort2","Three","Three","WriteByteToPort2InputBuffer","WriteToInternalRAMByte0","Zero","Zero","_10","_100","_20","_200","_40","_60","_80","always_one","always_one","always_one_or_err","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_4","button_4","button_4_or_err","button_5","button_5","button_5_or_err","button_left","button_left","button_left_or_err","button_middle","button_middle","button_middle_or_err","button_right","button_right","button_right_or_err","caps_lock","caps_lock_or_err","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","flush_output_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","into_bytes","is_output_buffer_full","keyboard_detect","keyboard_ref","mouse_output_buffer_full","mouse_output_buffer_full_or_err","mouse_ref","new","new","new","new","new","new","new","new","number_lock","number_lock_or_err","port1_clock_disabled","port1_clock_disabled_or_err","port1_interrupt_enabled","port1_interrupt_enabled_or_err","port1_scancode_translation_enabled","port1_scancode_translation_enabled_or_err","port2_clock_disabled","port2_clock_disabled_or_err","port2_interrupt_enabled","port2_interrupt_enabled_or_err","read_config","read_controller_test_result","read_mouse_packet","read_scancode","reset","reset","scroll_lock","scroll_lock_or_err","scroll_movement","scroll_movement","scroll_movement","set_always_one","set_always_one_checked","set_button_4","set_button_4_checked","set_button_5","set_button_5_checked","set_button_left","set_button_left_checked","set_button_middle","set_button_middle_checked","set_button_right","set_button_right_checked","set_caps_lock","set_caps_lock_checked","set_keyboard_led","set_keyboard_scancode_set","set_mouse_id","set_mouse_output_buffer_full","set_mouse_output_buffer_full_checked","set_number_lock","set_number_lock_checked","set_port1_clock_disabled","set_port1_clock_disabled_checked","set_port1_interrupt_enabled","set_port1_interrupt_enabled_checked","set_port1_scancode_translation_enabled","set_port1_scancode_translation_enabled_checked","set_port2_clock_disabled","set_port2_clock_disabled_checked","set_port2_interrupt_enabled","set_port2_interrupt_enabled_checked","set_scroll_lock","set_scroll_lock_checked","status_register","test","test_port1","test_port2","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_always_one","with_always_one_checked","with_button_4","with_button_4_checked","with_button_5","with_button_5_checked","with_button_left","with_button_left_checked","with_button_middle","with_button_middle_checked","with_button_right","with_button_right_checked","with_caps_lock","with_caps_lock_checked","with_mouse_output_buffer_full","with_mouse_output_buffer_full_checked","with_number_lock","with_number_lock_checked","with_port1_clock_disabled","with_port1_clock_disabled_checked","with_port1_interrupt_enabled","with_port1_interrupt_enabled_checked","with_port1_scancode_translation_enabled","with_port1_scancode_translation_enabled_checked","with_port2_clock_disabled","with_port2_clock_disabled_checked","with_port2_interrupt_enabled","with_port2_interrupt_enabled_checked","with_scroll_lock","with_scroll_lock_checked","write_command","write_config","x_movement","x_movement","y_movement","y_movement"],"q":["psd":["","","","","Configuration values used to enable or disable features of …","","","","","","","","","","sets ControllerConfigurationByte <code>port1_clock_disabled</code>","sets ControllerConfigurationByte <code>port2_clock_disabled</code>","might also restore default parameters","","clears ControllerConfigurationByte <code>port1_clock_disabled</code>","clears ControllerConfigurationByte <code>port2_clock_disabled</code>","","","the mouse has scroll-movement, fourth and fifth buttons","","","Commands that can be sent to the PS/2 Controller.","","","","","","","","","","","","","","","See MousePacket and its enum variants for further …","","","","","","","","An initialized PS/2 controller that can be used to …","A reference to the PS/2 Keyboard connected to the PS/2 …","A reference to the PS/2 Mouse connected to the PS/2 …","","","","returns ControllerConfigurationByte","","","","","","","","","","","","","sent after “0xFF (reset)” command or keyboard power up","sent after “0xFF (reset)” command or keyboard power up","sent after “0xFF (reset)” command or keyboard power up","","","","","","","also called typematic","set MouseResolution","either to 1 or 2","","","","see PS2Controller::test","returns PortTestResult","returns PortTestResult","","the mouse has scroll-movement","sends next byte to the second PS/2 port","sets ControllerConfigurationByte","","the mouse has no scroll-movement","","","","","","","","Returns the value of always_one.","","Returns the value of always_one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of button_4.","","Returns the value of button_4.","Returns the value of button_5.","","Returns the value of button_5.","Returns the value of button_left.","","Returns the value of button_left.","Returns the value of button_middle.","","Returns the value of button_middle.","Returns the value of button_right.","","Returns the value of button_right.","Returns the value of caps_lock.","Returns the value of caps_lock.","","","","","","","","","","","","","","","","","","","","","Clean the data port output buffer, skipping the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","","Converts the given bytes directly into the bitfield struct.","Converts the given bytes directly into the bitfield struct.","Initializes the PS/2 controller, and the first and second …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","","Returns the underlying bits.","Returns the underlying bits.","Returns the underlying bits.","Returns <code>true</code> if there is content in the PS/2 Mouse’s …","Detect the KeyboardType.","Returns a reference to the keyboard attached to this PS/2 …","Returns the value of mouse_output_buffer_full. Similar to …","Returns the value of mouse_output_buffer_full.","Returns a reference to the mouse attached to this PS/2 …","Create a new reference to the mouse connected to the given …","Create a new reference to the keyboard connected to the …","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns an instance with zero initialized data.","Returns the value of number_lock.","Returns the value of number_lock.","Returns the value of port1_clock_disabled. disables the …","Returns the value of port1_clock_disabled.","Returns the value of port1_interrupt_enabled. interrupt on …","Returns the value of port1_interrupt_enabled.","Returns the value of port1_scancode_translation_enabled. …","Returns the value of port1_scancode_translation_enabled.","Returns the value of port2_clock_disabled. disables the …","Returns the value of port2_clock_disabled.","Returns the value of port2_interrupt_enabled. interrupt on …","Returns the value of port2_interrupt_enabled.","Reads and returns the current config value from the PS/2 …","must only be called after writing the TestController …","read the correct MousePacket according to MouseId","Reads a raw scancode value from the PS/2 controller’s …","Reset the mouse.","Reset the keyboard.","Returns the value of scroll_lock.","Returns the value of scroll_lock.","often called <code>z_movement</code>, renamed to disambiguate","often called <code>z_movement</code>, renamed to disambiguate","","Sets the value of always_one to the given value.","Sets the value of always_one to the given value.","Sets the value of button_4 to the given value.","Sets the value of button_4 to the given value.","Sets the value of button_5 to the given value.","Sets the value of button_5 to the given value.","Sets the value of button_left to the given value.","Sets the value of button_left to the given value.","Sets the value of button_middle to the given value.","Sets the value of button_middle to the given value.","Sets the value of button_right to the given value.","Sets the value of button_right to the given value.","Sets the value of caps_lock to the given value.","Sets the value of caps_lock to the given value.","Set the status LEDs on the keyboard.","Set the active scancode set currently used by the keyboard.","set <code>self.id</code> to the highest possible MouseId by magic …","Sets the value of mouse_output_buffer_full to the given …","Sets the value of mouse_output_buffer_full to the given …","Sets the value of number_lock to the given value.","Sets the value of number_lock to the given value.","Sets the value of port1_clock_disabled to the given value.","Sets the value of port1_clock_disabled to the given value.","Sets the value of port1_interrupt_enabled to the given …","Sets the value of port1_interrupt_enabled to the given …","Sets the value of port1_scancode_translation_enabled to …","Sets the value of port1_scancode_translation_enabled to …","Sets the value of port2_clock_disabled to the given value.","Sets the value of port2_clock_disabled to the given value.","Sets the value of port2_interrupt_enabled to the given …","Sets the value of port2_interrupt_enabled to the given …","Sets the value of scroll_lock to the given value.","Sets the value of scroll_lock to the given value.","Reads the PS/2 status port.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of button_4 …","Returns a copy of the bitfield with the value of button_4 …","Returns a copy of the bitfield with the value of button_5 …","Returns a copy of the bitfield with the value of button_5 …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of caps_lock …","Returns a copy of the bitfield with the value of caps_lock …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Returns a copy of the bitfield with the value of …","Writes a command to the PS/2 command port.","Writes the given config <code>value</code> to the PS/2 controller.","<code>x_1st_to_8th_bit</code> and <code>x_9th_bit</code> should not be accessed …","","<code>y_1st_to_8th_bit</code> and <code>y_9th_bit</code> should not be accessed …",""],"i":[21,28,30,30,0,0,16,16,16,16,30,30,0,14,33,33,11,14,33,33,11,2,17,12,14,0,0,0,0,0,11,21,21,10,0,0,10,28,28,13,0,0,0,0,0,0,13,0,0,0,0,30,0,14,33,11,14,21,14,11,14,21,13,14,0,10,11,21,21,21,12,12,12,14,11,14,11,14,14,14,14,14,33,33,33,2,17,33,33,2,17,15,15,15,15,15,15,15,1,2,1,18,26,27,33,28,23,9,30,21,10,11,8,12,13,14,1,22,6,2,15,17,16,18,26,27,33,28,23,9,30,21,10,11,8,12,13,14,1,22,6,2,15,17,16,6,2,6,6,2,6,1,2,1,1,2,1,1,2,1,8,8,9,10,11,8,12,13,14,15,16,9,10,11,8,12,13,14,15,16,12,17,18,9,21,10,11,8,12,13,14,1,22,6,2,15,17,16,18,26,27,33,28,23,9,30,21,10,11,8,12,13,14,1,22,6,2,15,17,16,23,9,8,1,1,22,6,0,18,26,27,33,28,23,9,30,21,10,11,8,12,13,14,1,22,6,2,15,17,16,23,9,8,1,1,22,6,26,27,18,23,23,18,26,27,23,9,8,1,22,6,8,8,9,9,9,9,9,9,9,9,9,9,18,18,26,27,26,27,8,8,22,6,2,1,1,6,6,6,6,1,1,1,1,1,1,8,8,27,27,26,23,23,8,8,9,9,9,9,9,9,9,9,9,9,8,8,18,18,18,18,9,10,11,8,12,13,14,15,16,18,26,27,33,28,23,9,30,30,21,21,10,11,8,12,12,13,14,1,22,6,2,15,17,17,16,30,21,12,17,18,26,27,33,28,23,9,30,21,10,11,8,12,13,14,1,22,6,2,15,17,16,18,26,27,33,28,23,9,30,21,10,11,8,12,13,14,1,22,6,2,15,17,16,1,1,6,6,6,6,1,1,1,1,1,1,8,8,23,23,8,8,9,9,9,9,9,9,9,9,9,9,8,8,18,18,1,2,1,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,3],[1,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[2,7],[6,[[5,[4]]]],[6],[2,7],[6,[[5,[4]]]],[1],[2,7],[1,[[5,[4]]]],[1],[2,7],[1,[[5,[4]]]],[1],[2,7],[1,[[5,[4]]]],[8],[8,[[5,[4]]]],[9,9],[10,10],[11,11],[8,8],[12,12],[13,13],[14,14],[15,15],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],7],[[17,17],7],[18],[[9,19],20],[[21,19],20],[[10,19],20],[[11,19],20],[[8,19],20],[[12,19],20],[[13,19],20],[[14,19],20],[[1,19],20],[[22,19],20],[[6,19],20],[[2,19],20],[[15,19],20],[[17,19],20],[[16,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],9],[[],8],[[],1],[[],[[5,[4]]]],[[],22],[[],6],[[],[[5,[18,24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[9],[8],[[],[[5,[25]]]],[1],[22],[6],[26,7],[27,[[5,[28,24]]]],[18,27],[23],[23,[[5,[4]]]],[18,26],[18,26],[18,27],[[],23],[[],9],[[],8],[[],1],[[],22],[[],6],[8],[8,[[5,[4]]]],[9],[9,[[5,[4]]]],[9],[9,[[5,[4]]]],[9],[9,[[5,[4]]]],[9],[9,[[5,[4]]]],[9],[9,[[5,[4]]]],[18,9],[18,[[5,[24]]]],[26,2],[27,3],[26,[[5,[24]]]],[27,[[5,[24]]]],[8],[8,[[5,[4]]]],[22,29],[6,29],[2,29],[1],[1,[[5,[25]]]],[6],[6,[[5,[25]]]],[6],[6,[[5,[25]]]],[1],[1,[[5,[25]]]],[1],[1,[[5,[25]]]],[1],[1,[[5,[25]]]],[8],[8,[[5,[25]]]],[[27,8],[[5,[24]]]],[[27,12],[[5,[24]]]],[26,[[5,[24]]]],[23],[23,[[5,[25]]]],[8],[8,[[5,[25]]]],[9],[9,[[5,[25]]]],[9],[9,[[5,[25]]]],[9],[9,[[5,[25]]]],[9],[9,[[5,[25]]]],[9],[9,[[5,[25]]]],[8],[8,[[5,[25]]]],[18,23],[18,[[5,[24]]]],[18,[[5,[24]]]],[18,[[5,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[3,[[5,[30,[31,[30]]]]]],[[],5],[[],5],[3,[[5,[21,[31,[21]]]]]],[[],5],[[],5],[[],5],[[],5],[3,[[5,[12,[31,[12]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[3,[[5,[17,[31,[17]]]]]],[[],5],[[],5],[[],[[5,[30,[31,[30]]]]]],[[],[[5,[21,[31,[21]]]]]],[[],[[5,[12,[31,[12]]]]]],[[],[[5,[17,[31,[17]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[1,1],[1,[[5,[1,25]]]],[6,6],[6,[[5,[6,25]]]],[6,6],[6,[[5,[6,25]]]],[1,1],[1,[[5,[1,25]]]],[1,1],[1,[[5,[1,25]]]],[1,1],[1,[[5,[1,25]]]],[8,8],[8,[[5,[8,25]]]],[23,23],[23,[[5,[23,25]]]],[8,8],[8,[[5,[8,25]]]],[9,9],[9,[[5,[9,25]]]],[9,9],[9,[[5,[9,25]]]],[9,9],[9,[[5,[9,25]]]],[9,9],[9,[[5,[9,25]]]],[9,9],[9,[[5,[9,25]]]],[8,8],[8,[[5,[8,25]]]],[[18,33]],[[18,9]],[1,34],[2,34],[1,34],[2,34]],"p":[[3,"MousePacketGeneric"],[4,"MousePacket"],[15,"u8"],[3,"InvalidBitPattern"],[4,"Result"],[3,"MousePacket4"],[15,"bool"],[3,"LEDState"],[3,"ControllerConfigurationByte"],[4,"HostToKeyboardCommandOrData"],[4,"HostToKeyboardCommand"],[4,"ScancodeSet"],[4,"HostToMouseCommandOrData"],[4,"HostToMouseCommand"],[4,"MouseSampleRate"],[4,"MouseResolution"],[4,"MouseId"],[3,"PS2Controller"],[3,"Formatter"],[6,"Result"],[4,"DeviceToHostResponse"],[3,"MousePacket3"],[3,"ControllerToHostStatus"],[15,"str"],[3,"OutOfBounds"],[3,"PS2Mouse"],[3,"PS2Keyboard"],[4,"KeyboardType"],[15,"i8"],[4,"PortTestResult"],[3,"TryFromPrimitiveError"],[3,"TypeId"],[4,"HostToControllerCommand"],[15,"i16"]]},\
"pte_flags":{"doc":"This crate defines the structure of page table entry (PTE) …","tn":["ACCESSED","ACCESSED","ACCESSED","CACHE_DISABLE","DEVICE_MEMORY","DEVICE_MEMORY","DEVICE_MEMORY","DIRTY","DIRTY","DIRTY","EXCLUSIVE","EXCLUSIVE","EXCLUSIVE","HUGE_PAGE","MASKED_BITS_FOR_CONVERSION","NORMAL_MEMORY","NOT_EXECUTABLE","NOT_EXECUTABLE","NOT_EXECUTABLE","OUTER_SHAREABLE","PAGE_DESCRIPTOR","PAT_BIT0","PAT_BIT1","PAT_BIT2_FOR_P1","PTE_FRAME_MASK","PteFlags","PteFlagsAarch64","PteFlagsArch","PteFlagsX86_64","READ_ONLY","VALID","VALID","VALID","WRITABLE","WRITABLE","WRITE_THROUGH","_CONTIGUOUS","_GLOBAL","_GLOBAL","_GUARDED_PAGE","_INNER_SHAREABLE","_MAIR_INDEX_0","_MAIR_INDEX_1","_MAIR_INDEX_2","_MAIR_INDEX_3","_MAIR_INDEX_4","_MAIR_INDEX_5","_MAIR_INDEX_6","_MAIR_INDEX_7","_NON_SECURE_ACCESS","_NON_SHAREABLE","_NOT_GLOBAL","_PRIV_EXEC_NEVER","_USER_ACCESSIBLE","_USER_ACCESSIBLE","_USER_ACCESSIBLE","_USER_EXEC_NEVER","accessed","accessed","accessed","adjust_for_higher_level_pte","adjust_for_higher_level_pte","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","default","default","default","device_memory","device_memory","device_memory","difference","difference","difference","dirty","dirty","dirty","empty","empty","empty","eq","eq","eq","exclusive","exclusive","exclusive","executable","executable","executable","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","get_pat_index","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","is_accessed","is_accessed","is_accessed","is_all","is_all","is_all","is_device_memory","is_device_memory","is_device_memory","is_dirty","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_exclusive","is_exclusive","is_exclusive","is_executable","is_executable","is_executable","is_huge","is_page_descriptor","is_valid","is_valid","is_valid","is_writable","is_writable","is_writable","new","new","new","not","not","not","page_descriptor","partial_cmp","partial_cmp","partial_cmp","pat_index","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","union","valid","valid","valid","writable","writable","writable"],"q":["pte_flagsd":["The hardware will set this bit when the page is accessed.…","The hardware will set this bit when the page is accessed.…","The hardware will set this bit when the page is accessed.…","If set, this page’s content is never cached, neither for …","If set, this page maps device memory, which is …","This page maps device memory, i.e., memory-mapped I/O …","An alias for <code>Self::CACHE_DISABLE</code> in order to ease …","The hardware will set this bit when the page has been …","The hardware will set this bit when the page has been …","The hardware will set this bit when the page has been …","Note: code that invokes memory management functions in …","See PteFlags::EXCLUSIVE. We use bit 55 because it is …","See PteFlags::EXCLUSIVE. We use bit 55 because it is …","If set, this page table entry represents a “huge” …","The mask of bit ranges that cannot be handled by toggling, …","This page maps “normal” memory, i.e., non-device …","If set, this page is not executable.If not set, this page …","If set, this page is not executable.If not set, this page …","If set, this page is not executable.If not set, this page …","Indicates that multiple CPUs from multiple clusters may …","If set, this represents a page descriptor.If not set, this …","","","(For P1-level (lowest level) page tables ONLY): If the …","A mask for the bits of a page table entry that contain the …","Common, architecture-independent flags for a page table …","Page table entry (PTE) flags on aarch64.","Page table entry (PTE) flags on x86_64.","Page table entry (PTE) flags on x86_64.","If set, this page is read-only.If not set, this page is …","If set, this page is currently “present” in memory. If …","If set, this page is currently “present” in memory. If …","If set, this page is currently “present” in memory. If …","If set, this page is writable.If not set, this page is …","If set, this page is writable.If not set, this page is …","If set, writes to this page go directly to memory.It not …","If set, this translation table entry is part of a set that …","If set, this page is mapped identically across all address …","If set, this page is mapped identically across all address …","If set, this page is considered a “Guarded Page”, …","Multiple cores from the same cluster can access this page. …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","Indicates the page’s cacheability is described by MAIR …","If set, this page is accessible in both Secure and …","Indicates that only a single CPU core may access this page.","If set, this page is mapped into only one or less than all …","If set, this page is not executable by privileged levels …","If set, userspace (unprivileged mode) can access this page.…","If set, userspace (unprivileged mode) can access this page.…","If set, userspace (ring 3) can access this page.If not …","If set, this page is not executable by unprivileged levels …","Returns a copy of this <code>PteFlags</code> with the <code>ACCESSED</code> bit set …","Returns a copy of this <code>PteFlagsAarch64</code> with the <code>ACCESSED</code> …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>ACCESSED</code> …","Returns a copy of this <code>PteFlagsAarch64</code> with its flags …","Returns a copy of this <code>PteFlagsX86_64</code> with its flags …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Returns a copy of this <code>PteFlags</code> with the <code>DEVICE_MEMORY</code> bit …","Returns a copy of this <code>PteFlagsAarch64</code> with the …","Returns a copy of this <code>PteFlagsX86_64</code> with the …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a copy of this <code>PteFlags</code> with the <code>DIRTY</code> bit set or …","Returns a copy of this <code>PteFlagsAarch64</code> with the <code>DIRTY</code> bit …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>DIRTY</code> bit …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","Returns a copy of this <code>PteFlags</code> with the <code>EXCLUSIVE</code> bit set …","Returns a copy of this <code>PteFlagsAarch64</code> with the <code>EXCLUSIVE</code> …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>EXCLUSIVE</code> …","Returns a copy of this <code>PteFlags</code> with the <code>NOT_EXECUTABLE</code> …","Returns a copy of this <code>PteFlagsAarch64</code> with the …","Returns a copy of this <code>PteFlagsX86_64</code> with the …","","","","","","","","","","","","","","","","","","","This conversion clears the <code>PAGE_DESCRIPTOR</code> bit, which is …","","Returns the argument unchanged.","Returns the argument unchanged.","When converting from <code>PteFlags</code> to <code>PteFlagsAarch64</code>, some …","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","","","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","Returns a new <code>PteFlags</code> with the default value, in which:","Returns a new <code>PteFlagsAarch64</code> with the default value, in …","Returns a new <code>PteFlagsX86_64</code> with the default value, in …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns a copy of this <code>PteFlagsAarch64</code> with the …","","","","Returns a copy of this <code>PteFlagsX86_64</code> with the PAT index …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns a copy of this <code>PteFlags</code> with the <code>VALID</code> bit set or …","Returns a copy of this <code>PteFlagsAarch64</code> with the <code>VALID</code> bit …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>VALID</code> bit …","Returns a copy of this <code>PteFlags</code> with the <code>WRITABLE</code> bit set …","Returns a copy of this <code>PteFlagsAarch64</code> with the <code>WRITABLE</code> …","Returns a copy of this <code>PteFlagsX86_64</code> with the <code>WRITABLE</code> …"],"i":[1,3,4,4,1,3,4,1,3,4,1,3,4,4,3,3,1,3,4,3,3,4,4,4,0,0,0,0,0,3,1,3,4,1,4,4,3,1,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,4,3,1,3,4,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,1,1,1,1,3,3,3,3,3,4,4,4,4,4,1,1,1,3,3,4,4,1,3,4,1,3,4,1,3,4,1,3,4,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,4,3,1,3,4,1,3,4,1,3,4,1,3,4,3,1,3,4,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4,1,3,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[3,2],3],[[4,2],4],[3,3],[4,4],[[],1],[[],3],[[],4],[[1,1],1],[[3,3],3],[[4,4],4],[[1,1]],[[3,3]],[[4,4]],[[1,1],1],[[3,3],3],[[4,4],4],[[1,1]],[[3,3]],[[4,4]],[1,5],[3,5],[4,5],[[1,1],1],[[3,3],3],[[4,4],4],[[1,1]],[[3,3]],[[4,4]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[4,4],[[1,1],6],[[3,3],6],[[4,4],6],[1,1],[3,3],[4,4],[[1,1],2],[[3,3],2],[[4,4],2],[[],1],[[],3],[[],4],[[1,2],1],[[3,2],3],[[4,2],4],[[1,1],1],[[3,3],3],[[4,4],4],[[1,2],1],[[3,2],3],[[4,2],4],[[],1],[[],3],[[],4],[[1,1],2],[[3,3],2],[[4,4],2],[[1,2],1],[[3,2],3],[[4,2],4],[[1,2],1],[[3,2],3],[[4,2],4],[[1,7]],[[3,7]],[[4,7]],[[1,8],9],[[1,8],9],[[1,8],9],[[1,8],9],[[1,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[4,8],9],[[4,8],9],[[4,8],9],[[4,8],9],[[4,8],9],[3,1],[4,1],[[]],[[]],[1,3],[[]],[1,4],[5,[[10,[1]]]],[5,[[10,[3]]]],[5,[[10,[4]]]],[5,1],[5,3],[5,4],[5,1],[5,3],[5,4],[7,1],[7,3],[7,4],[4,11],[1],[3],[4],[[1,1]],[[3,3]],[[4,4]],[[1,1],1],[[3,3],3],[[4,4],4],[[1,1],2],[[3,3],2],[[4,4],2],[[]],[[]],[[]],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[4,2],[3,2],[1,2],[3,2],[4,2],[1,2],[3,2],[4,2],[[],1],[[],3],[[],4],[1,1],[3,3],[4,4],[[3,2],3],[[1,1],[[10,[6]]]],[[3,3],[[10,[6]]]],[[4,4],[[10,[6]]]],[[4,11],4],[[1,1]],[[3,3]],[[4,4]],[[1,1,2]],[[3,3,2]],[[4,4,2]],[[1,1],1],[[3,3],3],[[4,4],4],[[1,1]],[[3,3]],[[4,4]],[[1,1],1],[[3,3],3],[[4,4],4],[[1,1]],[[3,3]],[[4,4]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[1,1],1],[[3,3],3],[[4,4],4],[[1,2],1],[[3,2],3],[[4,2],4],[[1,2],1],[[3,2],3],[[4,2],4]],"p":[[3,"PteFlags"],[15,"bool"],[3,"PteFlagsAarch64"],[3,"PteFlagsX86_64"],[15,"u64"],[4,"Ordering"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"u8"],[4,"Result"],[3,"TypeId"]],"a":{"block":[203,216],"block descriptor":[203,216],"cache":[107,108,109,187,188,189],"cacheable":[107,108,109,187,188,189],"no_exec":[125,126,127,199,200,201],"non-cacheable":[107,108,109,187,188,189],"page attribute table":[165,220],"pat":[165,220],"present":[204,205,206,251,252,253],"read_only":[207,208,209,254,255,256],"slot":[165,220]}},\
"random":{"doc":"A cryptographically secure source of randomness.","t":[18,3,18,11,11,11,5,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11],"n":["CUSTOM_START","Error","INTERNAL_START","borrow","borrow_mut","code","fill_bytes","fmt","fmt","from","from","from","init_rng","into","next_u32","next_u64","raw_os_error","to_string","try_from","try_into","type_id","vzip"],"q":["random","","","","","","","","","","","","","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","","","Retrieve the error code, if any.","Fills <code>dest</code> with random data.","","","","Returns the argument unchanged.","","Initialises a <code>T</code> RNG.","Calls <code>U::from(self)</code>.","Returns a random <code>u32</code>.","Returns a random <code>u64</code>.","Extract the raw OS error code (if this error came from the …","","","","",""],"i":[1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1],"f":[0,0,0,[[]],[[]],[1,[[3,[2]]]],[[]],[[1,4],[[6,[5]]]],[[1,4],[[6,[5]]]],[2,1],[[]],[7,1],[[],[[6,[1]]]],[[]],[[],8],[[],9],[1,[[3,[10]]]],[[],11],[[],6],[[],6],[[],12],[[]]],"p":[[3,"Error"],[3,"NonZeroU32"],[4,"Option"],[3,"Formatter"],[3,"Error"],[4,"Result"],[4,"ErrorCode"],[15,"u32"],[15,"u64"],[15,"i32"],[3,"String"],[3,"TypeId"]]},\
"rendezvous":{"doc":"A rendezvous-based channel for synchronous Inter-Task …","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Receiver","Sender","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","new_channel","new_channel_with","receive","send","to_owned","to_owned","try_from","try_from","try_into","try_into","try_receive","try_send","type_id","type_id"],"q":["rendezvous","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The receiver side of a channel.","The sender (transmit) side of a channel.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new rendezvous channel with the default deadlock …","Creates a new rendezvous channel with the specified …","Receive a message, blocking until a sender is ready. ","Send a message, blocking until a receiver is ready.","","","","","","","Tries to receive a message, only succeeding if a sender is …","Tries to send the message, only succeeding if a receiver …","",""],"i":[0,0,4,5,4,5,4,5,4,5,4,5,4,5,0,0,5,4,4,5,4,5,4,5,5,4,4,5],"f":[0,0,[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]],[0,[1,3]]]]],[[4,[[0,[1,2]],[0,[1,3]]]]]],[[[5,[[0,[1,2]],[0,[1,3]]]]],[[5,[[0,[1,2]],[0,[1,3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[2,3]]],[[7,[2,6]]]],[[[4,[2,3]],2],[[7,[6]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[[5,[2,3]]],[[7,[2,6]]]],[[[4,[2,3]],2],[[7,[2]]]],[[],8],[[],8]],"p":[[8,"Clone"],[8,"Send"],[8,"DeadlockPrevention"],[3,"Sender"],[3,"Receiver"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"root":{"doc":"This crate contains the implementation of the special root …","t":[3,17,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ROOT","ROOT_DIRECTORY_NAME","RootDirectory","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","get","get_absolute_path","get_name","get_parent_dir","get_root","insert","into","into","list","remove","set_parent_dir","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["root","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The root directory Returns a tuple for easy access to the …","","A struct that represents a node in the VFS ","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Recursively gets the absolute pathname as a String","","we just return the root itself because it is the top of …","Returns a reference to the root directory.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,2,1,2,1,1,2,1,2,2,2,2,0,2,2,1,2,2,2,2,1,2,1,2,1],"f":[0,0,0,[[]],[[]],[[]],[[]],[1],[[]],[[]],[[2,3],[[5,[4]]]],[2,6],[2,6],[2,[[5,[7]]]],[[],7],[[2,4],[[8,[[5,[4]],3]]]],[[]],[[]],[2,[[9,[6]]]],[[2,4],[[5,[4]]]],[[2,10]],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11]],"p":[[3,"ROOT"],[3,"RootDirectory"],[15,"str"],[4,"FileOrDir"],[4,"Option"],[3,"String"],[6,"DirRef"],[4,"Result"],[3,"Vec"],[6,"WeakDirRef"],[3,"TypeId"]]},\
"rsdp":{"doc":"Support for ACPI RSDP (Root System Descriptor Pointer).","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Rsdp","borrow","borrow_mut","clone","clone_into","fmt","from","from_address","get_rsdp","into","sdt_address","to_owned","try_from","try_into","type_id"],"q":["rsdp","","","","","","","","","","","","","",""],"d":["The Root System Descriptor Pointer, which contains the …","","","","","","Returns the argument unchanged.","","Search for the RSDP in the BIOS memory area from 0xE_0000 …","Calls <code>U::from(self)</code>.","Returns the <code>PhysicalAddress</code> of the RSDT or XSDT.","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,2],3],[[]],[[4,5],[[8,[[6,[1]],7]]]],[5,[[8,[[6,[1]],7]]]],[[]],[1,4],[[]],[[],8],[[],8],[[],9]],"p":[[3,"Rsdp"],[3,"Formatter"],[6,"Result"],[3,"PhysicalAddress"],[3,"PageTable"],[3,"BorrowedMappedPages"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"rsdt":{"doc":"Definitions for the ACPI RSDT and XSDT system tables.","t":[17,3,17,11,11,11,11,11,5,11,11,11,11,11],"n":["RSDT_SIGNATURE","RsdtXsdt","XSDT_SIGNATURE","addresses","borrow","borrow_mut","from","get","handle","into","sdt","try_from","try_into","type_id"],"q":["rsdt","","","","","","","","","","","","",""],"d":["","The Root/Extended System Descriptor Table, RSDT or XSDT.  …","","Returns an <code>Iterator</code> over the <code>PhysicalAddress</code>es of the SDT …","","","Returns the argument unchanged.","Finds the RSDT or XSDT in the given <code>AcpiTables</code> and returns …","The handler for parsing RSDT/XSDT tables and adding them …","Calls <code>U::from(self)</code>.","Returns a reference to the SDT header of this RSDT or XSDT.","","",""],"i":[0,0,0,1,1,1,1,1,0,1,1,1,1,1],"f":[0,0,0,[1,2],[[]],[[]],[[]],[3,[[4,[1]]]],[[3,5,6,7],[[9,[8]]]],[[]],[1,10],[[],9],[[],9],[[],11]],"p":[[3,"RsdtXsdt"],[8,"Iterator"],[3,"AcpiTables"],[4,"Option"],[6,"AcpiSignature"],[15,"usize"],[3,"PhysicalAddress"],[15,"str"],[4,"Result"],[3,"Sdt"],[3,"TypeId"]]},\
"rtc":{"doc":"","t":[3,6,3,11,11,11,11,12,5,11,11,11,11,11,5,12,11,11,12,12,5,12,5,11,11,11,11,11,11,11,12],"n":["InvalidRtcRate","RtcInterruptFunction","RtcTime","borrow","borrow","borrow_mut","borrow_mut","days","enable_rtc_interrupt","fmt","fmt","fmt","from","from","get_rtc_ticks","hours","into","into","minutes","months","read_rtc","seconds","set_rtc_frequency","to_string","try_from","try_from","try_into","try_into","type_id","type_id","years"],"q":["rtc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The error returned from <code>set_rtc_frequency()</code> if an invalid …","","A timestamp obtained from the real-time clock.","","","","","","turn on IRQ 8 (mapped to 0x28), rtc begins sending …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current RTC tick count.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Sets the period of the RTC interrupt to the given <code>rate</code>.","","","","","","","",""],"i":[0,0,0,1,6,1,6,1,0,1,1,6,1,6,0,1,1,6,1,1,0,1,0,1,1,6,1,6,1,6,1],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[1,2],3],[[1,2],[[5,[4]]]],[[6,2],3],[[]],[[]],[[],[[8,[7]]]],0,[[]],[[]],0,0,[[],1],0,[7,[[5,[6]]]],[[],9],[[],5],[[],5],[[],5],[[],5],[[],10],[[],10],0],"p":[[3,"RtcTime"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[3,"InvalidRtcRate"],[15,"usize"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"runqueue":{"doc":"This crate contains the API of the <code>RunQueue</code> structure, …","t":[5,5,5,5,5,5],"n":["add_task_to_any_runqueue","add_task_to_specific_runqueue","get_least_busy_core","get_runqueue","init","remove_task_from_all"],"q":["runqueue","","","","",""],"d":["Chooses the “least busy” core’s runqueue and adds …","Adds the given <code>Task</code> reference to given core’s runqueue.","Returns the “least busy” core","Returns the <code>RunQueue</code> of the given core, which is an <code>apic_id</code>…","Creates a new <code>RunQueue</code> for the given core, which is an …","Removes a <code>TaskRef</code> from all <code>RunQueue</code>s that exist on the …"],"i":[0,0,0,0,0,0],"f":[[1,[[3,[2]]]],[[4,1],[[3,[2]]]],[[],[[5,[4]]]],[4,[[5,[6]]]],[4,[[3,[2]]]],[1,[[3,[2]]]]],"p":[[3,"TaskRef"],[15,"str"],[4,"Result"],[15,"u8"],[4,"Option"],[3,"RwLockPreempt"]]},\
"runqueue_priority":{"doc":"This crate contains the <code>RunQueue</code> structure, for priority …","t":[17,17,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11],"n":["DEFAULT_PRIORITY","INITIAL_TOKENS","MAX_PRIORITY","PriorityTaskRef","RunQueue","add_task_to_any_runqueue","add_task_to_specific_runqueue","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","fmt","fmt","from","from","get_least_busy_core","get_priority","get_runqueue","increment_context_switches","init","into","into","new","priority","remove_task","remove_task_from_all","set_priority","to_owned","tokens_remaining","try_from","try_from","try_into","try_into","type_id","type_id","update_and_move_to_end"],"q":["runqueue_priority","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","A cloneable reference to a <code>Taskref</code> that exposes more …","A list of references to <code>Task</code>s (<code>PriorityTaskRef</code>s)  that is …","Chooses the “least busy” core’s runqueue (based on …","Convenience method that adds the given <code>Task</code> reference to …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the “least busy” core, which is currently very …","Output the priority of the given task. Outputs None if the …","Returns <code>RunQueue</code> for the given core, which is an <code>apic_id</code>.","Increment the number of times the task is picked","Creates a new <code>RunQueue</code> for the given core, which is an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>PriorityTaskRef</code> that wraps the given <code>TaskRef</code>.","Priority assigned for the task. Max priority = 40, Min …","Removes a <code>TaskRef</code> from this RunQueue.","Removes a <code>TaskRef</code> from all <code>RunQueue</code>s that exist on the …","Sets the priority of the given <code>Task</code> in all the <code>RunQueue</code> …","","Remaining tokens in this epoch. A task will be scheduled …","","","","","","","Moves the <code>TaskRef</code> at the given index in this <code>RunQueue</code> to …"],"i":[0,0,0,0,0,6,6,5,6,5,6,5,5,5,6,5,6,5,6,5,6,6,6,6,5,6,5,6,5,5,6,6,6,5,5,5,6,5,6,5,6,6],"f":[0,0,0,0,0,[1,[[3,[2]]]],[[4,1],[[3,[2]]]],[[]],[[]],[[]],[[]],[5,5],[[]],[5,1],[6,7],[5,1],[6,7],[[5,8],9],[[6,8],9],[[]],[[]],[[],[[10,[4]]]],[1,[[10,[4]]]],[4,[[10,[11]]]],[5],[4,[[3,[2]]]],[[]],[[]],[1,5],0,[[6,1],[[3,[2]]]],[1,[[3,[2]]]],[[1,4],[[3,[2]]]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],12],[[],12],[[6,13,13],[[10,[1]]]]],"p":[[3,"TaskRef"],[15,"str"],[4,"Result"],[15,"u8"],[3,"PriorityTaskRef"],[3,"RunQueue"],[3,"VecDeque"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"RwLockPreempt"],[3,"TypeId"],[15,"usize"]]},\
"runqueue_realtime":{"doc":"Runqueue structures for a realtime scheduler using rate …","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["RealtimeTaskRef","RunQueue","add_task_to_any_runqueue","add_task_to_specific_runqueue","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","fmt","fmt","from","from","get_least_busy_core","get_runqueue","has_smaller_period","increment_context_switches","init","into","into","is_periodic","new","remove_task","remove_task_from_all","set_periodicity","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_and_reinsert"],"q":["runqueue_realtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A reference to a task with its period for realtime …","A list of <code>Task</code>s and their associated realtime scheduler …","Chooses the “least busy” core’s runqueue (based on …","Convenience method that adds the given <code>Task</code> reference to …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the “least busy” core, which is currently very …","Returns <code>RunQueue</code> for the given core, which is an <code>apic_id</code>.","Returns <code>true</code> if the period of this <code>RealtimeTaskRef</code> is …","Increment the number of times the task is picked","Creates a new <code>RunQueue</code> for the given core, which is an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the <code>RealtimeTaskRef</code> refers to a task that …","Creates a new <code>RealtimeTaskRef</code> that wraps the given <code>TaskRef</code>","Removes a <code>TaskRef</code> from this RunQueue.","Removes a <code>TaskRef</code> from all <code>RunQueue</code>s that exist on the …","Set the periodicity of a given <code>Task</code> in all the <code>RunQueue</code> …","","","","","","","","Moves the <code>RealtimeTaskRef</code> at the given <code>index</code> in this …"],"i":[0,0,6,6,5,6,5,6,5,5,5,6,5,6,5,6,5,6,6,6,5,5,6,5,6,5,5,6,6,0,5,5,6,5,6,5,6,6],"f":[0,0,[1,[[3,[2]]]],[[4,1],[[3,[2]]]],[[]],[[]],[[]],[[]],[5,5],[[]],[5,1],[6,7],[5,1],[6,7],[[5,8],9],[[6,8],9],[[]],[[]],[[],[[10,[4]]]],[4,[[10,[11]]]],[[5,5],12],[5],[4,[[3,[2]]]],[[]],[[]],[5,12],[[1,[10,[13]]],5],[[6,1],[[3,[2]]]],[1,[[3,[2]]]],[[1,13],[[3,[2]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[6,13],[[10,[1]]]]],"p":[[3,"TaskRef"],[15,"str"],[4,"Result"],[15,"u8"],[3,"RealtimeTaskRef"],[3,"RunQueue"],[3,"VecDeque"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"RwLockPreempt"],[15,"bool"],[15,"usize"],[3,"TypeId"]]},\
"runqueue_round_robin":{"doc":"This crate contains the <code>RunQueue</code> structure, for round …","t":[7,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RUNQUEUES","RoundRobinTaskRef","RunQueue","add_task_to_any_runqueue","add_task_to_specific_runqueue","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","fmt","fmt","from","from","get_least_busy_core","get_runqueue","increment_context_switches","init","into","into","move_to_end","new","remove_task","remove_task_from_all","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["runqueue_round_robin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["There is one runqueue per core, each core only accesses …","A cloneable reference to a <code>Taskref</code> that exposes more …","A list of references to <code>Task</code>s (<code>RoundRobinTaskRef</code>s).  This …","Chooses the “least busy” core’s runqueue (based on …","Convenience method that adds the given <code>Task</code> reference to …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the “least busy” core, which is currently very …","Returns the <code>RunQueue</code> for the given core, which is an …","Increment the number of times the task is picked","Creates a new <code>RunQueue</code> for the given core, which is an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Moves the <code>TaskRef</code> at the given index into this <code>RunQueue</code> to …","Creates a new <code>RoundRobinTaskRef</code> that wraps the given …","Removes a <code>TaskRef</code> from this RunQueue.","Removes a <code>TaskRef</code> from all <code>RunQueue</code>s that exist on the …","","","","","","",""],"i":[0,0,0,6,6,5,6,5,6,5,5,5,6,5,6,5,6,5,6,6,6,5,6,5,6,6,5,6,6,5,5,6,5,6,5,6],"f":[0,0,0,[1,[[3,[2]]]],[[4,1],[[3,[2]]]],[[]],[[]],[[]],[[]],[5,5],[[]],[5,1],[6,7],[5,1],[6,7],[[5,8],9],[[6,8],9],[[]],[[]],[[],[[10,[4]]]],[4,[[10,[11]]]],[5],[4,[[3,[2]]]],[[]],[[]],[[6,12],[[10,[1]]]],[1,5],[[6,1],[[3,[2]]]],[1,[[3,[2]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13]],"p":[[3,"TaskRef"],[15,"str"],[4,"Result"],[15,"u8"],[3,"RoundRobinTaskRef"],[3,"RunQueue"],[3,"VecDeque"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"RwLockPreempt"],[15,"usize"],[3,"TypeId"]]},\
"scheduler":{"doc":"Offers the ability to control or configure the active task …","t":[5,5,5,5,5],"n":["get_priority","init","schedule","set_periodicity","set_priority"],"q":["scheduler","","","",""],"d":["Returns the priority of a given task. This function …","Initializes the scheduler on this system using the policy …","A re-export of <code>task::schedule()</code> for convenience and legacy …","","Changes the priority of the given task with the given …"],"i":[0,0,0,0,0],"f":[[1,[[3,[2]]]],[[],[[5,[4]]]],[[],6],[[1,7],[[5,[4]]]],[[1,2],[[5,[4]]]]],"p":[[3,"TaskRef"],[15,"u8"],[4,"Option"],[15,"str"],[4,"Result"],[15,"bool"],[15,"usize"]],"a":{"yield":[2]}},\
"scheduler_priority":{"doc":"This crate picks the next task on token based scheduling …","t":[5,5,5],"n":["get_priority","select_next_task","set_priority"],"q":["scheduler_priority","",""],"d":["Returns the priority of the given task.","This defines the priority scheduler policy. Returns None …","Changes the priority of the given task with the given …"],"i":[0,0,0],"f":[[1,[[3,[2]]]],[2,[[3,[1]]]],[[1,2],[[5,[4]]]]],"p":[[3,"TaskRef"],[15,"u8"],[4,"Option"],[15,"str"],[4,"Result"]]},\
"scheduler_realtime":{"doc":"This scheduler implements the Rate Monotonic Scheduling …","t":[5,5],"n":["select_next_task","set_periodicity"],"q":["scheduler_realtime",""],"d":["This defines the realtime scheduler policy. Returns None …","Set the periodicity of a given <code>Task</code> in all <code>RunQueue</code> …"],"i":[0,0],"f":[[1,[[3,[2]]]],[[2,4],[[6,[5]]]]],"p":[[15,"u8"],[3,"TaskRef"],[4,"Option"],[15,"usize"],[15,"str"],[4,"Result"]]},\
"scheduler_round_robin":{"doc":"This crate picks the next task in round robin fashion. …","t":[5],"n":["select_next_task"],"q":["scheduler_round_robin"],"d":["This defines the round robin scheduler policy. Returns …"],"i":[0],"f":[[1,[[3,[2]]]]],"p":[[15,"u8"],[3,"TaskRef"],[4,"Option"]]},\
"sdt":{"doc":"ACPI table definitions and basic SDT structures.","t":[3,17,3,12,12,12,12,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11],"n":["GenericAddressStructure","SDT_SIZE_IN_BYTES","Sdt","access_size","address_space","bit_offset","bit_width","borrow","borrow","borrow_mut","borrow_mut","checksum","clone","clone","creator_id","creator_revision","fmt","fmt","from","from","into","into","length","oem_id","oem_revision","oem_table_id","phys_addr","revision","signature","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["sdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct used to describe the position and layout of …","The size in bytes of the ACPI SDT Header (<code>Sdt</code> struct).","An ACPI System Descriptor Table. This is the header (the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,1,1,1,1,2,1,1,1,2,1,2,1,2],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[1,1],[2,2],0,0,[[1,3],4],[[2,3],4],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],6],[[],6]],"p":[[3,"Sdt"],[3,"GenericAddressStructure"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"serial_port":{"doc":"A full serial driver with more advanced I/O support, e.g., …","t":[13,13,13,13,3,13,3,13,3,4,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["COM1","COM2","COM3","COM4","DataChunk","DataReceived","DataSenderAlreadyExists","ErrorOrBreak","SerialPort","SerialPortAddress","SerialPortBasic","SerialPortInterruptEvent","StatusChange","TransmitterEmpty","base_port_address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","data_available","deref","deref_mut","drop","empty","enable_interrupt","eq","flush","fmt","fmt","fmt","from","from","from","from","from","from","from_str","get_serial_port","in_byte","in_bytes","init_serial_port","into","into","into","into","into","into","len","new","new","out_byte","out_bytes","out_str","read","ready_to_transmit","register_interrupt_handler","set_connection_listener","set_data_sender","take_serial_port_basic","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write_str","write_str"],"q":["serial_port","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The base port I/O address for the COM1 serial port.","The base port I/O address for the COM2 serial port.","The base port I/O address for the COM3 serial port.","The base port I/O address for the COM4 serial port.","A chunk of data read from a serial port that will be …","","An empty error type indicating that a data sender could …","","A serial port abstraction with support for interrupt-based …","The base port I/O addresses for COM serial ports.","A serial port and its various data and control registers.","The types of events that can trigger an interrupt on a …","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the serial port has data available to read.","","","","Returns a new <code>DataChunk</code> filled with zeroes that can be …","Enable or disable interrupts on this serial port for …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Obtains a reference to the <code>SerialPort</code> specified by the …","Read one byte from the serial port, blocking until data is …","Reads multiple bytes from the serial port into the given …","Initializes the <code>SerialPort</code> specified by the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates and returns a new serial port structure,  and …","Initialize this serial port by giving it ownership and …","Write the given byte to the serial port, blocking until …","Write the given bytes to the serial port, blocking until …","Write the given string to the serial port, blocking until …","","Returns <code>true</code> if the serial port is ready to transmit a …","Register the interrupt handler for this serial port and …","A temporary hack to allow the serial port interrupt handler","Tells this <code>SerialPort</code> to push received data bytes onto the …","Takes ownership of the <code>SerialPort</code> specified by the given …","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,2,2,2,0,6,0,6,0,0,0,0,6,6,1,1,4,2,5,11,6,1,4,2,5,11,6,2,2,5,1,4,4,1,5,1,2,4,2,11,6,1,4,2,5,11,6,2,0,1,1,0,1,4,2,5,11,6,5,1,4,1,1,1,4,1,4,0,4,0,2,1,4,2,2,2,5,11,6,1,4,2,5,11,6,1,4,2,5,11,6,4,1,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],0,[1,3],[4],[4],[1],[[],5],[[1,6,3]],[[2,2],3],[4,7],[[2,8],[[10,[9]]]],[[11,8],12],[[6,8],[[10,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[10,[2]]]],[2,[[15,[14]]]],[1,16],[1,17],[[2,1],[[15,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[18,1],[1,4],[[1,16]],[1],[[1,13]],[4,[[7,[17]]]],[1,3],[[[14,[[19,[4]]]],16,20],[[10,[13]]]],[[[21,[2]]],21],[[4,[21,[5]]],[[10,[11]]]],[2,[[15,[1]]]],[[]],[[],10],[[],10],[[],10],[13,[[10,[2]]]],[18,[[10,[2]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[4,[[7,[17]]]],[[1,13],[[10,[9]]]],[[4,13],12]],"p":[[3,"SerialPortBasic"],[4,"SerialPortAddress"],[15,"bool"],[3,"SerialPort"],[3,"DataChunk"],[4,"SerialPortInterruptEvent"],[6,"Result"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"DataSenderAlreadyExists"],[6,"Result"],[15,"str"],[3,"Arc"],[4,"Option"],[15,"u8"],[15,"usize"],[15,"u16"],[3,"MutexIrqSafe"],[6,"HandlerFunc"],[3,"Sender"],[3,"TypeId"]]},\
"serial_port_basic":{"doc":"Support for basic serial port access, including …","t":[13,13,13,13,13,13,3,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["COM1","COM2","COM3","COM4","DataReceived","ErrorOrBreak","SerialPort","SerialPortAddress","SerialPortInterruptEvent","StatusChange","TransmitterEmpty","base_port_address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data_available","drop","enable_interrupt","eq","fmt","fmt","from","from","from","from_str","in_byte","in_bytes","into","into","into","new","out_byte","out_bytes","out_str","ready_to_transmit","take_serial_port","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_str"],"q":["serial_port_basic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The base port I/O address for the COM1 serial port.","The base port I/O address for the COM2 serial port.","The base port I/O address for the COM3 serial port.","The base port I/O address for the COM4 serial port.","","","A serial port and its various data and control registers.","The base port I/O addresses for COM serial ports.","The types of events that can trigger an interrupt on a …","","","","","","","","","","","","Returns <code>true</code> if the serial port has data available to read.","","Enable or disable interrupts on this serial port for …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Read one byte from the serial port, blocking until data is …","Reads multiple bytes from the serial port into the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates and returns a new serial port structure,  and …","Write the given byte to the serial port, blocking until …","Write the given bytes to the serial port, blocking until …","Write the given string to the serial port, blocking until …","Returns <code>true</code> if the serial port is ready to transmit a …","Takes ownership of the <code>SerialPort</code> specified by the given …","","","","","","","","","","","","",""],"i":[2,2,2,2,4,4,0,0,0,4,4,1,1,2,4,1,2,4,2,2,1,1,1,2,2,4,1,2,4,2,1,1,1,2,4,1,1,1,1,1,0,2,1,2,2,2,4,1,2,4,1,2,4,1],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[1,3],[1],[[1,4,3]],[[2,2],3],[[2,5],6],[[4,5],6],[[]],[[]],[[]],[7,[[8,[2]]]],[1,9],[1,10],[[]],[[]],[[]],[11,1],[[1,9]],[1],[[1,7]],[1,3],[2,[[12,[1]]]],[[]],[[],8],[7,[[8,[2]]]],[11,[[8,[2]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],13],[[],13],[[],13],[[1,7],6]],"p":[[3,"SerialPort"],[4,"SerialPortAddress"],[15,"bool"],[4,"SerialPortInterruptEvent"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[15,"u8"],[15,"usize"],[15,"u16"],[4,"Option"],[3,"TypeId"]]},\
"shapes":{"doc":"This crate defines the basic shapes used for display.","t":[3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12],"n":["Coord","Rectangle","add","add","add","borrow","borrow","borrow_mut","borrow_mut","bottom_right","clone","clone","cmp","eq","eq","fmt","fmt","from","from","hash","hash","height","into","into","new","partial_cmp","sub","sub","sub","top_left","try_from","try_from","try_into","try_into","type_id","type_id","width","x","y"],"q":["shapes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A 2-D integer coordinate.","A rectangle given by its top-left coordinate and …","","","","","","","","The bottom-right point","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the height of this Rectangle.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new coordinate.","","","","","The top-left point","","","","","","","Returns the width of this Rectangle.","The x coordinate","The y coordinate"],"i":[0,0,1,1,2,1,2,1,2,2,1,2,1,1,2,1,2,1,2,1,2,2,1,2,1,1,1,1,2,2,1,2,1,2,1,2,2,1,1],"f":[0,0,[[1,1],1],[1,1],[[2,1],2],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[[1,1],3],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[[]],[[]],[1],[2],[2,7],[[]],[[]],[[8,8],1],[[1,1],[[9,[3]]]],[1,1],[[1,1],1],[[2,1],2],0,[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[2,7],0,0],"p":[[3,"Coord"],[3,"Rectangle"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[15,"isize"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"signal_handler":{"doc":"Signal handlers for CPU exceptions/errors, like …","t":[3,13,13,4,13,13,13,13,4,3,25,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["AlreadyRegistered","ArithmeticError","BusError","ErrorCode","IllegalInstruction","InvalidAddress","Other","PageFaultError","Signal","SignalContext","SignalHandler","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","eq","eq","eq","error_code","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","hash","instruction_pointer","into","into","into","into","partial_cmp","register_signal_handler","signal","stack_pointer","take_signal_handler","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","accessed_address","pf_error"],"q":["signal_handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","signal_handler::ErrorCode",""],"d":["An error type indicating a handler had already been …","Bad arithmetic operation, e.g., divide by zero. Analogous …","Bad memory alignment, non-existent physical address. …","Possible error codes that may be provided by the CPU …","Invalid opcode, malformed instruction, etc. Analogous to …","Bad virtual address, unexpected page fault. Analogous to …","","","The possible signals that may occur due to CPU exceptions.","Information that is passed to a registered <code>SignalHandler</code> …","A signal handler is a callback function that will be …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Register a <code>SignalHandler</code> callback function for the current …","","","Take the <code>SignalHandler</code> registered for the given <code>signal</code> for …","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,1,1,3,3,0,0,0,6,1,2,3,6,1,2,3,1,2,3,1,2,3,1,1,2,3,2,6,1,2,3,6,1,2,3,3,1,1,2,6,1,2,3,1,0,2,2,0,1,2,3,6,1,2,3,6,1,2,3,6,1,2,3,15,15],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[1,1],4],[[1,1],5],[[2,2],5],[[3,3],5],0,[[6,7],8],[[1,7],8],[[2,7],8],[[3,7],8],[[]],[[]],[[]],[9,3],[[]],[[],9],[1],0,[[]],[[]],[[]],[[]],[[1,1],[[10,[4]]]],[[1,[12,[11]]],[[13,[6]]]],0,0,[1,[[10,[[12,[11]]]]]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],0,0],"p":[[4,"Signal"],[3,"SignalContext"],[4,"ErrorCode"],[4,"Ordering"],[15,"bool"],[3,"AlreadyRegistered"],[3,"Formatter"],[6,"Result"],[15,"u64"],[4,"Option"],[25,"SignalHandler"],[3,"Box"],[4,"Result"],[3,"TypeId"],[13,"PageFaultError"]]},\
"simd_personality":{"doc":"Management of two kernel personalities, one for …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"simd_test":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"simple_ipc":{"doc":"An implementation of a shared buffer for IPC that can be …","t":[3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11],"n":["Receiver","Sender","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new_channel","receive","send","try_from","try_from","try_into","try_into","try_receive","try_send","type_id","type_id"],"q":["simple_ipc","","","","","","","","","","","","","","","","","","","",""],"d":["Channel endpoint that only allows receiving messages.","Channel endpoint that only allows sending messages.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new channel and returns the endpoints","Tries to receive a message until succesful. Task will spin …","Tries to send a message until succesful. Task will spin in …","","","","","Tries to receive a message once. If the buffer is empty, …","Tries to send a message once. If the buffer is full, then …","",""],"i":[0,0,3,1,3,1,3,1,3,1,0,1,3,3,1,3,1,1,3,3,1],"f":[0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,2]],[[],4],[[],4],[[],4],[[],4],[1,[[4,[2,5]]]],[[3,2],[[4,[5]]]],[[],6],[[],6]],"p":[[3,"Receiver"],[15,"u8"],[3,"Sender"],[4,"Result"],[15,"str"],[3,"TypeId"]]},\
"single_simd_task_optimization":{"doc":"Implements the performance optimization that allows a …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"slabmalloc":{"doc":"A slab allocator implementation for objects less than 8KiB.","t":[8,18,18,18,18,18,18,18,18,18,3,3,3,18,18,3,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,11,11,11,11,11,11,12,10,11,11,11,10,11,10,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllocablePage","BASE_ALLOC_SIZES","BUFFER_SIZE","HEAP_ID_OFFSET","HEAP_ID_OFFSET","MAX_ALLOC_SIZE","MAX_BASE_ALLOC_SIZE","MAX_BASE_SIZE_CLASSES","METADATA_SIZE","METADATA_SIZE","MappedPages8k","ObjectPage8k","Rawlink","SIZE","SIZE","ZoneAllocator","allocate","allocate","allocate","bitfield","bitfield","bitfield_mut","bitfield_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","buffer_size","clear_metadata","clear_metadata","deallocate","deallocate","deallocate","default","default","default","empty_pages","exchange_pages_within_heap","first_fit","first_fit","fmt","from","from","from","from","get_max_size","heap_id","heap_id","heap_id","heap_id","into","into","into","into","is_empty","is_empty","is_full","is_full","mp","new","new","new","new","next","next","prev","prev","refill","retrieve_empty_page","retrieve_mapped_pages","retrieve_mapped_pages","set_heap_id","set_heap_id","start_address","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["slabmalloc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This trait is used to define a page from which objects are …","The set of sizes the allocator has lists for.","","","","Maximum size that allocated within 2 pages. (8 KiB - …","Maximum size which is allocated with ObjectPages8k (8 KiB).","How many allocators of type <code>SCAllocator&lt;ObjectPage8k&gt;</code> we …","","","A wrapper type around MappedPages which ensures that the …","Holds allocated data within 2 4-KiB pages.","Rawlink is a type like <code>Option&lt;T&gt;</code> but for holding a raw …","The total size (in bytes) of the page.","","A zone allocator for arbitrary sized allocations.","Tries to allocate an object within this page.","Tries to allocate an object within this page.","Allocate a pointer to a block of memory described by <code>layout</code>…","","","","","","","","","","","","","","","","clears the metadata section of the page","Deallocates a memory object within this page.","Deallocates a memory object within this page.","Deallocates a pointer to a block of memory, which was …","","","","The total number of empty pages in this zone allocator","","Tries to find a free block within <code>data</code> that satisfies …","Tries to find a free block within <code>data</code> that satisfies …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return maximum size an object of size <code>current_size</code> can use.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the page has currently no allocations.","Checks if the page has currently no allocations.","Checks if we can still allocate more objects of a given …","Checks if we can still allocate more objects of a given …","The MappedPages this memory area belongs to","","Creates a new 8KiB allocable page and stores the …","Creates a MappedPages8k object from MappedPages that have …","","","","","","Refills the SCAllocator for a given Layout with a …","Returns a MappedPages8k from the SCAllocator with the …","","Returns the MappedPages object that was stored in the …","","","","","","","","","","","","","","",""],"i":[0,3,14,18,14,3,3,3,18,14,0,0,0,18,14,0,18,18,3,18,7,18,7,7,14,9,3,7,14,9,3,18,7,18,7,18,18,3,7,9,3,3,3,18,18,7,7,14,9,3,3,18,7,7,3,7,14,9,3,18,18,18,18,7,18,7,14,3,18,7,18,7,3,3,18,7,18,7,14,7,14,9,3,7,14,9,3,7,14,9,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[3,1],[[6,[[4,[2]],5]]]],[[]],[7],[[]],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[]],[7],[[[4,[2]],1],[[6,[5]]]],[[[4,[2]],1],[[6,[5]]]],[[3,[4,[2]],1],[[6,[5]]]],[[],7],[[],9],[[],3],[3,8],[[3,1],[[6,[5]]]],[1,10],[1,10],[[7,11],12],[[]],[[]],[[]],[[]],[8,[[10,[8]]]],[[],8],[7,8],0,0,[[]],[[]],[[]],[[]],[8,13],[8,13],[[],13],[[],13],0,[[14,8]],[[14,8],7],[15,[[6,[14,5]]]],[8,3],[[],9],[7,9],[[],9],[7,9],[[3,1,14],[[6,[5]]]],[[3,8],[[10,[14]]]],[[],[[10,[14]]]],[7,[[10,[14]]]],[8],[[7,8]],[14,16],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],17],[[],17],[[],17],[[],17]],"p":[[3,"Layout"],[15,"u8"],[3,"ZoneAllocator"],[3,"NonNull"],[15,"str"],[4,"Result"],[3,"ObjectPage8k"],[15,"usize"],[3,"Rawlink"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"MappedPages8k"],[3,"MappedPages"],[3,"VirtualAddress"],[3,"TypeId"],[8,"AllocablePage"]]},\
"slabmalloc_safe":{"doc":"A slab allocator implementation for objects less than 8KiB.","t":[8,18,18,18,18,18,18,18,18,18,3,3,18,18,3,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllocablePage","BASE_ALLOC_SIZES","BUFFER_SIZE","HEAP_ID_OFFSET","HEAP_ID_OFFSET","MAX_ALLOC_SIZE","MAX_BASE_ALLOC_SIZE","MAX_BASE_SIZE_CLASSES","METADATA_SIZE","METADATA_SIZE","MappedPages8k","ObjectPage8k","SIZE","SIZE","ZoneAllocator","allocate","allocate","allocate","allocate","bitfield","bitfield","bitfield_mut","bitfield_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_metadata","clear_metadata","deallocate","deallocate","deallocate","deallocate","default","empty_pages","exchange_pages_within_heap","first_fit","first_fit","first_fit","from","from","from","get_max_size","heap_id","into","into","into","is_empty","is_empty","is_empty","is_full","is_full","is_full","new","new","refill","retrieve_empty_page","start_address","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["slabmalloc_safe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This trait is used to define a page from which objects are …","The set of sizes the allocator has lists for.","","","","Maximum size that allocated within 2 pages. (8 KiB - …","Maximum size which is allocated with ObjectPages8k (8 KiB).","How many allocators of type SCAllocator we have.","","","A wrapper type around MappedPages which ensures that the …","Holds allocated data within 2 4-KiB pages.","The total size (in bytes) of the page.","","A zone allocator for arbitrary sized allocations.","Tries to allocate an object within this page.","Tries to allocate an object within this page.","Tries to allocate an object within this page.","Allocate a pointer to a block of memory described by <code>layout</code>…","","","","","","","","","","","","clears the metadata section of the page","Deallocates a memory object within this page.","Deallocates a memory object within this page.","Deallocates a memory object within this page.","Deallocates a pointer to a block of memory, which was …","","The total number of empty pages in this zone allocator","","Tries to find a free block within <code>data</code> that satisfies …","Tries to find a free block within <code>data</code> that satisfies …","Tries to find a free block within <code>data</code> that satisfies …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return maximum size an object of size <code>current_size</code> can use.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the page has currently no allocations.","Checks if the page has currently no allocations.","Checks if the page has currently no allocations.","Checks if we can still allocate more objects of a given …","Checks if we can still allocate more objects of a given …","Checks if we can still allocate more objects of a given …","Creates a MappedPages8k object from MappedPages that have …","","Refills the SCAllocator for a given Layout with a …","Returns a MappedPages8k from the SCAllocator with the …","","","","","","","","","",""],"i":[0,4,12,15,12,4,4,4,15,12,0,0,15,12,0,15,15,3,4,15,3,15,3,3,12,4,3,12,4,15,3,15,15,3,4,4,4,4,15,15,3,3,12,4,4,4,3,12,4,15,15,3,15,15,3,12,4,4,4,12,3,12,4,3,12,4,3,12,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[3,1],2],[[4,1],[[7,[[5,[2]],6]]]],[[]],[3],[[]],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],[[[5,[2]],1],[[7,[6]]]],[[[5,[2]],1],[[7,[6]]]],[[3,[5,[2]],1],[[7,[6]]]],[[4,[5,[2]],1],[[7,[6]]]],[[],4],[4,8],[[4,1],[[7,[6]]]],[1,9],[1,9],[[3,1],9],[[]],[[]],[[]],[8,[[9,[8]]]],0,[[]],[[]],[[]],[8,10],[8,10],[[3,8],10],[[],10],[[],10],[3,10],[11,[[7,[12,6]]]],[8,4],[[4,1,12],[[7,[6]]]],[[4,8],[[9,[12]]]],[12,13],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],14],[[],14],[[],14]],"p":[[3,"Layout"],[15,"u8"],[3,"ObjectPage8k"],[3,"ZoneAllocator"],[3,"NonNull"],[15,"str"],[4,"Result"],[15,"usize"],[4,"Option"],[15,"bool"],[3,"MappedPages"],[3,"MappedPages8k"],[3,"VirtualAddress"],[3,"TypeId"],[8,"AllocablePage"]]},\
"slabmalloc_unsafe":{"doc":"A slab allocator implementation for objects less than 8KiB.","t":[8,18,18,18,18,18,18,3,3,18,3,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,11,11,11,11,11,11,11,10,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11],"n":["AllocablePage","BASE_ALLOC_SIZES","HEAP_ID_OFFSET","MAX_ALLOC_SIZE","MAX_BASE_ALLOC_SIZE","MAX_BASE_SIZE_CLASSES","METADATA_SIZE","ObjectPage8k","Rawlink","SIZE","ZoneAllocator","allocate","allocate","allocate","bitfield","bitfield","bitfield_mut","bitfield_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_size","buffer_size","clear_metadata","clear_metadata","deallocate","deallocate","deallocate","default","default","default","empty_pages","exchange_pages_within_heap","first_fit","first_fit","fmt","from","from","from","get_max_size","heap_id","heap_id","heap_id","heap_id","into","into","into","is_empty","is_empty","is_full","is_full","new","next","next","prev","prev","refill","retrieve_empty_page","set_heap_id","set_heap_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["slabmalloc_unsafe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This trait is used to define a page from which objects are …","The set of sizes the allocator has lists for.","","Maximum size that allocated within 2 pages. (8 KiB - …","Maximum size which is allocated with ObjectPages8k (8 KiB).","How many allocators of type <code>SCAllocator&lt;ObjectPage8k&gt;</code> we …","","Holds allocated data within 2 4-KiB pages.","Rawlink is a type like <code>Option&lt;T&gt;</code> but for holding a raw …","The total size (in bytes) of the page.","A zone allocator for arbitrary sized allocations.","Tries to allocate an object within this page.","Tries to allocate an object within this page.","Allocate a pointer to a block of memory described by <code>layout</code>…","","","","","","","","","","","","","","clears the metadata section of the page","Deallocates a memory object within this page.","Deallocates a memory object within this page.","Deallocates a pointer to a block of memory, which was …","","","","The total number of empty pages in this zone allocator","","Tries to find a free block within <code>data</code> that satisfies …","Tries to find a free block within <code>data</code> that satisfies …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return maximum size an object of size <code>current_size</code> can use.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the page has currently no allocations.","Checks if the page has currently no allocations.","Checks if we can still allocate more objects of a given …","Checks if we can still allocate more objects of a given …","","","","","","Refills the SCAllocator for a given Layout with an object …","Returns an ObjectPage from the SCAllocator with the …","","","","","","","","","","",""],"i":[0,3,15,3,3,3,15,0,0,15,0,15,15,3,15,7,15,7,7,9,3,7,9,3,15,7,15,7,15,15,3,7,9,3,3,3,15,15,7,7,9,3,3,15,7,7,3,7,9,3,15,15,15,15,3,15,7,15,7,3,3,15,7,7,9,3,7,9,3,7,9,3],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[3,1],[[6,[[4,[2]],5]]]],[[]],[7],[[]],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[]],[7],[[[4,[2]],1],[[6,[5]]]],[[[4,[2]],1],[[6,[5]]]],[[3,[4,[2]],1],[[6,[5]]]],[[],7],[[],9],[[],3],[3,8],[[3,1],[[6,[5]]]],[1,10],[1,10],[[7,11],12],[[]],[[]],[[]],[8,[[10,[8]]]],[[],8],[7,8],0,0,[[]],[[]],[[]],[8,13],[8,13],[[],13],[[],13],[8,3],[[],9],[7,9],[[],9],[7,9],[[3,1,7],[[6,[5]]]],[[3,8],[[10,[7]]]],[8],[[7,8]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14]],"p":[[3,"Layout"],[15,"u8"],[3,"ZoneAllocator"],[3,"NonNull"],[15,"str"],[4,"Result"],[3,"ObjectPage8k"],[15,"usize"],[3,"Rawlink"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"TypeId"],[8,"AllocablePage"]]},\
"sleep":{"doc":"Provides APIs for tasks to sleep for specified time …","t":[3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["Duration","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_decode","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","decode","default","deserialize","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","encode","eq","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","future","get_hash","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","serialize","sleep","sleep_until","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","unblock_sleeping_tasks","sleep","sleep_until"],"q":["sleep","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sleep::future",""],"d":["A <code>Duration</code> type to represent a span of time, typically …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Asynchronous sleep methods that operate on wakers.","","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","Blocks the current task by putting it to sleep for <code>duration</code>…","Blocks the current task by putting it to sleep until a …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","Remove all tasks that have been delayed but are able to be …","Wakes up the waker after the specified duration.","Wakes up the waker at the specified time."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],"f":[0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[1,2],[1,2],[1,2],[1,3],[1,4],[1,5],[[]],[[],[[7,[1,6]]]],[[]],[[1,1],[[8,[1]]]],[[1,9],[[8,[1]]]],[[1,9],[[8,[1]]]],[[1,1],[[8,[1]]]],[1,1],[[]],[[1,1],10],[[],[[7,[1,6]]]],[[],1],[[],[[7,[1]]]],[[1,9],1],[[1,9]],[[1,1],4],[[1,1],5],[[1,4],1],[[1,5],1],[1,[[7,[11]]]],[[1,1],12],[[1,13],[[7,[14]]]],[[]],[3,1],[3,1],[3,1],[3,1],[4,1],[5,1],0,[[],3],[1],[[]],[1,12],[[1,9],1],[[1,9]],[[1,4],1],[[1,5],1],[[3,9],1],[[1,1],[[8,[10]]]],[[1,1],1],[[1,9],1],[[1,1],1],[1,7],[1,[[7,[15]]]],[16,[[7,[15]]]],[[1,1],1],[[1,1]],[1,9],[1,9],[1,9],[[],1],[[],1],[[]],[[],7],[4,[[7,[1,17]]]],[5,[[7,[1,17]]]],[[],7],[[],18],[[]],[[1,19]],[[16,19],20]],"p":[[3,"Duration"],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"DecodeError"],[4,"Result"],[4,"Option"],[15,"u32"],[4,"Ordering"],[4,"EncodeError"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"RunState"],[3,"Instant"],[3,"TryFromFloatSecsError"],[3,"TypeId"],[3,"Waker"],[4,"Poll"]]},\
"smoltcp_helper":{"doc":"Collection of functions to set up a TCP connection using a …","t":[17,5,5,14,5,5],"n":["STARTING_FREE_PORT","connect","get_default_iface","hpet_ticks","millis_since","poll_iface"],"q":["smoltcp_helper","","","","",""],"d":["The starting number for freely-available (non-reserved) …","A convenience function for connecting a socket. If the …","Returns the first network interface available in the …","A simple macro to get the current HPET clock ticks.","Function to calculate the currently elapsed time (in …","A convenience function to poll the given network interface …"],"i":[0,0,0,0,0,0],"f":[0,[[1,2,3,4,5,6],[[8,[7]]]],[[],[[8,[1,7]]]],0,[6,[[8,[6,7]]]],[[1,2,6],[[8,[9,7]]]]],"p":[[6,"NetworkInterfaceRef"],[3,"Set"],[3,"Handle"],[3,"Endpoint"],[15,"u16"],[15,"u64"],[15,"str"],[4,"Result"],[15,"bool"]]},\
"spawn":{"doc":"This crate offers routines for spawning new tasks and …","t":[3,3,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11],"n":["BootstrapTaskRef","TaskBuilder","argument","block","borrow","borrow","borrow_mut","borrow_mut","cleanup_bootstrap_tasks","create_idle_task","deref","drop","finish","fmt","from","from","idle","init","into","into","name","new_application_task_builder","new_task_builder","parent","pin_on_cpu","spawn","spawn_restartable","stack","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["spawn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A wrapper around a <code>TaskRef</code> for bootstrapped tasks, which …","A struct that offers a builder pattern to create and …","Set the argument that will be passed to the new Task’s …","Set the new Task’s <code>RunState</code> to be <code>Blocked</code> instead of …","","","","","Spawns a dedicated task to cleanup all bootstrap tasks by …","Spawns an idle task on the current CPU and adds it to this …","","","This function represents the final step of each CPU’s …","","Returns the argument unchanged.","Returns the argument unchanged.","Sets this new Task to be the idle task for the given CPU. ","Initializes tasking for this CPU, including creating a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the String name for the new Task.","Creates a builder for a new application <code>Task</code>. ","Creates a builder for a new <code>Task</code> that starts at the given …","Set the “parent” Task from which the new Task will …","Pin the new Task to a specific CPU.","Finishes this <code>TaskBuilder</code> and spawns the new task as …","Like <code>TaskBuilder::spawn()</code>, this finishes this <code>TaskBuilder</code> …","Set the <code>Stack</code> that will be used by the new Task.","","","","","",""],"i":[0,0,1,1,1,6,1,6,0,0,6,6,6,6,1,6,1,0,1,6,1,0,0,1,1,1,1,1,1,6,1,6,1,6],"f":[0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[2,[[4,[3]]]],[[],[[4,[5,3]]]],[6,7],[6],[6],[[6,8],9],[[]],[[]],[[1,10],1],[[11,10,[13,[12]]],[[4,[6,3]]]],[[]],[[]],[[1,14],1],[[15,[18,[[17,[16]]]]],[[4,[[1,[[19,[14]],20]],3]]]],[[],1],[[1,7],1],[[1,10],1],[1,[[4,[5,3]]]],[[1,18],[[4,[5,3]]]],[[1,12],1],[[],4],[[],4],[[],4],[[],4],[[],21],[[],21]],"p":[[3,"TaskBuilder"],[15,"u32"],[15,"str"],[4,"Result"],[3,"JoinableTaskRef"],[3,"BootstrapTaskRef"],[3,"TaskRef"],[3,"Formatter"],[6,"Result"],[3,"CpuId"],[6,"MmiRef"],[3,"Stack"],[3,"NoDrop"],[3,"String"],[3,"Path"],[3,"CrateNamespace"],[3,"Arc"],[4,"Option"],[3,"Vec"],[15,"isize"],[3,"TypeId"]]},\
"stack":{"doc":"Provides the <code>Stack</code> type that represents a Task’s stack  …","t":[3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Stack","alloc_stack","borrow","borrow_mut","bottom","deref","deref_mut","fmt","from","from_pages","guard_page","into","top_unusable","top_usable","try_from","try_into","type_id"],"q":["stack","","","","","","","","","","","","","","","",""],"d":["A range of mapped memory designated for use as a task’s …","Allocates a new stack and maps it to the active page …","","","Returns the bottom of this stack, its lowest usable …","","","","Returns the argument unchanged.","Creates a stack from its constituent parts:  a guard page …","Returns the guard page(s) for this stack. ","Calls <code>U::from(self)</code>.","Returns the address just beyond the top of this stack,  …","Returns the highest usable address of this Stack,  which …","","",""],"i":[0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,[[1,2],[[4,[3]]]],[[]],[[]],[3,5],[3,6],[3,6],[[3,7],8],[[]],[[9,6],[[10,[3]]]],[3,11],[[]],[3,5],[3,5],[[],10],[[],10],[[],12]],"p":[[15,"usize"],[3,"Mapper"],[3,"Stack"],[4,"Option"],[3,"VirtualAddress"],[3,"MappedPages"],[3,"Formatter"],[6,"Result"],[3,"AllocatedPages"],[4,"Result"],[3,"PageRange"],[3,"TypeId"]]},\
"stack_trace":{"doc":"Stack trace (backtrace) functionality using DWARF …","t":[3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11],"n":["CrateNamespace","StrongSectionRef","add_symbols","borrow","borrow_mut","clone_on_write","crate_names","dir","dump_symbol_map","dump_symbol_map_recursive","find_symbols_starting_with","find_symbols_starting_with_and_namespace","for_each_crate","from","get_crate","get_crate_and_namespace","get_crate_containing_address","get_crate_object_file_starting_with","get_crate_object_files_starting_with","get_crate_starting_with","get_crates_starting_with","get_my_current_task","get_section_containing_address","get_symbol","get_symbol_and_namespace","get_symbol_or_load","get_symbol_starting_with","get_tls_initializer_data","into","load_crate","load_crate_as_application","load_crates","method_get_crate_object_file_starting_with","method_get_crate_object_files_starting_with","name","new","recursive_namespace","rewrite_section_dependents","stack_trace","try_from","try_into","type_id"],"q":["stack_trace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This struct represents a namespace of crates and their “…","A Strong reference (<code>Arc</code>) to a <code>LoadedSection</code>.","Adds only <em>global</em> symbols in the given <code>sections</code> iterator to …","","","Duplicates this <code>CrateNamespace</code> into a new <code>CrateNamespace</code>,  …","Returns a list of all of the crate names currently loaded …","Returns the directory that this <code>CrateNamespace</code> is based on.","Simple debugging function that returns the entire symbol …","Same as <code>dump_symbol_map()</code>,  but includes symbols from …","Returns a copied list of the corresponding <code>LoadedSection</code>s  …","Similar to <code>find_symbols_starting_with</code>, but also includes a …","Iterates over all crates in this namespace and calls the …","Returns the argument unchanged.","Acquires the lock on this <code>CrateNamespace</code>’s crate list …","Acquires the lock on this <code>CrateNamespace</code>’s crate list …","Finds the crate that contains the given <code>VirtualAddress</code> in …","Like <code>get_crate_starting_with()</code>, but for crate <em>object file</em>s …","Like <code>get_crates_starting_with()</code>, but for crate <em>object file</em>…","Finds the <code>LoadedCrate</code> whose name starts with the given …","Finds the <code>LoadedCrate</code>s whose names start with the given …","Returns a cloned reference to the current task.","Finds the section that contains the given <code>VirtualAddress</code> …","Finds the corresponding <code>LoadedSection</code> reference for the …","Like <code>get_symbol()</code>, but also returns the exact …","Finds the corresponding <code>LoadedSection</code> reference for the …","Returns a weak reference to the <code>LoadedSection</code> whose name …","Returns a new copy of this namespace’s initial TLS area, …","Calls <code>U::from(self)</code>.","Loads the specified crate into memory, allowing it to be …","Loads the specified application crate into this …","This function first loads all of the given crates’ …","Same as <code>get_crate_object_file_starting_with()</code>, but is a …","Same as <code>get_crate_object_files_starting_with()</code>, but is a …","Returns the name of this <code>CrateNamespace</code>, which is just …","Creates a new <code>CrateNamespace</code> that is completely empty (no …","Returns the recursive namespace that this <code>CrateNamespace</code> …","Finds all of the weak dependents (sections that depend on …","Get a stack trace using the default stack tracer based on …","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1],"f":[0,0,[[1,2],3],[[]],[[]],[1,1],[[1,2],[[6,[4,5]]]],[1,7],[1,8],[1,8],[[1,9],[[6,[5]]]],[[1,9],[[6,[5]]]],[[1,2]],[[]],[[1,9],[[12,[[11,[10]]]]]],[[13,9],12],[[1,14,2],[[12,[[11,[10]]]]]],[[13,9],12],[[13,9],[[6,[5]]]],[[13,9],12],[[13,9],[[6,[5]]]],[[],[[12,[15]]]],[[1,14,2],12],[[1,9],[[17,[16]]]],[[1,9],12],[[1,9,[12,[1]],13,2],[[17,[16]]]],[[1,9],[[17,[16]]]],[1,18],[[]],[[1,13,[12,[1]],13,2],[[19,[9]]]],[[13,13,13,2],[[19,[20,9]]]],[[1,[12,[1]],13,2],[[19,[9]]]],[[1,9],12],[[1,9],[[6,[5]]]],[1,9],[[8,7,[12,[[13,[1]]]]],1],[1,[[12,[13]]]],[[13,13,13],[[19,[9]]]],[[21,[12,[3]]],[[19,[9]]]],[[],19],[[],19],[[],22]],"p":[[3,"CrateNamespace"],[15,"bool"],[15,"usize"],[3,"StrRef"],[3,"Global"],[3,"Vec"],[3,"NamespaceDir"],[3,"String"],[15,"str"],[3,"LoadedCrate"],[3,"CowArc"],[4,"Option"],[3,"Arc"],[3,"VirtualAddress"],[3,"TaskRef"],[3,"LoadedSection"],[3,"Weak"],[3,"TlsDataImage"],[4,"Result"],[3,"AppCrateRef"],[8,"FnMut"],[3,"TypeId"]]},\
"stack_trace_frame_pointers":{"doc":"Stack trace (backtrace) functionality using frame pointers.","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"state_store":{"doc":"","t":[3,11,11,11,11,5,5,5,11,11,11,11],"n":["SSCached","borrow","borrow_mut","from","get","get_state","init","insert_state","into","try_from","try_into","type_id"],"q":["state_store","","","","","","","","","","",""],"d":["A thread-safe cached reference to a system-wide state. …","","","Returns the argument unchanged.","Tries to upgrade the internal Weak pointer to a Strong …","Returns a Weak reference to the SystemState of the …","","Inserts a new SystemState-implementing type into the map. ","Calls <code>U::from(self)</code>.","","",""],"i":[0,2,2,2,2,0,0,0,2,2,2,2],"f":[0,[[]],[[]],[[]],[[[2,[1]]],[[4,[[3,[1]]]]]],[[],[[2,[1]]]],[[]],[1,[[4,[1]]]],[[]],[[],5],[[],5],[[],6]],"p":[[8,"Any"],[3,"SSCached"],[3,"Arc"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"state_transfer":{"doc":"","t":[5],"n":["prio_sched"],"q":["state_transfer"],"d":["This function is used for live evolution from a round …"],"i":[0],"f":[[[1,2],[[4,[3]]]]],"p":[[3,"Arc"],[3,"CrateNamespace"],[15,"str"],[4,"Result"]]},\
"stdio":{"doc":"This crate creates the abstraction of <code>stdio</code>. They are …","t":[3,3,3,3,3,6,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["KeyEventQueue","KeyEventQueueReader","KeyEventQueueWriter","KeyEventReadGuard","RingBufferEof","RingBufferEofRef","Stdio","StdioReadGuard","StdioReader","StdioWriteGuard","StdioWriter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","drop","flush","from","from","from","from","from","from","from","from","from","from","get_reader","get_reader","get_reader_with_buf_capacity","get_writer","get_writer","into","into","into","into","into","into","into","into","into","into","is_eof","lock","lock","new","new","new","read","read_line","read_one","remaining_bytes","set_eof","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write_one"],"q":["stdio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A reader to keyevent ring buffer.","A writer to keyevent ring buffer.","A structure that allows applications to access keyboard …","A ring buffer with an EOF mark.","A reference to a ring buffer with an EOF mark with mutex …","A ring buffer containing bytes. It forms <code>stdin</code>, <code>stdout</code> and …","<code>StdioReadGuard</code> acts like <code>MutexGuard</code>, it locks the …","A reader to stdio buffers.","<code>StdioReadGuard</code> acts like <code>MutexGuard</code>, it locks the …","A writer to stdio buffers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reader of <code>KeyEventQueue</code> back to the previous …","The function required by <code>Write</code> trait. Currently it …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a reader to the stdio buffer. Note that each reader …","Get a reader to the ring buffer.","Get a reader to the stdio buffer with a customized buffer …","Get a writer to the stdio buffer.","Get a writer to the ring buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if the EOF flag of the queue has been set.","Lock the reader and return a guard that can perform …","Lock the writer and return a guard that can perform …","Create a new stdio buffer.","Create a new ring buffer storing <code>KeyEvent</code>.","Create a new <code>KeyEventReadGuard</code>. This function <em>takes</em> a …","Read from the ring buffer. Returns the number of bytes …","Read a line from the ring buffer and return. Remaining …","Try to read a keyevent from the ring buffer. It returns …","Returns the number of bytes still in the read buffer.","Set the EOF flag of the queue to true.","","","","","","","","","","","","","","","","","","","","","","","","","Same as <code>read()</code>, but is non-blocking.","","","","","","","","","","","Write to the ring buffer, returniong the number of bytes …","Push a keyevent into the ring buffer."],"i":[0,0,0,0,0,0,0,0,0,0,0,20,9,12,6,10,5,1,2,3,4,20,9,12,6,10,5,1,2,3,4,1,2,3,4,1,2,3,4,5,5,6,20,9,12,6,10,5,1,2,3,4,9,10,9,9,10,20,9,12,6,10,5,1,2,3,4,12,1,2,9,10,5,12,1,3,12,6,1,2,3,4,20,9,12,6,10,5,1,2,3,4,20,9,12,6,10,5,1,2,3,4,12,20,9,12,6,10,5,1,2,3,4,6,4],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[5],[5],[6,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,1],[10,3],[[9,11],1],[9,2],[10,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,13],[1,12],[2,6],[[],9],[[],10],[[3,[15,[14]]],5],[12,[[8,[11,7]]]],[[1,16],[[8,[11,7]]]],[3,[[18,[17]]]],[12,11],[6],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[12,[[8,[11,7]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[6,[[8,[11,7]]]],[[4,17]]],"p":[[3,"StdioReader"],[3,"StdioWriter"],[3,"KeyEventQueueReader"],[3,"KeyEventQueueWriter"],[3,"KeyEventReadGuard"],[3,"StdioWriteGuard"],[3,"Error"],[4,"Result"],[3,"Stdio"],[3,"KeyEventQueue"],[15,"usize"],[3,"StdioReadGuard"],[15,"bool"],[8,"Fn"],[3,"Box"],[3,"String"],[3,"KeyEvent"],[4,"Option"],[3,"TypeId"],[3,"RingBufferEof"]]},\
"storage_device":{"doc":"Trait definitions for storage devices and storage …","t":[8,6,8,6,10,11,11,11,11,11,10],"n":["StorageController","StorageControllerRef","StorageDevice","StorageDeviceRef","devices","downcast","downcast_mut","downcast_rc","downcast_ref","is","size_in_blocks"],"q":["storage_device","","","","","","","","","",""],"d":["A trait that represents a storage controller, such as an …","A trait object wrapped in an Arc and Mutex that allows  …","A trait that represents a storage device, such as hard …","A trait object wrapped in an Arc and Mutex that allows  …","Returns an iterator of references to all <code>StorageDevice</code>s …","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns true if the trait object wraps an object of type …","Returns the total size of this device, given in number of …"],"i":[0,0,0,0,9,3,3,3,3,3,3],"f":[0,0,0,0,[[],[[2,[1]]]],[[[2,[3]]],[[4,[[2,[3]],[2,[3]]]]]],[3,5],[[[6,[3]]],[[4,[[6,[3]],[6,[3]]]]]],[3,5],[3,7],[[],8]],"p":[[8,"Iterator"],[3,"Box"],[8,"StorageDevice"],[4,"Result"],[4,"Option"],[3,"Rc"],[15,"bool"],[15,"usize"],[8,"StorageController"]]},\
"storage_manager":{"doc":"Manages and handles initialization of all storage devices …","t":[8,6,8,6,10,11,11,11,11,5,11,10,5,5],"n":["StorageController","StorageControllerRef","StorageDevice","StorageDeviceRef","devices","downcast","downcast_mut","downcast_rc","downcast_ref","init_device","is","size_in_blocks","storage_controllers","storage_devices"],"q":["storage_manager","","","","","","","","","","","","",""],"d":["A trait that represents a storage controller, such as an …","A trait object wrapped in an Arc and Mutex that allows  …","A trait that represents a storage device, such as hard …","A trait object wrapped in an Arc and Mutex that allows  …","Returns an iterator of references to all <code>StorageDevice</code>s …","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Attempts to handle the initialization of the given …","Returns true if the trait object wraps an object of type …","Returns the total size of this device, given in number of …","Returns an iterator over all initialized storage …","Returns an iterator over all storage devices attached to …"],"i":[0,0,0,0,13,4,4,4,4,0,4,4,0,0],"f":[0,0,0,0,[[],[[3,[1,2]]]],[[[3,[4,2]]],[[5,[[3,[2]],[3,[4,2]]]]]],[4,6],[[[7,[4]]],[[5,[7,[7,[4]]]]]],[4,6],[8,[[5,[[6,[9]],10]]]],[4,11],[[],12],[[],1],[[],1]],"p":[[8,"Iterator"],[3,"Global"],[3,"Box"],[8,"StorageDevice"],[4,"Result"],[4,"Option"],[3,"Rc"],[3,"PciDevice"],[6,"StorageControllerRef"],[15,"str"],[15,"bool"],[15,"usize"],[8,"StorageController"]]},\
"str_ref":{"doc":"An immutable shared reference to a string, effectively …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["StrRef","as_ref","as_str","borrow","borrow","borrow","borrow_mut","clone","clone_into","cmp","deref","eq","fmt","fmt","from","from","hash","into","partial_cmp","to_owned","to_string","try_from","try_into","type_id"],"q":["str_ref","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A wrapper around an <code>Arc&lt;str&gt;</code>: an immutable shared …","","Obtain a reference to the inner <code>str</code>.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,2],[1,2],[1],[[]],[1,2],[[]],[1,1],[[]],[[1,1],3],[1],[[1,1],4],[[1,5],6],[[1,5],6],[[]],[2,1],[1],[[]],[[1,1],[[7,[3]]]],[[]],[[],8],[[],9],[[],9],[[],10]],"p":[[3,"StrRef"],[15,"str"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"sync_block":{"doc":"","t":[3,3,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Block","Condvar","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from","get_hash","hash","into","into","lock","new","notify_all","notify_one","partial_cmp","post_unlock","post_unlock","read","to_owned","try_from","try_from","try_into","try_into","try_lock","try_read","try_write","type_id","type_id","wait","wait_while","write"],"q":["sync_block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A synchronisation flavour that blocks the current thread …","A condition variable.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a new condition variable.","Wakes up all threads blocked on this condvar.","Wakes up one thread blocked on this condvar.","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Blocks the current thread until this condition variable …",""],"i":[0,0,0,0,0,0,0,8,1,8,1,1,1,1,1,1,1,8,1,1,1,8,1,1,8,8,8,1,1,1,1,1,8,1,8,1,1,1,1,8,1,8,8,1],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[],1],[[1,1],3],[[1,4],5],[[]],[[]],[[],6],[1],[[]],[[]],[7],[[],8],[8],[8],[[1,1],[[9,[2]]]],[[]],[3],[10],[[]],[[],11],[[],11],[[],11],[[],11],[7,9],[10,9],[10,9],[[],12],[[],12],[[8,[14,[13]]],[[14,[13]]]],[[8,14],14],[10]],"p":[[3,"Block"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"SpinMutex"],[3,"Condvar"],[4,"Option"],[3,"RwLock"],[4,"Result"],[3,"TypeId"],[8,"Sized"],[6,"MutexGuard"]]},\
"sync_preemption":{"doc":"","t":[3,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DisablePreemption","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","borrow","borrow_mut","clone","clone_into","cmp","default","enter","eq","fmt","from","hash","into","lock","partial_cmp","post_unlock","post_unlock","read","to_owned","try_from","try_into","try_lock","try_read","try_write","type_id","write"],"q":["sync_preemption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A deadlock prevention method that disables preemption.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],1],[[]],[[1,1],3],[[1,4],5],[[]],[1],[[]],[6],[[1,1],[[7,[2]]]],[3],[[]],[8],[[]],[[],9],[[],9],[6,7],[8,7],[8,7],[[],10],[8]],"p":[[3,"DisablePreemption"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"SpinMutex"],[4,"Option"],[3,"RwLock"],[4,"Result"],[3,"TypeId"]]},\
"task":{"doc":"Key types and functions for multitasking that build on the …","t":[13,13,13,13,3,13,3,13,4,3,13,6,13,4,4,13,3,6,4,13,13,13,13,3,13,13,3,4,13,3,6,3,3,3,3,5,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,5,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,12,11,11,11,11,11,5,11,5,5,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,12,12,12],"n":["AlreadyBorrowed","AlreadyInited","Blocked","Completed","CurrentTaskNotFound","Custom","DropAfterTaskSwitch","Exception","ExitValue","ExitableTaskRef","Exited","FailureCleanupFunction","FromTask","InheritedStates","InitCurrentTaskError","Initing","JoinableTaskRef","KillHandler","KillReason","Killed","MismatchedTaskIds","NotInTasklist","Panic","PanicInfoOwned","Reaped","Requested","RestartInfo","RunState","Runnable","ScheduleOnDrop","SchedulerFunc","Task","TaskRef","TaskSwitchPreemptionGuard","WeakTaskRef","all_tasks","app_crate","argument","block","block_initing_task","bootstrap_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","column","create","default","default","default","deref","deref","deref","downgrade","drop","drop","drop","eq","eq","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_payload","func","get_env","get_hash","get_hash","get_my_current_task","get_my_current_task_id","get_namespace","get_task","has_exited","hash","hash","id","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_an_idle_task","is_application","is_joinable","is_restartable","is_runnable","is_running","is_suspended","join","kill","line","make_inited_task_runnable","mark_as_exited","mark_as_killed","mmi","msg","name","namespace","new","new","new","payload","pinned_cpu","post_context_switch_action","reap_if_orphaned","running_on_cpu","runstate","schedule","set_env","set_kill_handler","set_scheduler_policy","set_waker","suspend","take_kill_handler","task_switch","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock","unsuspend","upgrade","with_current_task","with_current_task_and_value","with_kstack","with_restart_info","app_crate","env","mmi","namespace"],"q":["tasktask::InheritedStates","","",""],"d":["The current task reference was already borrowed, thus it …","The current task was already initialized; its task ID is …","This task is blocked on something and is <em>not</em> able to be …","The <code>Task</code> ran to completion and returned the enclosed <code>Any</code> …","An error type indicating that the current task has not yet …","The new <code>Task</code> will be initialized with the enclosed custom …","A type wrapper used to hold CPU-local data that should be …","A non-language-level problem, such as a Page Fault or some …","The two ways a <code>Task</code> can exit, including possible return …","A wrapper around <code>TaskRef</code> that allows this task to mark …","This <code>Task</code> has exited and can no longer be run. This covers …","The signature of a Task’s failure cleanup function.","The new <code>Task</code> will inherit its states from the enclosed <code>Task</code>…","The states used to initialize a new <code>Task</code> when creating it; …","An error type indicating that the current task was already …","This task is in the midst of being initialized/spawned.","A reference to a <code>Task</code> that can be <code>join</code>ed; auto-derefs into …","The function signature of the callback that will be …","The list of possible reasons that a given <code>Task</code> was killed …","The <code>Task</code> did NOT run to completion but was instead killed …","The task IDs used as arguments to <code>init_current_task()</code> did …","The enclosed Task ID was not in the system-wide task list.","A Rust-level panic occurred while running this <code>Task</code>.","Just like <code>core::panic::PanicInfo</code>, but with owned String …","This <code>Task</code> had already exited, and now its <code>ExitValue</code> has …","The user or another task requested that this <code>Task</code> be …","A struct holding data items needed to restart a <code>Task</code>.","The set of possible runstates that a <code>Task</code> can be in.","This task is able to be scheduled in, but not necessarily …","An empty struct that invokes <code>schedule()</code> when it is dropped.","The signature for the function that selects the next task …","A structure that contains contextual information for a …","A shareable, cloneable reference to a <code>Task</code> that exposes …","A type wrapper used to hold a CPU-local <code>PreemptionGuard</code>  …","A weak reference to a shared Task reference (<code>TaskRef</code>).","Returns a list containing a snapshot of all tasks that …","For application <code>Task</code>s, this is effectively a reference to …","Stores the argument of the task for restartable tasks","Blocks this <code>Task</code> by setting its runstate to …","Blocks this <code>Task</code> if it is a newly-spawned task currently …","Bootstraps a new task from the current thread of execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TaskRef</code>, a shareable wrapper around the …","","","","","","","Creates a new weak reference to this <code>Task</code>, similar to <code>Weak</code>.","","Marks the inner <code>Task</code> as not joinable, meaning that it is …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new <code>PanicInfoOwned</code> object containing only the …","Stores the function of the task for restartable tasks","Gets a reference to this task’s <code>Environment</code>.","","","Returns a cloned reference to the current task.","Returns the unique ID of the current task.","Returns the namespace that this <code>Task</code> is loaded/linked into …","Returns a <code>WeakTaskRef</code> (shared reference) to the <code>Task</code> …","Returns <code>true</code> if this <code>Task</code> has been exited, i.e., if its …","","","The unique identifier of this Task.","Returns a mutable reference to this <code>Task</code>’s inner state. ","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this Task is an idle task, the task that runs by …","Returns <code>true</code> if this is an application <code>Task</code>.","Returns <code>true</code> if this task is joinable, <code>false</code> if not.","Returns <code>true</code> if this <code>Task</code> was spawned as a restartable …","Returns whether this <code>Task</code> is runnable, i.e., able to be …","Returns <code>true</code> if this <code>Task</code> is currently running.","Returns <code>true</code> if this <code>Task</code> is suspended.","Blocks the current task until this task has exited.","Kills this <code>Task</code> (not a clean exit) without allowing it to …","","Makes this <code>Task</code> <code>Runnable</code> if it is a newly-spawned and …","Call this function to indicate that this task has …","Call this function to indicate that this task has been …","Memory management details: page tables, mappings, …","","The simple name of this Task.","This <code>Task</code> is linked into and runs within the context of …","Creates a new <code>Task</code> and initializes it to be non-<code>Runnable</code>.","","","","Returns the ID of the CPU this <code>Task</code> is pinned on, or <code>None</code> …","Perform any actions needed after a context switch.","Reaps this task (if orphaned) by taking and dropping its …","Returns the ID of the CPU this <code>Task</code> is currently running …","Returns the current <code>RunState</code> of this <code>Task</code>.","Yields the current CPU by selecting a new <code>Task</code> to run next,","Sets the <code>Environment</code> of this Task.","Registers a kill handler function for the current <code>Task</code>.","Sets the active scheduler policy used by <code>schedule()</code> to …","Sets the waker to be awoken when this task exits.","Suspends this <code>Task</code>.","Takes ownership of the current <code>Task</code>’s <code>KillHandler</code> …","Switches from the current task to the given <code>next</code> task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unblocks this <code>Task</code> by setting its runstate to …","Unsuspends this <code>Task</code>.","Attempts to upgrade this <code>WeakTaskRef</code> to a <code>TaskRef</code>; see …","Invokes the given <code>function</code> with a reference to the current …","Similar to <code>with_current_task()</code>, but also accepts a value …","Exposes read-only access to this <code>Task</code>’s <code>Stack</code> by invoking","Invokes <code>func</code> with immutable access to this <code>Task</code>’s …","","","",""],"i":[25,25,3,24,0,27,0,23,0,0,3,0,27,0,0,3,0,0,0,24,25,25,23,0,3,23,0,0,3,0,0,0,0,0,0,0,2,46,2,2,0,46,2,13,18,17,27,14,23,24,3,10,11,15,16,25,26,46,2,13,18,17,27,14,23,24,3,10,11,15,16,25,26,3,10,11,3,10,11,14,10,14,15,16,13,17,10,10,2,13,18,3,10,14,2,2,13,17,14,14,23,23,24,3,10,11,25,26,46,2,13,18,17,27,27,14,14,23,24,3,10,11,15,16,25,26,14,46,2,2,10,0,0,2,0,2,2,10,2,2,46,2,13,18,17,27,14,23,24,3,10,11,15,16,25,26,2,2,10,2,2,2,2,13,10,14,2,17,17,2,14,2,2,2,15,16,14,2,17,17,2,2,0,2,0,0,13,2,0,0,3,10,11,2,14,23,46,2,13,18,17,27,14,23,24,3,10,11,15,16,25,26,46,2,13,18,17,27,14,23,24,3,10,11,15,16,25,26,46,2,13,18,17,27,14,23,24,3,10,11,15,16,25,26,2,2,11,0,0,2,2,47,47,47,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,[2,[[4,[3,3]]]],[2,[[4,[3,3]]]],[[5,[7,[6]],8],[[4,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[10,10],[11,11],[[]],[[]],[[]],0,[[2,12],13],[[],14],[[],15],[[],16],[13],[17],[10],[10,11],[2],[13],[18],[[3,3],19],[[10,10],19],0,[[2,20],[[4,[21]]]],[[2,20],[[4,[21]]]],[[13,20],22],[[17,20],22],[[14,20],[[4,[21]]]],[[14,20],[[4,[21]]]],[[23,20],[[4,[21]]]],[[23,20],[[4,[21]]]],[[24,20],[[4,[21]]]],[[3,20],[[4,[21]]]],[[10,20],22],[[11,20],22],[[25,20],22],[[26,20],22],[[]],[[]],[[]],[[]],[[]],[2,27],[[]],[28,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[29,30]]],14],0,[2,[[35,[[34,[32,33]]]]]],[[],36],[[],36],[[],[[37,[10]]]],[[],38],[2,35],[38,[[37,[11]]]],[2,19],[2],[10],0,[2,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,19],[10,19],[2,19],[2,19],[2,19],[2,19],[13,[[4,[24,9]]]],[[10,23],[[4,[9]]]],0,[2,[[4,[3,3]]]],[[17,[31,[29]]],[[4,[9]]]],[[17,23],[[4,[9]]]],0,0,0,0,[[[37,[6]],27],[[4,[2,9]]]],[[],15],[[],16],0,[2,[[37,[5]]]],[17,40],[17],[2,[[37,[5]]]],[2,3],[[],19],[[2,[35,[[34,[32,33]]]]]],[41,[[4,[9]]]],[42],[[13,43]],[2],[[],[[37,[41]]]],[[10,5,40]],[[]],[[]],[[]],[[],44],[[],44],[[],44],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[2,[[4,[3,3]]]],[2],[11,[[37,[10]]]],[[],[[4,[26]]]],[[],4],[2],[2],0,0,0,0],"p":[[3,"Vec"],[3,"Task"],[4,"RunState"],[4,"Result"],[3,"CpuId"],[3,"Stack"],[3,"NoDrop"],[6,"MmiRef"],[15,"str"],[3,"TaskRef"],[3,"WeakTaskRef"],[6,"FailureCleanupFunction"],[3,"JoinableTaskRef"],[3,"PanicInfoOwned"],[3,"TaskSwitchPreemptionGuard"],[3,"DropAfterTaskSwitch"],[3,"ExitableTaskRef"],[3,"ScheduleOnDrop"],[15,"bool"],[3,"Formatter"],[3,"Error"],[6,"Result"],[4,"KillReason"],[4,"ExitValue"],[4,"InitCurrentTaskError"],[3,"CurrentTaskNotFound"],[4,"InheritedStates"],[3,"PanicInfo"],[8,"Any"],[3,"Global"],[3,"Box"],[3,"Environment"],[3,"Spin"],[3,"Mutex"],[3,"Arc"],[15,"u64"],[4,"Option"],[15,"usize"],[3,"TaskInner"],[3,"PreemptionGuard"],[6,"KillHandler"],[6,"SchedulerFunc"],[3,"Waker"],[3,"String"],[3,"TypeId"],[3,"RestartInfo"],[13,"Custom"]],"a":{"exit":[163],"orphan":[158],"reap":[163],"yield":[182],"zombie":[158]}},\
"task_fs":{"doc":"This crate contains the direcotires and files that …","t":[3,3,17,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MmiDir","MmiFile","TASKS_DIRECTORY_NAME","TASKS_DIRECTORY_PATH","TaskDir","TaskFile","TaskFs","as_mapping","as_mapping","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","from","from","from","from","from","get","get","get","get_absolute_path","get_absolute_path","get_absolute_path","get_absolute_path","get_absolute_path","get_name","get_name","get_name","get_name","get_name","get_parent_dir","get_parent_dir","get_parent_dir","get_parent_dir","get_parent_dir","init","insert","insert","insert","into","into","into","into","into","len","len","list","list","list","name","new","new","new","new","read_at","read_at","remove","remove","remove","set_parent_dir","set_parent_dir","set_parent_dir","set_parent_dir","set_parent_dir","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_at","write_at"],"q":["task_fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Lazily computed directory that contains subfiles and …","Lazily computed file that contains information  about a …","The name of the VFS directory that exposes task info in …","The absolute path of the tasks directory, which is …","A lazily computed directory that holds files and …","Lazily computed file that holds information about this …","The top level directory that includes a …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Initializes the tasks virtual filesystem directory within …","This function adds a newly created fs node (the argument) …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a string listing all the children in the directory","Returns a string listing all the children in the directory","Returns a string listing all the children in the directory","The name of the directory","Creates a new directory and passes a pointer to the new …","","Creates a new directory and passes a pointer to the new …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,5,7,10,1,11,5,7,10,1,11,5,1,5,7,10,1,11,5,7,10,11,7,10,1,11,5,7,10,1,11,5,7,10,1,11,5,0,7,10,11,7,10,1,11,5,1,5,7,10,11,10,10,1,11,5,1,5,7,10,11,7,10,1,11,5,7,10,1,11,5,7,10,1,11,5,7,10,1,11,5,1,5],"f":[0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[5,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[6]]]],[5,[[4,[6]]]],[[]],[[]],[[]],[[]],[[]],[[7,3],[[9,[8]]]],[[10,3],[[9,[8]]]],[[11,3],[[9,[8]]]],[7,12],[10,12],[1,12],[11,12],[5,12],[7,12],[10,12],[1,12],[11,12],[5,12],[7,[[9,[13]]]],[10,[[9,[13]]]],[1,[[9,[13]]]],[11,[[9,[13]]]],[5,[[9,[13]]]],[[],[[4,[3]]]],[[7,8],[[4,[[9,[8]],3]]]],[[10,8],[[4,[[9,[8]],3]]]],[[11,8],[[4,[[9,[8]],3]]]],[[]],[[]],[[]],[[]],[[]],[1,14],[5,14],[7,[[15,[12]]]],[10,[[15,[12]]]],[11,[[15,[12]]]],0,[[12,13,14,16],[[4,[10,3]]]],[[14,16],1],[[14,16],11],[[14,16],5],[[1,14],[[4,[14,6]]]],[[5,14],[[4,[14,6]]]],[[7,8],[[9,[8]]]],[[10,8],[[9,[8]]]],[[11,8],[[9,[8]]]],[[7,17]],[[10,17]],[[1,17]],[[11,17]],[[5,17]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[1,14],[[4,[14,6]]]],[[5,14],[[4,[14,6]]]]],"p":[[3,"TaskFile"],[3,"MappedPages"],[15,"str"],[4,"Result"],[3,"MmiFile"],[4,"IoError"],[3,"TaskFs"],[4,"FileOrDir"],[4,"Option"],[3,"TaskDir"],[3,"MmiDir"],[3,"String"],[6,"DirRef"],[15,"usize"],[3,"Vec"],[3,"WeakTaskRef"],[6,"WeakDirRef"],[3,"TypeId"]]},\
"task_struct":{"doc":"This crate contains the basic <code>Task</code> structure, which holds …","t":[13,13,13,13,4,13,13,4,13,6,4,13,13,3,13,13,3,4,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,12,12,12,12,11,12,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12],"n":["Blocked","Completed","Custom","Exception","ExitValue","Exited","FromTask","InheritedStates","Initing","KillHandler","KillReason","Killed","Panic","PanicInfoOwned","Reaped","Requested","RestartInfo","RunState","Runnable","Task","TaskInner","app_crate","argument","block","block_initing_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","column","default","drop","eq","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_payload","func","get_env","get_hash","get_namespace","has_exited","hash","id","inner_mut","into","into","into","into","into","into","into","into","is_an_idle_task","is_application","is_restartable","is_runnable","is_running","is_suspended","kill_handler","kstack","line","make_inited_task_runnable","mmi","msg","name","namespace","new","payload","pinned_cpu","pinned_cpu","restart_info","running_on_cpu","runstate","saved_sp","set_env","suspend","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock","unsuspend","waker","with_kstack","with_restart_info","app_crate","env","mmi","namespace"],"q":["task_struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","task_struct::InheritedStates","","",""],"d":["This task is blocked on something and is <em>not</em> able to be …","The <code>Task</code> ran to completion and returned the enclosed <code>Any</code> …","The new <code>Task</code> will be initialized with the enclosed custom …","A non-language-level problem, such as a Page Fault or some …","The two ways a <code>Task</code> can exit, including possible return …","This <code>Task</code> has exited and can no longer be run. This covers …","The new <code>Task</code> will inherit its states from the enclosed <code>Task</code>…","The states used to initialize a new <code>Task</code> when creating it; …","This task is in the midst of being initialized/spawned.","The function signature of the callback that will be …","The list of possible reasons that a given <code>Task</code> was killed …","The <code>Task</code> did NOT run to completion but was instead killed …","A Rust-level panic occurred while running this <code>Task</code>.","Just like <code>core::panic::PanicInfo</code>, but with owned String …","This <code>Task</code> had already exited, and now its <code>ExitValue</code> has …","The user or another task requested that this <code>Task</code> be …","A struct holding data items needed to restart a <code>Task</code>.","The set of possible runstates that a <code>Task</code> can be in.","This task is able to be scheduled in, but not necessarily …","A structure that contains contextual information for a …","The parts of a <code>Task</code> that may be modified after its …","For application <code>Task</code>s, this is effectively a reference to …","Stores the argument of the task for restartable tasks","Blocks this <code>Task</code> by setting its runstate to …","Blocks this <code>Task</code> if it is a newly-spawned task currently …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new <code>PanicInfoOwned</code> object containing only the …","Stores the function of the task for restartable tasks","Gets a reference to this task’s <code>Environment</code>.","","Returns the namespace that this <code>Task</code> is loaded/linked into …","Returns <code>true</code> if this <code>Task</code> has been exited, i.e., if its …","","The unique identifier of this Task.","Returns a mutable reference to this <code>Task</code>’s inner state. ","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this Task is an idle task, the task that runs by …","Returns <code>true</code> if this is an application <code>Task</code>.","Returns <code>true</code> if this <code>Task</code> was spawned as a restartable …","Returns whether this <code>Task</code> is runnable, i.e., able to be …","Returns <code>true</code> if this <code>Task</code> is currently running.","Returns <code>true</code> if this <code>Task</code> is suspended.","The function that will be called when this <code>Task</code> panics or …","The kernel stack, which all <code>Task</code>s must have in order to …","","Makes this <code>Task</code> <code>Runnable</code> if it is a newly-spawned and …","Memory management details: page tables, mappings, …","","The simple name of this Task.","This <code>Task</code> is linked into and runs within the context of …","Creates a new <code>Task</code> and initializes it to be non-<code>Runnable</code>.","","Returns the ID of the CPU this <code>Task</code> is pinned on, or <code>None</code> …","Whether or not this task is pinned to a certain CPU. The …","Stores the restartable information of the task.  …","Returns the ID of the CPU this <code>Task</code> is currently running …","Returns the current <code>RunState</code> of this <code>Task</code>.","the saved stack pointer value, used for task switching.","Sets the <code>Environment</code> of this Task.","Suspends this <code>Task</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unblocks this <code>Task</code> by setting its runstate to …","Unsuspends this <code>Task</code>.","The waker that is awoken when this task completes.","Exposes read-only access to this <code>Task</code>’s <code>Stack</code> by invoking","Invokes <code>func</code> with immutable access to this <code>Task</code>’s …","","","",""],"i":[2,10,11,9,0,2,11,0,2,0,0,10,9,0,2,9,0,0,2,0,0,1,26,1,1,26,19,1,11,4,9,10,2,26,19,1,11,4,9,10,2,2,2,4,4,1,2,4,1,1,4,4,9,9,10,2,26,19,1,11,11,4,4,9,10,2,4,26,1,1,1,1,1,1,1,26,19,1,11,4,9,10,2,1,1,1,1,1,1,19,19,4,1,1,4,1,1,1,4,1,19,19,1,1,19,1,1,2,1,4,9,26,19,1,11,4,9,10,2,26,19,1,11,4,9,10,2,26,19,1,11,4,9,10,2,1,1,19,1,1,27,27,27,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2,2]]]],[1,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],0,[[],4],[1],[[2,2],5],0,[[1,6],7],[[1,6],7],[[4,6],7],[[4,6],[[3,[8]]]],[[9,6],[[3,[8]]]],[[9,6],7],[[10,6],7],[[2,6],7],[[]],[[]],[[]],[1,11],[[]],[12,4],[[]],[[]],[[]],[[]],[[[14,[13]]],4],0,[1,[[17,[[16,[15]]]]]],[[],18],[1,17],[1,5],[1],0,[1,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,5],[1,5],[1,5],[1,5],[1,5],0,0,0,[1,[[3,[2,2]]]],0,0,0,0,[[[21,[20]],11],[[3,[1,22]]]],0,[1,[[21,[23]]]],0,0,[1,[[21,[23]]]],[1,2],0,[[1,[17,[[16,[15]]]]]],[1],[[]],[[],24],[[],24],[[],24],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[1,[[3,[2,2]]]],[1],0,[1],[1],0,0,0,0],"p":[[3,"Task"],[4,"RunState"],[4,"Result"],[3,"PanicInfoOwned"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"KillReason"],[4,"ExitValue"],[4,"InheritedStates"],[3,"PanicInfo"],[8,"Any"],[3,"Box"],[3,"Environment"],[6,"Mutex"],[3,"Arc"],[15,"u64"],[3,"TaskInner"],[3,"Stack"],[4,"Option"],[15,"str"],[3,"CpuId"],[3,"String"],[3,"TypeId"],[3,"RestartInfo"],[13,"Custom"]]},\
"text_display":{"doc":"This crate defines a text displayable. A text displayable …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TextDisplay","borrow","borrow_mut","display","fmt","from","get_bg_color","get_dimensions","get_index","get_location","get_next_index","get_size","into","new","reset_cache","set_size","set_text","try_from","try_into","type_id"],"q":["text_display","","","","","","","","","","","","","","","","","","",""],"d":["A text displayable profiles the size and color of a block …","","","","","Returns the argument unchanged.","Gets the background color of the text area","Gets the size of a text displayable in number of …","Translate the location of a character to its index in the …","Translate the index of a character in the text to the …","Gets the index of next character to be displayabled. It is …","","Calls <code>U::from(self)</code>.","Creates a new text displayable.","Clear the cache of the text displayable.","","Sets the text of the text displayable","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[1,2,3],[[6,[4,5]]]],[[1,7],8],[[]],[1,9],[1],[[1,10,10],10],[[1,10]],[1,10],[1],[[]],[[10,10,9,9],[[6,[1,5]]]],[1],[[1,10,10]],[[1,5]],[[],6],[[],6],[[],11]],"p":[[3,"TextDisplay"],[3,"Coord"],[3,"Framebuffer"],[3,"Rectangle"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Color"],[15,"usize"],[3,"TypeId"]]},\
"text_terminal":{"doc":"A text-mode terminal emulator. ","t":[13,4,3,13,18,18,18,3,13,18,18,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,4,4,13,4,13,3,4,18,13,18,13,13,18,18,13,4,18,16,13,13,18,18,18,13,13,18,13,3,13,3,13,13,13,18,13,13,18,18,13,13,4,18,13,13,3,18,4,3,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,18,13,13,13,3,18,18,18,3,3,4,4,3,3,4,13,3,13,3,3,13,13,18,8,3,3,13,3,18,13,3,13,13,3,3,13,18,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlternateFont","AnsiStyleCodes","AsciiControlCodes","AtUnit","AutomaticCarriageReturn","BLINK","BRIGHT","BackgroundColor","BackgroundColor","Backspace","BackwardsDelete","Bar","Bell","Black","Blink","BlinkRapid","Blue","Bottom","Bright","BrightBlack","BrightBlue","BrightCyan","BrightGreen","BrightMagenta","BrightRed","BrightWhite","BrightYellow","CarriageReturn","CarriageReturnSendsLineFeed","Character","Circled","Color","Color8Bit","Column","CursorStyle","CursosPositionReport","Cyan","DIM","Default","Delete","DeviceStatusOk","DeviceStatusRequest","Dim","DisplayAction","DisplayControlChars","DisplayError","DoulbeUnderlinedOrNotBright","Down","ESCAPE_DELIM","ESCAPE_PREFIX","ESCAPE_SUFFIX","EmptyBox","Erase","Escape","FilledBox","ForegroundColor","ForegroundColor","FormatFlags","Fraktur","Framed","Green","HIDDEN","Hidden","Hidden","INVERSE","ITALIC","Insert","Insert","InsertMode","InsertMode","Inverse","Italic","Line","LineFeed","LineFeedSendsCarriageReturn","LineIndex","Magenta","ModeSwitch","Multi","No","No","No","None","NotBlink","NotBrightNorDim","NotFramedOrCircled","NotHidden","NotInverse","NotItalicNorFraktur","NotOverlined","NotStrikethrough","NotSuperOrSubscript","NotUnderlined","Overlined","Overwrite","Overwrite","PageBreak","PrimaryFont","RESET_SUFFIX","RGB","Red","Reset","Row","SET_SUFFIX","STRIKETHROUGH","SUFFIX","ScreenPoint","ScreenSize","ScrollAction","ScrollPosition","ScrollbackBuffer","ScrollbackBufferPoint","ShowCursor","Single","StatusReportCommands","Strikethrough","Style","StyleDiff","Subscript","Superscript","Tab","TerminalBackend","TerminalMode","TextTerminal","Top","TtyBackend","UNDERLINE","Underlined","UnderlinedColor","UnderlinedColor","Underscore","Unit","UnitIndex","Up","VerticalTab","Visible","White","Wrap","Yellow","Yes","Yes","Yes","_IdeogramDoubleOverlined","_IdeogramDoubleUnderlined","_IdeogramOverlined","_IdeogramStressMarking","_IdeogramUnderlined","_NotIdeogram","_NotProportionalSpacing","_ProportionalSpacing","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits_that_differ","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_screen","clear_screen","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","contains","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","diff","difference","display","display","displayable_width","drop","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","handle_input","hash","index","index","index","index_mut","index_mut","index_mut","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","last_column","last_row","move_cursor_by","move_cursor_by","move_cursor_to","move_cursor_to","new","new","next","not","num_columns","num_rows","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","reset_screen","reset_screen","resize_screen","screen_size","screen_size","screen_size","set","set_insert_mode","set_insert_mode","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","to_escape_code","to_escape_code","to_escape_code","to_escape_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","update_screen_size","update_screen_size","write_bytes","write_bytes","blue","green","red","num_units","screen_end","screen_start","screen_start","screen_start","screen_start","scrollback_end","scrollback_end","scrollback_start","scrollback_start","scrollback_start","width_difference"],"q":["text_terminaltext_terminal::Color","","","text_terminal::DisplayAction","","","","","","","","","","",""],"d":["Sets the font to an alternate font.  There are 10 …","The set of all possible ANSI escape codes for setting text …","The set of ASCII values that are non-printable characters  …","The terminal is scrolled to a specific point, given by the ","(LF/NL) Automatically follow a Line Feed (LF), Vertical …","If set, the unit box where this character is displayed …","If set, this character is displayed in a bright color, …","A wrapper type around <code>Color</code> that is used in …","Set the background color: the color displayed behind the …","(BS) Moves the cursor backwards by one unit/character, but …","(DEL) Backwards-deletes the character before (to the left …","A line before (to the left of) the character box.","(BEL) Plays a terminal bell or beep.","","The text will blink at slower rate, under 150 blinks per …","The text will blink rapidly at a fast rate, over 150 …","","The terminal position is scrolled all the way down.","Bright or bold text.","Gray/grey.","","","","","","True pure white. ","","(CR) Moves the cursor to the beginning of the line, i.e., …","Whether a Carriage Return subsequently issues a Line Feed …","The character stored in each <code>Unit</code> of the terminal screen. ","The text will be displayed with a circle or oval …","The set of colors that can be displayed by a terminal …","8-bit color, as introduced in xterm.","A column index or number of columns in the x-dimension of …","","(CSR) Queries the terminal device for a cursor position …","","If set, this character is displayed using a dim or faint …","The default color, which is generally unspecified and …","Remove the given number of units from the screen starting …","The response to a <code>DeviceStatusRequest</code> indicating the …","(DSR) Queries the terminal device for its status. A reply …","Dim or faint text.","A pending action to display content from the terminal’s …","(DECCRM) Display control characters. This is off by …","The Error type returned by the <code>TerminalBackend::display()</code> …","The text will be underlined twice, or, depending on the …","Scroll the screen down by the included number of lines.","","","","An empty box that surrounds the character but does not …","Erases the contents displayed on the screen in the given …","(ESC) The escape character.","A rectangle that covers the entire character box. This is …","A wrapper type around <code>Color</code> that is used in …","Set the foreground color: the color the text will be …","The flags that describe the formatting of a given text …","Sets the font to be a blackletter font, which is a …","The text will be displayed with a rectangular box …","","If set, this character is not displayed at all, only a …","The text will be concealed/invisible and not displayed at …","","If set, this character is displayed with inversed/reversed …","If set, this character is displayed in italics.","Inserts the content from the given range in the scrollback …","Characters will be inserted at the current cursor, …","Whether text characters printed to the terminal will be …","(DECIM) Set insert mode. This is off by default, meaning …","The foreground and background colors will be swapped.  The …","Italicized text.","An entire unbroken line of characters (<code>Unit</code>s) that has …","(LF) Moves the cursor to the next line, i.e., Line feed, …","Whether a Line Feed (newline / new line) subsequently …","An index of a <code>Line</code> in the scrollback buffer.","","The set of “frequently-supported” commands to switch …","","","","","Do nothing, do not scroll the screen.","Disables <code>Blink</code> or <code>BlinkRapid</code>.","Normal font intensity: Disables <code>Bright</code> or <code>Dim</code>.","Disables <code>Framed</code> or <code>Circled</code>.","Disables Hidden``: text is displayed as normal. Sometimes …","Disables <code>Inverse</code>: foreground colors and background colors …","Normal font sytle: Disables <code>Italic</code> or <code>Fraktur</code>.","Disabled <code>Overlined</code>.","Disables <code>Strikethrough</code>: text is not crossed out.","Disables <code>Superscript</code> or <code>Subscript</code>.","Disables <code>Underline</code> or <code>DoubleUnderline</code>.","The text will be overlined: displayed with a line on top …","Replace the contents displayed on the screen starting at …","Characters will be overwritten in place. Sometimes called …","(FF) Inserts a page break (form feed) to move the …","Sets the font to the primary default font.","If this value comes after one of the above command values, …","True 24-bit RGB color, with 8 bits for each of the red, …","","Resets or clears all styles.","A row index or number of rows in the y-dimension of the …","If this value comes after one of the above command values, …","If set, this character is displayed with a strike-through, …","The value that comes after one of the above command values.","A 2D position value that represents a point on the screen, …","The size of a terminal screen, expressed as the number of …","A pending action to scroll the screen up or down by a …","The position (“viewport”) that the terminal is …","The scrollback buffer is stored as a row-major vector of …","A 2D position value that represents a point in the …","Whether the screen cursor is visible.","","","The text will be striked through, i.e., crossed out with a …","The style of text, including formatting and color choice,  …","A representation of the difference between two <code>Style</code>s.","","","(HT) Inserts a horizontal tab.","","The set of options that determine terminal behavior.","A text-based terminal that supports the ANSI, xterm, …","The terminal is scrolled all the way up.","A terminal backend that is simply a character device TTY …","If set, this character is displayed with a single …","Underlined text. ","A wrapper type around <code>Color</code> that is used in …","Sets the underline color.  Without this, the underline …","A line beneath the character box.","A <code>Unit</code> is a single character block displayed in the …","An index of a <code>Unit</code> in a <code>Line</code> in the scrollback buffer.","Scroll the screen up by the included number of lines.","(VT) Inserts a vertical tab.","","More of a light gray/grey. Use <code>BrightWhite</code> for true white.","Whether or not to wrap cursor movement or text display to …","","","","","","","","","","Disables all Ideogram styles.","Disables <code>_ProportionalSpacing</code>.","Proportional spacing, which sets the Teletex character …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns a bit mask of the bits that differ between <code>self</code> …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the entire terminal screen.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Displays the given range of <code>Unit</code>s in the scrollback buffer …","","Returns the number of columns required to display this …","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Flushes the entire viewable region of the terminal’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Pulls as many bytes as possible from the given <code>Read</code>er and …","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the index of the final <code>Column</code>, which is …","Returns the index of the final <code>Row</code>, which is <code>num_rows - 1</code>.","Moves the on-screen cursor by the given number of rows and …","","Moves the on-screen cursor to the given position.","","Create an empty <code>TextTerminal</code> with no text content.","","","Returns the complement of this set of flags.","The width of the screen viewport in number of columns (x …","The height of the screen viewport in number of rows (y …","","","","","","","","Removes the specified flags in-place.","Fully reset the terminal screen to its initial default …","","Resizes this terminal’s screen to be <code>width</code> columns and …","Returns the screen size of the terminal.","Returns the size of this terminal’s screen.","","Inserts or removes the specified flags depending on the …","TODO: change this to support any arbitrary terminal mode","","Returns the set difference of the two sets of flags.","","","","","","","Disables all flags enabled in the set.","","","","","","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Resizes the terminal screen. TODO: perform a full reflow …","","A temporary hack to allow direct writing to the backend’…","","","","","","","","","","","","","","","",""],"i":[44,0,0,16,50,7,7,0,44,51,51,30,51,11,44,44,11,16,44,11,11,11,11,11,11,11,11,51,0,0,44,0,11,0,0,52,11,7,11,33,52,52,44,0,50,38,44,20,44,44,44,30,33,51,30,0,44,0,44,44,11,7,44,23,7,7,33,22,0,50,44,44,0,51,0,0,11,0,17,21,24,25,20,44,44,44,44,44,44,44,44,44,44,44,33,22,51,44,50,11,11,44,0,50,7,52,0,0,0,0,0,0,0,17,0,44,0,0,44,44,51,0,0,0,16,0,7,44,0,44,30,0,0,20,51,23,11,0,11,21,24,25,44,44,44,44,44,44,44,44,1,2,3,4,5,6,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7,32,51,50,52,39,10,11,12,13,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,32,51,50,52,39,10,11,12,13,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,38,10,11,12,13,14,15,7,16,17,18,19,1,2,3,4,5,6,20,21,22,23,24,25,26,11,12,13,14,15,7,16,17,18,19,1,2,3,4,5,6,20,21,22,23,24,25,26,7,1,2,3,4,5,6,7,7,11,12,13,14,15,7,16,29,17,18,19,1,2,3,4,5,6,30,26,29,31,18,29,31,15,7,38,10,17,20,7,11,12,13,14,15,7,16,17,19,1,2,3,4,5,6,20,21,22,23,24,25,26,7,39,11,12,13,14,15,44,44,7,7,7,7,7,16,29,31,17,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,32,51,50,52,39,10,11,11,12,12,13,13,14,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,7,7,7,7,39,7,29,31,31,29,31,31,7,7,7,32,51,50,52,39,10,11,12,13,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,32,7,7,19,19,38,10,38,10,39,10,32,7,19,19,7,1,2,3,4,5,6,7,38,10,39,38,39,10,7,38,10,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,12,13,14,44,11,12,13,14,15,7,16,17,18,19,1,2,3,4,5,6,20,21,22,23,24,25,26,44,17,7,32,51,50,52,39,10,11,12,13,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,32,51,50,52,39,10,11,12,13,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,32,51,50,52,39,10,11,12,13,14,15,44,7,16,29,31,17,18,19,1,2,3,4,5,6,30,33,20,21,22,23,24,25,26,7,38,10,38,10,53,53,53,54,55,54,55,56,57,56,57,54,56,57,56],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[6,6]],[[],7],[[7,7],7],[[7,7]],[[7,7],7],[[7,7]],[7,8],[[7,7],7],[[7,7],7],[[7,7]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]]],[11,11],[12,12],[13,13],[14,14],[15,15],[7,7],[16,16],[17,17],[18,18],[19,19],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,7],27],[[1,1],27],[[2,2],27],[[3,3],27],[[4,4],27],[[5,5],27],[[6,6],27],[7,7],[[7,7],28],[[],11],[[],12],[[],13],[[],14],[[],15],[[],7],[[],16],[[],29],[[],17],[[],18],[[],19],[[],1],[[],2],[[],3],[[],4],[[],5],[[],6],[[],30],[[],26],[29],[31],[18],[29],[31],[[15,15],32],[[7,7],7],[[33,31,[34,[15]]],[[35,[1]]]],[[[10,[9]],33,31,[34,[15]]],[[35,[1]]]],[17,36],[20],[[],7],[[11,11],28],[[12,12],28],[[13,13],28],[[14,14],28],[[15,15],28],[[7,7],28],[[16,16],28],[[17,17],28],[[19,19],28],[[1,1],28],[[2,2],28],[[3,3],28],[[4,4],28],[[5,5],28],[[6,6],28],[[20,20],28],[[21,21],28],[[22,22],28],[[23,23],28],[[24,24],28],[[25,25],28],[[26,26],28],[[7,37]],[[[39,[38]]],[[41,[40]]]],[[11,42],43],[[12,42],43],[[13,42],43],[[14,42],43],[[15,42],43],[[44,42],43],[[44,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[16,42],43],[[29,42],43],[[31,42],43],[[17,42],43],[[17,42],43],[[18,42],43],[[19,42],43],[[1,42],43],[[2,42],43],[[3,42],43],[[4,42],43],[[5,42],43],[[6,42],43],[[30,42],43],[[33,42],43],[[20,42],43],[[21,42],43],[[22,42],43],[[23,42],43],[[24,42],43],[[25,42],43],[[26,42],43],[[]],[[]],[[]],[[]],[[]],[[]],[8,11],[[]],[[]],[11,12],[[]],[11,13],[11,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[34,[7]]]],[8,7],[8,7],[37,7],[[[39,[38]]],[[41,[40]]]],[7],[[29,6]],[[31,4]],[[31,5]],[[29,6]],[[31,4]],[[31,5]],[[7,7]],[[7,7],7],[[7,7],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,28],[7,28],[19,3],[19,2],[[45,45],1],[[[10,[9]],45,45],1],[1,1],[[[10,[9]],1],1],[[36,36,38],[[39,[38]]]],[[[34,[19]],9],[[10,[9]]]],[32,34],[7,7],0,0,[[7,7],[[34,[27]]]],[[1,1],[[34,[27]]]],[[2,2],[[34,[27]]]],[[3,3],[[34,[27]]]],[[4,4],[[34,[27]]]],[[5,5],[[34,[27]]]],[[6,6],[[34,[27]]]],[[7,7]],[[]],[[[10,[9]]]],[[[39,[38]],36,36]],[[],19],[[[39,[38]]],19],[[[10,[9]]],19],[[7,7,28]],[22],[[[10,[9]],22]],[[7,7],7],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7]],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[6,6]],[[7,7],7],[12,[[47,[46]]]],[13,[[47,[46]]]],[14,[[47,[46]]]],[44,[[47,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],48],[[],48],[[7,7]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[7,7],7],[19],[[[10,[9]],19]],[[]],[[[10,[9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"ScreenPoint"],[3,"Row"],[3,"Column"],[3,"ScrollbackBufferPoint"],[3,"LineIndex"],[3,"UnitIndex"],[3,"FormatFlags"],[15,"u8"],[8,"Write"],[3,"TtyBackend"],[4,"Color"],[3,"ForegroundColor"],[3,"BackgroundColor"],[3,"UnderlinedColor"],[3,"Style"],[4,"ScrollPosition"],[4,"Character"],[3,"Unit"],[3,"ScreenSize"],[4,"ScrollAction"],[4,"Wrap"],[4,"InsertMode"],[4,"ShowCursor"],[4,"CarriageReturnSendsLineFeed"],[4,"LineFeedSendsCarriageReturn"],[3,"TerminalMode"],[4,"Ordering"],[15,"bool"],[3,"Line"],[4,"CursorStyle"],[3,"ScrollbackBuffer"],[3,"StyleDiff"],[4,"DisplayAction"],[4,"Option"],[4,"Result"],[15,"u16"],[8,"IntoIterator"],[8,"TerminalBackend"],[3,"TextTerminal"],[15,"usize"],[6,"Result"],[3,"Formatter"],[6,"Result"],[4,"AnsiStyleCodes"],[15,"i32"],[15,"str"],[4,"Cow"],[3,"String"],[3,"TypeId"],[3,"ModeSwitch"],[3,"AsciiControlCodes"],[3,"StatusReportCommands"],[13,"RGB"],[13,"Delete"],[13,"Erase"],[13,"Overwrite"],[13,"Insert"]]},\
"theseus_features":{"doc":"This crate exists solely to hold a centralized list of …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"thread_local_macro":{"doc":"Provides a <code>thread_local!()</code> macro, a helper to instantiate …","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11],"n":["AccessError","LocalKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","from","from","into","into","thread_local","to_owned","to_string","try_from","try_from","try_into","try_into","try_with","type_id","type_id","with"],"q":["thread_local_macro","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An error returned by <code>LocalKey::try_with</code>.","A thread-local storage key which owns its contents.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Declare a new thread local storage key of type <code>LocalKey</code>.","","","","","","","Acquires a reference to the value in this TLS key.","","","Acquires a reference to the value in this TLS key."],"i":[0,0,3,1,3,1,1,1,1,3,1,1,3,1,3,1,0,1,1,3,1,3,1,3,3,1,3],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],2],[[3,4],5],[[1,4],5],[[1,4],5],[[]],[[]],[[]],[[]],0,[[]],[[],6],[[],7],[[],7],[[],7],[[],7],[3,[[7,[1]]]],[[],8],[[],8],[3]],"p":[[3,"AccessError"],[15,"bool"],[3,"LocalKey"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"time":{"doc":"This crate contains abstractions to interact with hardware …","t":[8,8,16,3,8,3,18,18,18,18,3,18,3,18,16,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ClockSource","ClockType","ClockType","Duration","EarlySleeper","Instant","MAX","MAX","MICROSECOND","MILLISECOND","Monotonic","NANOSECOND","Period","SECOND","Unit","WallTime","ZERO","ZERO","add","add","add_assign","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div","checked_duration_since","checked_mul","checked_sub","clone","clone","clone","cmp","cmp","cmp","default","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","duration_since","early_sleep","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","hash","into","into","into","into","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","new","new","now","now","partial_cmp","partial_cmp","partial_cmp","register_clock_source","register_early_sleeper","saturating_add","saturating_mul","saturating_sub","sleep","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A clock source.","Either a <code>Monotonic</code> or <code>WallTime</code> clock.","The type of clock (either <code>Monotonic</code> or <code>WallTime</code>).","A <code>Duration</code> type to represent a span of time, typically …","A hardware clock that can sleep without relying on …","A measurement of a monotonically nondecreasing clock.","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","","The duration of one nanosecond.","A clock period, measured in femtoseconds.","The duration of one second.","The type returned by the <code>now</code> function.","","","A duration of zero time.","","","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","","","","","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","Returns the amount of time elapsed from another instant to …","Wait for the given <code>duration</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new period with the specified femtoseconds.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","Creates a new period with the specified femtoseconds.","Creates a new <code>Duration</code> from the specified number of whole …","Returns the current time.","The current time according to the clock.","","","","Register a clock source.","Register the clock source that can be used to sleep when …","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Wait for the given <code>duration</code>.","","","","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","",""],"i":[0,0,18,0,0,0,1,2,2,2,0,2,0,2,19,0,1,2,1,2,1,2,2,2,2,2,2,2,20,21,1,9,2,20,21,1,9,2,2,2,1,2,2,1,9,2,1,9,2,1,2,2,2,2,2,2,2,1,0,1,9,2,1,9,2,20,21,1,9,9,2,2,2,2,2,2,2,1,2,20,21,1,9,2,2,2,2,2,2,1,9,2,0,18,1,9,2,0,0,2,2,2,22,1,1,2,1,2,2,2,2,2,2,20,21,1,9,2,2,2,20,21,1,9,2,20,21,1,9,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[2,2],2],[[1,2]],[[2,2]],[2,3],[2,3],[2,3],[2,4],[2,5],[2,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],[[7,[2]]]],[[2,8],[[7,[2]]]],[[1,1],[[7,[2]]]],[[2,8],[[7,[2]]]],[[2,2],[[7,[2]]]],[1,1],[9,9],[2,2],[[1,1],10],[[9,9],10],[[2,2],10],[[],1],[[],2],[[2,8],2],[[2,8]],[[2,2],5],[[2,2],6],[[2,5],2],[[2,6],2],[[1,1],2],[2],[[1,1],11],[[9,9],11],[[2,2],11],[[1,12],13],[[9,12],13],[[2,12],[[15,[14]]]],[[]],[[]],[[]],[4,9],[[]],[[]],[4,2],[4,2],[4,2],[4,2],[5,2],[6,2],[1],[2],[[]],[[]],[[]],[[]],[[]],[2,11],[[2,8],2],[[2,8]],[[2,5],2],[[2,6],2],[4,1],[4,9],[[4,8],2],[[]],[[]],[[1,1],[[7,[10]]]],[[9,9],[[7,[10]]]],[[2,2],[[7,[10]]]],[9,11],[9,11],[[2,2],2],[[2,8],2],[[2,2],2],[2],[[1,2]],[[1,1]],[[2,2],2],[[1,2]],[[2,2]],[2,8],[2,8],[2,8],[[],2],[[],2],[[],15],[[],15],[[],15],[[],15],[[],15],[5,[[15,[2,16]]]],[6,[[15,[2,16]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],17],[[],17],[[],17],[[],17],[[],17]],"p":[[3,"Instant"],[3,"Duration"],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"Option"],[15,"u32"],[3,"Period"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[3,"TryFromFloatSecsError"],[3,"TypeId"],[8,"ClockSource"],[8,"ClockType"],[3,"Monotonic"],[3,"WallTime"],[8,"EarlySleeper"]]},\
"tlb_shootdown":{"doc":"Support for broadcasting and handling TLB shootdown IPIs. ","t":[5,5],"n":["handle_tlb_shootdown_ipi","init"],"q":["tlb_shootdown",""],"d":["Handles a TLB shootdown IPI requested by another CPU.","Initializes data, functions, and structures for the TLB …"],"i":[0,0],"f":[[[],1],[[]]],"p":[[15,"bool"]]},\
"tls_initializer":{"doc":"Logic for generating Thread-Local Storage (TLS) data image …","t":[13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["InvalidVirtualAddress","NoRemainingSpace","OverlapWithExistingSection","TlsDataImage","TlsInitializer","TlsInitializerError","add_existing_static_tls_section","add_new_dynamic_tls_section","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","empty","empty","fmt","fmt","fmt","from","from","from","get_data","into","into","into","invalidate","set_as_current_tls_base","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["tls_initializer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The included virtual address calculated for a TLS section …","There was insufficient space to insert a TLS section into …","Inserting a TLS section at the included offset would …","An initialized TLS area data image ready to be used by a …","A “factory” that creates Thread-Local Storage (TLS) …","Errors that may occur when adding TLS sections to a …","Add a TLS section that has pre-determined offset, e.g., …","Inserts the given <code>section</code> into this TLS area at the next …","","","","","","","","","Creates an empty TLS initializer with no TLS data sections.","Creates an empty TLS data image with no TLS section …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new copy of the TLS data image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalidates the cached data image in this <code>TlsInitializer</code> …","Sets the current CPU’s TLS register to point to this TLS …","","","","","","","","","",""],"i":[5,5,5,0,0,0,1,1,1,5,7,1,5,7,1,1,1,7,1,5,7,1,5,7,1,1,5,7,1,7,1,1,5,7,1,5,7,1,5,7],"f":[0,0,0,0,0,0,[[1,2,3,3],[[6,[4,5]]]],[[1,2,3],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[],1],[[],7],[[1,8],9],[[5,8],9],[[7,8],9],[[]],[[]],[[]],[1,7],[[]],[[]],[[]],[1],[7],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10]],"p":[[3,"TlsInitializer"],[3,"LoadedSection"],[15,"usize"],[6,"StrongSectionRef"],[4,"TlsInitializerError"],[4,"Result"],[3,"TlsDataImage"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"tsc":{"doc":"","t":[3,11,11,11,11,11,5,11,11,11,11,11,5,11],"n":["TscTicks","add","borrow","borrow_mut","fmt","from","get_tsc_frequency","into","sub","to_ns","try_from","try_into","tsc_ticks","type_id"],"q":["tsc","","","","","","","","","","","","",""],"d":["","Checked addition. Computes <code>self + other</code>,  returning <code>None</code> …","","","","Returns the argument unchanged.","Returns the frequency of the TSC for the system,  …","Calls <code>U::from(self)</code>.","Checked subtraction. Computes <code>self - other</code>,  returning <code>None</code>…","Converts ticks to nanoseconds. ","","","Returns the current number of ticks from the TSC, i.e., …",""],"i":[0,1,1,1,1,1,0,1,1,1,1,1,0,1],"f":[0,[[1,1],[[2,[1]]]],[[]],[[]],[[1,3],4],[[]],[[],[[7,[5,6]]]],[[]],[[1,1],[[2,[1]]]],[1,[[2,[5]]]],[[],7],[[],7],[[],1],[[],8]],"p":[[3,"TscTicks"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"u128"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"tss":{"doc":"","t":[17,5,5],"n":["DOUBLE_FAULT_IST_INDEX","create_tss","tss_set_rsp0"],"q":["tss","",""],"d":["The index of the double fault stack in a TaskStateSegment …","Sets up TSS entry for the given CPU core. ","Sets the current CPU’s TSS privilege stack 0 (RSP0) …"],"i":[0,0,0],"f":[0,[[1,2,2],3],[2,[[5,[4]]]]],"p":[[3,"CpuId"],[3,"VirtualAddress"],[6,"Mutex"],[15,"str"],[4,"Result"]]},\
"tty":{"doc":"This crate provides TTY abstractions.","t":[13,13,13,4,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CtrlC","CtrlD","CtrlZ","Event","LineDiscipline","Master","Slave","Tty","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical","clear_events","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","discipline","discipline","echo","eq","event_receiver","flush","flush","fmt","from","from","from","from","from","into","into","into","into","into","master","new","new","read","read","read","read","read_byte","read_byte","set_canonical","set_echo","set_raw","set_sane","slave","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_read","try_read","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write_byte","write_byte"],"q":["tty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A TTY line discipline.","The master (i.e. terminal) end of a <code>Tty</code>.","The slave (i.e. application) end of a <code>Tty</code>.","A terminal device driver.","","","","","","","","","","","Sets the line discipline to canonical mode.","","","","","","","","","","Equivalent to <code>Self::new</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new line discipline with sane defaults.","","","","","","","","Sets the canonical flag.","Sets the echo flag.","Sets the line discipline to raw mode.","Resets the line discipline to sane defaults.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,3,3,0,0,0,0,0,1,3,4,5,6,1,3,4,5,6,1,1,3,4,5,6,3,4,5,6,1,4,5,6,1,3,1,5,6,3,1,3,4,5,6,1,3,4,5,6,4,1,4,5,5,6,6,5,6,1,1,1,1,4,3,4,5,6,1,3,4,5,6,1,3,4,5,6,5,6,1,3,4,5,6,5,5,6,6,5,6],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[],1],[[],4],[5,[[7,[1]]]],[6,[[7,[1]]]],[1,2],[[3,3],2],[1,[[8,[3]]]],[5,9],[6,9],[[3,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,5],[[],1],[[],4],[5,[[9,[12]]]],[5,[[9,[12]]]],[6,[[9,[12]]]],[6,[[9,[12]]]],[5,[[9,[13]]]],[6,[[9,[13]]]],[[1,2]],[[1,2]],[1],[1],[4,6],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[5,[[9,[12]]]],[6,[[9,[12]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[5,[[9,[12]]]],[5,[[9,[12]]]],[6,[[9,[12]]]],[6,[[9,[12]]]],[[5,13],9],[[6,13],9]],"p":[[3,"LineDiscipline"],[15,"bool"],[4,"Event"],[3,"Tty"],[3,"Master"],[3,"Slave"],[3,"Arc"],[3,"Receiver"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"usize"],[15,"u8"],[4,"Result"],[3,"TypeId"]]},\
"unwind":{"doc":"Support for unwinding the call stack and cleaning up stack …","t":[25,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FuncWithRegisters","StackFrame","StackFrameIter","UnwindingContext","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_site_address","fmt","fmt","from","from","from","initial_address","into","into","into","into_fallible_iter","invoke_with_current_registers","lsda","namespace","next","personality","registers","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["unwind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A single frame in the stack, which contains …","An iterator over the stack frames on the current task’s …","This is the context/state that is used during unwinding …","","","","","","","The <em>call site</em> of this stack frame, i.e., the address of …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The address (starting instruction pointer) of the function …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","This function saves the current CPU register values onto …","The address of the Language-Specific Data Area (LSDA) that …","Returns a reference to the underlying <code>CrateNamespace</code> that …","","The address of the personality function that corresponds …","Returns the array of register values as they existed …","","","","","","","","",""],"i":[0,0,0,0,11,3,1,11,3,1,1,3,1,11,3,1,1,11,3,1,3,0,1,3,3,1,3,11,3,1,11,3,1,11,3,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,4],5],[[1,4],5],[[]],[[]],[[]],[1,2],[[]],[[]],[[]],[[]],[[],[[7,[6]]]],[1,[[8,[2]]]],[3,9],[3,[[7,[8]]]],[1,[[8,[2]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10]],"p":[[3,"StackFrame"],[15,"u64"],[3,"StackFrameIter"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[4,"Option"],[3,"Arc"],[3,"TypeId"],[3,"UnwindingContext"]]},\
"vfs_node":{"doc":"This crate contains a very basic, generic concrete …","t":[3,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11],"n":["VFSDirectory","borrow","borrow_mut","children","create","from","get","get_name","get_parent_dir","insert","into","list","name","parent","remove","set_parent_dir","try_from","try_into","type_id"],"q":["vfs_node","","","","","","","","","","","","","","","","","",""],"d":["A struct that represents a node in the VFS ","","","A list of child filesystem nodes","Creates a new directory and passes a pointer to the new …","Returns the argument unchanged.","","","Returns a pointer to the parent if it exists","","Calls <code>U::from(self)</code>.","Returns a string listing all the children in the directory","The name of the directory","A weak reference to the parent directory","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[0,[[]],[[]],0,[[1,2],[[4,[2,3]]]],[[]],[[5,3],[[7,[6]]]],[5,1],[5,[[7,[2]]]],[[5,6],[[4,[[7,[6]],3]]]],[[]],[5,[[8,[1]]]],0,0,[[5,6],[[7,[6]]]],[[5,9]],[[],4],[[],4],[[],10]],"p":[[3,"String"],[6,"DirRef"],[15,"str"],[4,"Result"],[3,"VFSDirectory"],[4,"FileOrDir"],[4,"Option"],[3,"Vec"],[6,"WeakDirRef"],[3,"TypeId"]]},\
"vga_buffer":{"doc":"Support for basic printing to a simple 80x25 text-mode VGA …","t":[13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Black","Blue","Brown","Color","ColorCode","Cyan","DarkGray","Green","LightBlue","LightCyan","LightGray","LightGreen","LightRed","Magenta","Pink","Red","ScreenChar","VgaBuffer","White","Yellow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","new","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_byte","write_str"],"q":["vga_buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,6,1,2,3,6,1,2,3,1,2,3,2,1,2,3,6,1,2,3,6,1,2,3,6,2,3,6,1,2,3,6,1,2,3,6,1,2,3,6,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[],2],[[1,4],5],[[2,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[1,1],2],[[7,2],3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[6,7]],[[6,10],5]],"p":[[4,"Color"],[3,"ColorCode"],[3,"ScreenChar"],[3,"Formatter"],[6,"Result"],[3,"VgaBuffer"],[15,"u8"],[4,"Result"],[3,"TypeId"],[15,"str"]]},\
"virtual_nic":{"doc":"This crate defines a struct that enables language-level …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["VirtualNic","borrow","borrow_mut","drop","from","get_received_frame","id","into","mac_address","new","poll_receive","send_packet","send_packet_on_queue","try_from","try_into","type_id"],"q":["virtual_nic","","","","","","","","","","","","","","",""],"d":["A structure that contains a set of <code>RxQueue</code>s and <code>TxQueue</code>s …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Create a new <code>VirtualNIC</code> with the given parameters. For now …","","","Send a packet on the specified queue.","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[0,[[]],[[]],[[[5,[1,2,3,4]]]],[[]],[[[5,[1,2,3,4]]],[[7,[6]]]],[[[5,[1,2,3,4]]],8],[[]],[[[5,[1,2,3,4]]]],[[[10,[[9,[1,2]]]],11,[10,[[12,[3,4]]]],11,13],[[15,[[5,[1,2,3,4]],14]]]],[[[5,[1,2,3,4]]],[[15,[14]]]],[[[5,[1,2,3,4]],16],[[15,[14]]]],[[[5,[1,2,3,4]],11,16],[[15,[14]]]],[[],15],[[],15],[[],17]],"p":[[8,"RxQueueRegisters"],[8,"RxDescriptor"],[8,"TxQueueRegisters"],[8,"TxDescriptor"],[3,"VirtualNic"],[3,"ReceivedFrame"],[4,"Option"],[15,"u8"],[3,"RxQueue"],[3,"Vec"],[15,"usize"],[3,"TxQueue"],[3,"MutexIrqSafe"],[15,"str"],[4,"Result"],[3,"TransmitBuffer"],[3,"TypeId"]]},\
"wait_condition":{"doc":"Simple condition variables that are convenience wrappers …","t":[3,3,25,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SatisfiedWaitCondition","WaitCondition","WaitConditionFn","borrow","borrow","borrow_mut","borrow_mut","condition_satisfied","from","from","into","into","new","notify_one","try_from","try_from","try_into","try_into","type_id","type_id","wait"],"q":["wait_condition","","","","","","","","","","","","","","","","","","","",""],"d":["A type wrapper that guarantees a given condition has been …","A condition variable that allows multiple <code>Task</code>s to wait …","The closure type that can be used within a <code>WaitCondition</code>: …","","","","","This function should be invoked after the wait condition …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>WaitCondition</code> in which <code>Task</code>s can wait for a …","Wake up a random <code>Task</code> that is waiting on this condition.","","","","","","","Waits for the condition to be true in a blocking fashion  …"],"i":[0,0,0,2,3,2,3,2,2,3,2,3,2,3,2,3,2,3,2,3,2],"f":[0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[4,[[3,[1]]]]]],[[]],[[]],[[]],[[]],[1,[[2,[1]]]],[[[3,[5]]],6],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[[2,[1]]]]],"p":[[8,"Fn"],[3,"WaitCondition"],[3,"SatisfiedWaitCondition"],[4,"Option"],[25,"WaitConditionFn"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"wait_guard":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["WaitGuard","block_again","borrow","borrow_mut","drop","from","into","new","task","try_from","try_into","type_id"],"q":["wait_guard","","","","","","","","","","",""],"d":["An object that holds a blocked <code>Task</code> that will be …","Blocks the task guarded by this guard, which is useful to …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Blocks the given <code>Task</code> and returns a new <code>WaitGuard</code> object …","Returns a reference to the task being blocked by this …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[2,2]]]],[[]],[[]],[1],[[]],[[]],[4,[[3,[1,2]]]],[1,4],[[],3],[[],3],[[],5]],"p":[[3,"WaitGuard"],[4,"RunState"],[4,"Result"],[3,"TaskRef"],[3,"TypeId"]]},\
"wait_queue":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["WaitQueue","borrow","borrow_mut","from","into","new","notify_all","notify_one","try_from","try_into","type_id","wait_until"],"q":["wait_queue","","","","","","","","","","",""],"d":["A queue of tasks waiting for an event to occur.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new empty wait queue.","Notifies all the tasks in the wait queue.","Notifies the first task in the wait queue.","","","","Blocks the current task until the given condition succeeds."],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[]],[[]],[[],1],[1],[1,2],[[],3],[[],3],[[],4],[1]],"p":[[3,"WaitQueue"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"waker":{"doc":"A standard implementation of a Waker + Blocker pair – a …","t":[3,11,11,11,11,11,5,11,11,11],"n":["Blocker","block","borrow","borrow_mut","from","into","new_waker","try_from","try_into","type_id"],"q":["waker","","","","","","","","",""],"d":["A blocker that blocks until the associated waker is woken.","Blocks the current task by putting it to sleep until the …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new waker and blocker pair that are associated …","","",""],"i":[0,1,1,1,1,1,0,1,1,1],"f":[0,[1],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3]],"p":[[3,"Blocker"],[4,"Result"],[3,"TypeId"]]},\
"waker_generic":{"doc":"A standalone, generic implementation of a Waker + Blocker …","t":[3,11,11,11,11,11,5,11,11,11],"n":["Blocker","block","borrow","borrow_mut","from","into","new_waker","try_from","try_into","type_id"],"q":["waker_generic","","","","","","","","",""],"d":["A blocker that blocks in a loop until the associated waker …","Performs the given <code>block_action</code> within this <code>Blocker</code>, …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new waker and blocker pair that are associated …","","",""],"i":[0,1,1,1,1,1,0,1,1,1],"f":[0,[1],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3]],"p":[[3,"Blocker"],[4,"Result"],[3,"TypeId"]]},\
"wasi_interpreter":{"doc":"Interpreter for executing WASI-compliant WASM binaries.","t":[3,11,11,11,11,5,11,11,11,11,11,14,11,11,11],"n":["HostExternals","as_any","as_any_mut","borrow","borrow_mut","execute_binary","from","into","into_any","into_any_rc","invoke_index","sig","try_from","try_into","type_id"],"q":["wasi_interpreter","","","","","","","","","","","","","",""],"d":["Theseus and wasmi I/O required to execute WASI system …","","","","","Executes a WASI-compliant WebAssembly binary.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Function used by wasmi to invoke a system call given a …","Macro to efficiently generate wasmi function signature.","","",""],"i":[0,9,9,9,9,0,9,9,9,9,9,0,9,9,9],"f":[0,[[],1],[[],1],[[]],[[]],[[[3,[2]],[3,[4]],[3,[4]]],5],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[[9,10,11],[[15,[[13,[12]],14]]]],0,[[],15],[[],15],[[],16]],"p":[[8,"Any"],[15,"u8"],[3,"Vec"],[3,"String"],[15,"isize"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"HostExternals"],[15,"usize"],[3,"RuntimeArgs"],[4,"RuntimeValue"],[4,"Option"],[3,"Trap"],[4,"Result"],[3,"TypeId"]]},\
"window":{"doc":"A <code>Window</code> object should be owned by an application. It can …","t":[6,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FramebufferRef","FramebufferRefMut","Window","area","borrow","borrow_mut","drop","framebuffer","framebuffer_mut","from","handle_event","into","is_active","new","render","try_from","try_into","type_id"],"q":["window","","","","","","","","","","","","","","","","",""],"d":["A wrapper around a locked inner window that immutably …","A wrapper around a locked inner window that mutably derefs …","This struct is the application-facing representation of a …","Returns a <code>Rectangle</code> describing the position and dimensions …","","","","Returns an immutable reference to this window’s virtual …","Returns a mutable reference to this window’s virtual …","Returns the argument unchanged.","Tries to receive an <code>Event</code> that has been sent to this <code>Window</code>…","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this window is the currently active …","Creates a new window to be displayed on screen. ","Renders the area of this <code>Window</code> specified by the given …","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,[1,2],[[]],[[]],[1],[1,3],[1,4],[[]],[1,[[8,[[6,[5]],7]]]],[[]],[1,9],[[10,11,11,12],[[8,[1,7]]]],[[1,[6,[2]]],[[8,[7]]]],[[],8],[[],8],[[],13]],"p":[[3,"Window"],[3,"Rectangle"],[6,"FramebufferRef"],[6,"FramebufferRefMut"],[4,"Event"],[4,"Option"],[15,"str"],[4,"Result"],[15,"bool"],[3,"Coord"],[15,"usize"],[3,"Color"],[3,"TypeId"]]},\
"window_inner":{"doc":"The <code>WindowInner</code> struct is the internal representation of a …","t":[17,17,13,13,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11],"n":["DEFAULT_BORDER_SIZE","DEFAULT_TITLE_BAR_HEIGHT","Moving","Stationary","WindowInner","WindowMovingStatus","border_size","borrow","borrow","borrow_mut","borrow_mut","contains","content_area","framebuffer","framebuffer_mut","from","from","get_border_size","get_pixel","get_position","get_size","get_title_bar_height","into","into","moving","new","resize","send_event","set_position","title_bar_height","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["window_inner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","The window is currently in motion.  The enclosed <code>Coord</code> …","The window is not in motion.","The <code>WindowInner</code> struct is the internal system-facing …","Whether a window is moving (being dragged by the mouse).","The width of the border in pixels. By default, there is a …","","","","","Returns <code>true</code> if the given <code>coordinate</code> (relative to the …","Returns the position and dimensions of the Window’s …","Returns an immutable reference to this window’s virtual …","Returns a mutable reference to this window’s virtual …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the size of the Window border in pixels.  There is …","Returns the pixel value at the given <code>coordinate</code>, if the …","Gets the top-left position of the window relative to the …","Gets the size of a window in pixels","Returns the size of the Window title bar in pixels.  There …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether a window is moving or stationary.","Creates a new <code>WindowInner</code> object backed by the given …","Resizes and moves this window to fit the given <code>Rectangle</code> …","Sends the given <code>event</code> to this window.","Sets the top-left position of the window relative to the …","The height of title bar in pixels. By default, there is …","","","","","",""],"i":[0,0,14,14,0,0,1,14,1,14,1,1,1,1,1,14,1,1,1,1,1,1,14,1,1,1,1,1,1,1,14,1,14,1,14,1],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],3],[1,4],[1,5],[1,5],[[]],[[]],[1,6],[[1,2],[[8,[7]]]],[1,2],[1],[1,6],[[]],[[]],0,[[2,[5,[7]],[10,[9]]],1],[[1,4],[[12,[11]]]],[[1,9],[[12,[9]]]],[[1,2]],0,[[],12],[[],12],[[],12],[[],12],[[],13],[[],13]],"p":[[3,"WindowInner"],[3,"Coord"],[15,"bool"],[3,"Rectangle"],[3,"Framebuffer"],[15,"usize"],[3,"AlphaPixel"],[4,"Option"],[4,"Event"],[3,"Queue"],[15,"str"],[4,"Result"],[3,"TypeId"],[4,"WindowMovingStatus"]]},\
"window_manager":{"doc":"This crate acts as a manager of a list of windows. It …","t":[7,3,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["WINDOW_MANAGER","WindowManager","borrow","borrow_mut","delete_window","final_fb","from","get_screen_size","init","into","is_active","move_active_window","move_floating_border","refresh_active_window","refresh_bottom_windows","refresh_mouse","refresh_top","refresh_windows","set_active","try_from","try_into","type_id"],"q":["window_manager","","","","","","","","","","","","","","","","","","","","",""],"d":["The instance of the default window manager","Window manager structure which maintains a list of windows …","","","delete a window and refresh its region","The final framebuffer which is mapped to the screen (the …","Returns the argument unchanged.","Returns the <code>(width, height)</code> in pixels of the screen itself …","Initialize the window manager. It returns …","Calls <code>U::from(self)</code>.","Returns true if the given <code>window</code> is the currently active …","take active window’s base position and current mouse, …","Move the floating border when a window is moving.","Refresh the part in <code>bounding_box</code> of the active window. …","Refresh the region in <code>bounding_box</code>. Only render the bottom …","Refresh the mouse display","Refresh the region of <code>bounding_box</code> in the top framebuffer","Refresh the part in <code>bounding_box</code> of every window. …","Sets one window as active, push last active (if exists) to …","","",""],"i":[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[]],[[]],[[1,2],[[4,[3]]]],0,[[]],[1],[[],[[4,[3]]]],[[]],[[1,2],5],[1,[[4,[3]]]],[1,[[4,[3]]]],[[1,[7,[6]]],[[4,[3]]]],[[1,[0,[8,9]],5],[[4,[3]]]],[1,[[4,[3]]]],[[1,[0,[8,9]]],[[4,[3]]]],[[1,[0,[8,9]]],[[4,[3]]]],[[1,2,5],[[4,[5,3]]]],[[],4],[[],4],[[],10]],"p":[[3,"WindowManager"],[3,"Arc"],[15,"str"],[4,"Result"],[15,"bool"],[3,"Rectangle"],[4,"Option"],[8,"IntoIterator"],[8,"Clone"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
